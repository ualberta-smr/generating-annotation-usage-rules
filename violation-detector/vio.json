[
    {
        "candidate-rule-id": 1144405872,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e1144405872\\Correct.java",
        "precondition": "src:class[(src:annotation[src:name[text()='Path']])]",
        "postcondition": "src:class[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='RegisterRestClient']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']] and src:annotation[src:name[text()='Claim']])] and src:block/src:function[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='Produces']] and src:annotation[src:name[text()='GET']] and src:annotation[src:name[text()='Traced']])])]",
        "grammar": "class must have (annotation \"Path\" and annotation \"RegisterRestClient\" and declaration statement with (annotation \"Inject\" and annotation \"Claim\" ) and function with (annotation \"Path\" and annotation \"Produces\" and annotation \"GET\" and annotation \"Traced\" ) )",
        "details": [
            {
                "element": "src:class",
                "violation": "src:annotation[src:name[text()='RegisterRestClient']]",
                "position": [
                    "12",
                    "1"
                ]
            },
            {
                "element": "src:function",
                "violation": "src:annotation[src:name[text()='Traced']]",
                "position": [
                    "26",
                    "5"
                ]
            }
        ]
    },
    {
        "candidate-rule-id": -1569715546,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e1144405872\\Correct.java",
        "precondition": "src:class[(descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']])])]",
        "postcondition": "src:class[(descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']] and src:annotation[src:name[text()='RestClient']] and src:annotation[src:name[text()='Claim']])])]",
        "grammar": "class must have (declaration statement with (annotation \"Inject\" and annotation \"RestClient\" and annotation \"Claim\" ) )",
        "details": [
            {
                "element": "src:decl",
                "violation": "src:annotation[src:name[text()='RestClient']]",
                "position": [
                    "16",
                    "5"
                ]
            }
        ]
    },
    {
        "candidate-rule-id": 788072703,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e1144405872\\Correct.java",
        "precondition": "src:class[(src:block/src:function[(src:annotation[src:name[text()='GET']])])]",
        "postcondition": "src:class[(src:annotation[src:name[text()='RegisterRestClient']] and src:block/src:function[(src:annotation[src:name[text()='GET']] and src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='Produces']] and src:annotation[src:name[text()='Traced']] and src:annotation[src:name[text()='Operation']])])]",
        "grammar": "class must have (annotation \"RegisterRestClient\" and function with (annotation \"GET\" and annotation \"Path\" and annotation \"Produces\" and annotation \"Traced\" and annotation \"Operation\" ) )",
        "details": [
            {
                "element": "src:class",
                "violation": "src:annotation[src:name[text()='RegisterRestClient']]",
                "position": [
                    "12",
                    "1"
                ]
            },
            {
                "element": "src:function",
                "violation": "src:annotation[src:name[text()='Traced']]",
                "position": [
                    "26",
                    "5"
                ]
            },
            {
                "element": "src:function",
                "violation": "src:annotation[src:name[text()='Operation']]",
                "position": [
                    "26",
                    "5"
                ]
            }
        ]
    },
    {
        "candidate-rule-id": 958033635,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e1144405872\\Correct.java",
        "precondition": "src:class[(src:annotation[src:name[text()='Path']] and src:block/src:function[(src:annotation[src:name[text()='GET']])])]",
        "postcondition": "src:class[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='RegisterRestClient']] and src:block/src:function[(src:annotation[src:name[text()='GET']] and src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='Produces']] and src:annotation[src:name[text()='Traced']])])]",
        "grammar": "class must have (annotation \"Path\" and annotation \"RegisterRestClient\" and function with (annotation \"GET\" and annotation \"Path\" and annotation \"Produces\" and annotation \"Traced\" ) )",
        "details": [
            {
                "element": "src:class",
                "violation": "src:annotation[src:name[text()='RegisterRestClient']]",
                "position": [
                    "12",
                    "1"
                ]
            },
            {
                "element": "src:function",
                "violation": "src:annotation[src:name[text()='Traced']]",
                "position": [
                    "26",
                    "5"
                ]
            }
        ]
    },
    {
        "candidate-rule-id": 538030893,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e1144405872\\Correct.java",
        "precondition": "src:class[(src:annotation[src:name[text()='Path']] and src:block/src:function[(src:annotation[src:name[text()='Produces']])])]",
        "postcondition": "src:class[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='RegisterRestClient']] and src:block/src:function[(src:annotation[src:name[text()='Produces']] and src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='GET']] and src:annotation[src:name[text()='Traced']])])]",
        "grammar": "class must have (annotation \"Path\" and annotation \"RegisterRestClient\" and function with (annotation \"Produces\" and annotation \"Path\" and annotation \"GET\" and annotation \"Traced\" ) )",
        "details": [
            {
                "element": "src:class",
                "violation": "src:annotation[src:name[text()='RegisterRestClient']]",
                "position": [
                    "12",
                    "1"
                ]
            },
            {
                "element": "src:function",
                "violation": "src:annotation[src:name[text()='Traced']]",
                "position": [
                    "26",
                    "5"
                ]
            }
        ]
    },
    {
        "candidate-rule-id": -1124395966,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e1144405872\\Correct.java",
        "precondition": "src:class[(src:block/src:function[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='GET']])])]",
        "postcondition": "src:class[(src:annotation[src:name[text()='RegisterRestClient']] and src:annotation[src:name[text()='Path']] and src:block/src:function[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='GET']])])]",
        "grammar": "class must have (annotation \"RegisterRestClient\" and annotation \"Path\" and function with (annotation \"Path\" and annotation \"GET\" ) )",
        "details": [
            {
                "element": "src:class",
                "violation": "src:annotation[src:name[text()='RegisterRestClient']]",
                "position": [
                    "12",
                    "1"
                ]
            }
        ]
    },
    {
        "candidate-rule-id": -149959793,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e1144405872\\Correct.java",
        "precondition": "src:class[(src:annotation[src:name[text()='Path']] and src:block/src:function[(src:annotation[src:name[text()='Path']])])]",
        "postcondition": "src:class[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='RegisterRestClient']] and src:block/src:function[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='GET']] and src:annotation[src:name[text()='Traced']] and src:annotation[src:name[text()='Operation']] and src:type[src:name[text()='Response']])])]",
        "grammar": "class must have (annotation \"Path\" and annotation \"RegisterRestClient\" and function with (annotation \"Path\" and annotation \"GET\" and annotation \"Traced\" and annotation \"Operation\" and type \"Response\" ) )",
        "details": [
            {
                "element": "src:class",
                "violation": "src:annotation[src:name[text()='RegisterRestClient']]",
                "position": [
                    "12",
                    "1"
                ]
            }
        ]
    },
    {
        "candidate-rule-id": 1596508348,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e1144405872\\Correct.java",
        "precondition": "src:class[(src:block/src:function[(src:annotation[src:name[text()='Produces']] and src:annotation[src:name[text()='GET']])])]",
        "postcondition": "src:class[(src:annotation[src:name[text()='RegisterRestClient']] and src:annotation[src:name[text()='Path']] and src:block/src:function[(src:annotation[src:name[text()='Produces']] and src:annotation[src:name[text()='GET']])])]",
        "grammar": "class must have (annotation \"RegisterRestClient\" and annotation \"Path\" and function with (annotation \"Produces\" and annotation \"GET\" ) )",
        "details": [
            {
                "element": "src:class",
                "violation": "src:annotation[src:name[text()='RegisterRestClient']]",
                "position": [
                    "12",
                    "1"
                ]
            }
        ]
    },
    {
        "candidate-rule-id": 1353807258,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e1144405872\\Correct.java",
        "precondition": "src:class[(src:block/src:function[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='GET']])])]",
        "postcondition": "src:class[(src:annotation[src:name[text()='RegisterRestClient']] and src:annotation[src:name[text()='Path']] and src:block/src:function[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='GET']])])]",
        "grammar": "class must have (annotation \"RegisterRestClient\" and annotation \"Path\" and function with (annotation \"Path\" and annotation \"GET\" ) )",
        "details": [
            {
                "element": "src:class",
                "violation": "src:annotation[src:name[text()='RegisterRestClient']]",
                "position": [
                    "12",
                    "1"
                ]
            }
        ]
    },
    {
        "candidate-rule-id": 371646083,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e1144405872\\Correct.java",
        "precondition": "src:class[(src:block/src:function[(src:annotation[src:name[text()='Path']])])]",
        "postcondition": "src:class[(src:block/src:function[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='GET']] and src:annotation[src:name[text()='Traced']])])]",
        "grammar": "class must have (function with (annotation \"Path\" and annotation \"GET\" and annotation \"Traced\" ) )",
        "details": [
            {
                "element": "src:function",
                "violation": "src:annotation[src:name[text()='Traced']]",
                "position": [
                    "26",
                    "5"
                ]
            }
        ]
    },
    {
        "candidate-rule-id": -858730437,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e1144405872\\Correct.java",
        "precondition": "src:class[(src:annotation[src:name[text()='Path']] and src:block/src:function[(src:annotation[src:name[text()='GET']])])]",
        "postcondition": "src:class[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='RegisterRestClient']] and src:block/src:function[(src:annotation[src:name[text()='GET']] and src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='Produces']] and src:annotation[src:name[text()='Traced']])])]",
        "grammar": "class must have (annotation \"Path\" and annotation \"RegisterRestClient\" and function with (annotation \"GET\" and annotation \"Path\" and annotation \"Produces\" and annotation \"Traced\" ) )",
        "details": [
            {
                "element": "src:class",
                "violation": "src:annotation[src:name[text()='RegisterRestClient']]",
                "position": [
                    "12",
                    "1"
                ]
            },
            {
                "element": "src:function",
                "violation": "src:annotation[src:name[text()='Traced']]",
                "position": [
                    "26",
                    "5"
                ]
            }
        ]
    },
    {
        "candidate-rule-id": -1479824569,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e1144405872\\Correct.java",
        "precondition": "src:class[(src:annotation[src:name[text()='Path']] and src:block/src:function[(src:annotation[src:name[text()='Path']])])]",
        "postcondition": "src:class[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='RegisterRestClient']] and src:block/src:function[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='Produces']] and src:annotation[src:name[text()='GET']] and src:annotation[src:name[text()='Traced']] and src:annotation[src:name[text()='Operation']] and src:type[src:name[text()='Response']])])]",
        "grammar": "class must have (annotation \"Path\" and annotation \"RegisterRestClient\" and function with (annotation \"Path\" and annotation \"Produces\" and annotation \"GET\" and annotation \"Traced\" and annotation \"Operation\" and type \"Response\" ) )",
        "details": [
            {
                "element": "src:class",
                "violation": "src:annotation[src:name[text()='RegisterRestClient']]",
                "position": [
                    "12",
                    "1"
                ]
            }
        ]
    },
    {
        "candidate-rule-id": -554362854,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e1144405872\\Correct.java",
        "precondition": "src:class[(descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']])])]",
        "postcondition": "src:class[(descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']] and src:annotation[src:name[text()='ConfigProperty']] and src:type[src:name[text()='String']])])]",
        "grammar": "class must have (declaration statement with (annotation \"Inject\" and annotation \"ConfigProperty\" and type \"String\" ) )",
        "details": [
            {
                "element": "src:decl",
                "violation": "src:annotation[src:name[text()='ConfigProperty']]",
                "position": [
                    "16",
                    "5"
                ]
            }
        ]
    },
    {
        "candidate-rule-id": -114835556,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e1144405872\\Correct.java",
        "precondition": "src:class[(descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']] and src:type[src:name[text()='String']])])]",
        "postcondition": "src:class[(descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']] and src:annotation[src:name[text()='ConfigProperty']] and src:type[src:name[text()='String']])])]",
        "grammar": "class must have (declaration statement with (annotation \"Inject\" and annotation \"ConfigProperty\" and type \"String\" ) )",
        "details": [
            {
                "element": "src:decl",
                "violation": "src:annotation[src:name[text()='ConfigProperty']]",
                "position": [
                    "16",
                    "5"
                ]
            }
        ]
    },
    {
        "candidate-rule-id": 1392587348,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e1144405872\\Correct.java",
        "precondition": "src:class[(src:block/src:function[(src:annotation[src:name[text()='Produces']])])]",
        "postcondition": "src:class[(src:block/src:function[(src:annotation[src:name[text()='Produces']] and src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='Operation']])])]",
        "grammar": "class must have (function with (annotation \"Produces\" and annotation \"Path\" and annotation \"Operation\" ) )",
        "details": [
            {
                "element": "src:function",
                "violation": "src:annotation[src:name[text()='Operation']]",
                "position": [
                    "26",
                    "5"
                ]
            }
        ]
    },
    {
        "candidate-rule-id": 649643651,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e1144405872\\Correct.java",
        "precondition": "src:class[(src:block/src:function[(src:annotation[src:name[text()='Produces']] and src:annotation[src:name[text()='Path']])])]",
        "postcondition": "src:class[(src:annotation[src:name[text()='RegisterRestClient']] and src:annotation[src:name[text()='Path']] and src:block/src:function[(src:annotation[src:name[text()='Produces']] and src:annotation[src:name[text()='Path']])])]",
        "grammar": "class must have (annotation \"RegisterRestClient\" and annotation \"Path\" and function with (annotation \"Produces\" and annotation \"Path\" ) )",
        "details": [
            {
                "element": "src:class",
                "violation": "src:annotation[src:name[text()='RegisterRestClient']]",
                "position": [
                    "12",
                    "1"
                ]
            }
        ]
    },
    {
        "candidate-rule-id": -20402558,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e1144405872\\Correct.java",
        "precondition": "src:class[(src:block/src:function[(src:annotation[src:name[text()='Path']])])]",
        "postcondition": "src:class[(src:annotation[src:name[text()='RegisterRestClient']] and src:block/src:function[(src:annotation[src:name[text()='Path']])])]",
        "grammar": "class must have (annotation \"RegisterRestClient\" and function with (annotation \"Path\" ) )",
        "details": [
            {
                "element": "src:class",
                "violation": "src:annotation[src:name[text()='RegisterRestClient']]",
                "position": [
                    "12",
                    "1"
                ]
            }
        ]
    },
    {
        "candidate-rule-id": -516519425,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e1144405872\\Correct.java",
        "precondition": "src:class[(src:annotation[src:name[text()='Path']])]",
        "postcondition": "src:class[(src:annotation[src:name[text()='Path']] and src:block/src:function[(src:annotation[src:name[text()='Operation']])])]",
        "grammar": "class must have (annotation \"Path\" and function with (annotation \"Operation\" ) )",
        "details": []
    },
    {
        "candidate-rule-id": -1569715546,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e1144405872\\hello.java",
        "precondition": "src:class[(descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']])])]",
        "postcondition": "src:class[(descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']] and src:annotation[src:name[text()='RestClient']] and src:annotation[src:name[text()='Claim']])])]",
        "grammar": "class must have (declaration statement with (annotation \"Inject\" and annotation \"RestClient\" and annotation \"Claim\" ) )",
        "details": [
            {
                "element": "src:decl",
                "violation": "src:annotation[src:name[text()='RestClient']]",
                "position": [
                    "42",
                    "5"
                ]
            }
        ]
    },
    {
        "candidate-rule-id": 788072703,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e1144405872\\hello.java",
        "precondition": "src:class[(src:block/src:function[(src:annotation[src:name[text()='GET']])])]",
        "postcondition": "src:class[(src:annotation[src:name[text()='RegisterRestClient']] and src:block/src:function[(src:annotation[src:name[text()='GET']] and src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='Produces']] and src:annotation[src:name[text()='Traced']] and src:annotation[src:name[text()='Operation']])])]",
        "grammar": "class must have (annotation \"RegisterRestClient\" and function with (annotation \"GET\" and annotation \"Path\" and annotation \"Produces\" and annotation \"Traced\" and annotation \"Operation\" ) )",
        "details": [
            {
                "element": "src:function",
                "violation": "src:annotation[src:name[text()='Operation']]",
                "position": [
                    "85",
                    "5"
                ]
            }
        ]
    },
    {
        "candidate-rule-id": -149959793,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e1144405872\\hello.java",
        "precondition": "src:class[(src:annotation[src:name[text()='Path']] and src:block/src:function[(src:annotation[src:name[text()='Path']])])]",
        "postcondition": "src:class[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='RegisterRestClient']] and src:block/src:function[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='GET']] and src:annotation[src:name[text()='Traced']] and src:annotation[src:name[text()='Operation']] and src:type[src:name[text()='Response']])])]",
        "grammar": "class must have (annotation \"Path\" and annotation \"RegisterRestClient\" and function with (annotation \"Path\" and annotation \"GET\" and annotation \"Traced\" and annotation \"Operation\" and type \"Response\" ) )",
        "details": [
            {
                "element": "src:function",
                "violation": "src:annotation[src:name[text()='Operation']]",
                "position": [
                    "85",
                    "5"
                ]
            },
            {
                "element": "src:function",
                "violation": "src:type[src:name[text()='Response']]",
                "position": [
                    "85",
                    "5"
                ]
            }
        ]
    },
    {
        "candidate-rule-id": -1479824569,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e1144405872\\hello.java",
        "precondition": "src:class[(src:annotation[src:name[text()='Path']] and src:block/src:function[(src:annotation[src:name[text()='Path']])])]",
        "postcondition": "src:class[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='RegisterRestClient']] and src:block/src:function[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='Produces']] and src:annotation[src:name[text()='GET']] and src:annotation[src:name[text()='Traced']] and src:annotation[src:name[text()='Operation']] and src:type[src:name[text()='Response']])])]",
        "grammar": "class must have (annotation \"Path\" and annotation \"RegisterRestClient\" and function with (annotation \"Path\" and annotation \"Produces\" and annotation \"GET\" and annotation \"Traced\" and annotation \"Operation\" and type \"Response\" ) )",
        "details": [
            {
                "element": "src:function",
                "violation": "src:annotation[src:name[text()='Operation']]",
                "position": [
                    "85",
                    "5"
                ]
            },
            {
                "element": "src:function",
                "violation": "src:type[src:name[text()='Response']]",
                "position": [
                    "85",
                    "5"
                ]
            }
        ]
    },
    {
        "candidate-rule-id": -554362854,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e1144405872\\hello.java",
        "precondition": "src:class[(descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']])])]",
        "postcondition": "src:class[(descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']] and src:annotation[src:name[text()='ConfigProperty']] and src:type[src:name[text()='String']])])]",
        "grammar": "class must have (declaration statement with (annotation \"Inject\" and annotation \"ConfigProperty\" and type \"String\" ) )",
        "details": [
            {
                "element": "src:decl",
                "violation": "src:annotation[src:name[text()='ConfigProperty']]",
                "position": [
                    "42",
                    "5"
                ]
            }
        ]
    },
    {
        "candidate-rule-id": -114835556,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e1144405872\\hello.java",
        "precondition": "src:class[(descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']] and src:type[src:name[text()='String']])])]",
        "postcondition": "src:class[(descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']] and src:annotation[src:name[text()='ConfigProperty']] and src:type[src:name[text()='String']])])]",
        "grammar": "class must have (declaration statement with (annotation \"Inject\" and annotation \"ConfigProperty\" and type \"String\" ) )",
        "details": [
            {
                "element": "src:decl",
                "violation": "src:annotation[src:name[text()='ConfigProperty']]",
                "position": [
                    "42",
                    "5"
                ]
            }
        ]
    },
    {
        "candidate-rule-id": 1392587348,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e1144405872\\hello.java",
        "precondition": "src:class[(src:block/src:function[(src:annotation[src:name[text()='Produces']])])]",
        "postcondition": "src:class[(src:block/src:function[(src:annotation[src:name[text()='Produces']] and src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='Operation']])])]",
        "grammar": "class must have (function with (annotation \"Produces\" and annotation \"Path\" and annotation \"Operation\" ) )",
        "details": [
            {
                "element": "src:function",
                "violation": "src:annotation[src:name[text()='Operation']]",
                "position": [
                    "85",
                    "5"
                ]
            }
        ]
    },
    {
        "candidate-rule-id": -516519425,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e1144405872\\hello.java",
        "precondition": "src:class[(src:annotation[src:name[text()='Path']])]",
        "postcondition": "src:class[(src:annotation[src:name[text()='Path']] and src:block/src:function[(src:annotation[src:name[text()='Operation']])])]",
        "grammar": "class must have (annotation \"Path\" and function with (annotation \"Operation\" ) )",
        "details": []
    },
    {
        "candidate-rule-id": 1144405872,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e1144405872\\Incorrect.java",
        "precondition": "src:class[(src:annotation[src:name[text()='Path']])]",
        "postcondition": "src:class[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='RegisterRestClient']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']] and src:annotation[src:name[text()='Claim']])] and src:block/src:function[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='Produces']] and src:annotation[src:name[text()='GET']] and src:annotation[src:name[text()='Traced']])])]",
        "grammar": "class must have (annotation \"Path\" and annotation \"RegisterRestClient\" and declaration statement with (annotation \"Inject\" and annotation \"Claim\" ) and function with (annotation \"Path\" and annotation \"Produces\" and annotation \"GET\" and annotation \"Traced\" ) )",
        "details": [
            {
                "element": "src:function",
                "violation": "src:annotation[src:name[text()='Traced']]",
                "position": [
                    "18",
                    "5"
                ]
            }
        ]
    },
    {
        "candidate-rule-id": -1569715546,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e1144405872\\Incorrect.java",
        "precondition": "src:class[(descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']])])]",
        "postcondition": "src:class[(descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']] and src:annotation[src:name[text()='RestClient']] and src:annotation[src:name[text()='Claim']])])]",
        "grammar": "class must have (declaration statement with (annotation \"Inject\" and annotation \"RestClient\" and annotation \"Claim\" ) )",
        "details": [
            {
                "element": "src:decl",
                "violation": "src:annotation[src:name[text()='RestClient']]",
                "position": [
                    "13",
                    "5"
                ]
            }
        ]
    },
    {
        "candidate-rule-id": 788072703,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e1144405872\\Incorrect.java",
        "precondition": "src:class[(src:block/src:function[(src:annotation[src:name[text()='GET']])])]",
        "postcondition": "src:class[(src:annotation[src:name[text()='RegisterRestClient']] and src:block/src:function[(src:annotation[src:name[text()='GET']] and src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='Produces']] and src:annotation[src:name[text()='Traced']] and src:annotation[src:name[text()='Operation']])])]",
        "grammar": "class must have (annotation \"RegisterRestClient\" and function with (annotation \"GET\" and annotation \"Path\" and annotation \"Produces\" and annotation \"Traced\" and annotation \"Operation\" ) )",
        "details": [
            {
                "element": "src:function",
                "violation": "src:annotation[src:name[text()='Traced']]",
                "position": [
                    "18",
                    "5"
                ]
            },
            {
                "element": "src:function",
                "violation": "src:annotation[src:name[text()='Operation']]",
                "position": [
                    "18",
                    "5"
                ]
            }
        ]
    },
    {
        "candidate-rule-id": 958033635,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e1144405872\\Incorrect.java",
        "precondition": "src:class[(src:annotation[src:name[text()='Path']] and src:block/src:function[(src:annotation[src:name[text()='GET']])])]",
        "postcondition": "src:class[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='RegisterRestClient']] and src:block/src:function[(src:annotation[src:name[text()='GET']] and src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='Produces']] and src:annotation[src:name[text()='Traced']])])]",
        "grammar": "class must have (annotation \"Path\" and annotation \"RegisterRestClient\" and function with (annotation \"GET\" and annotation \"Path\" and annotation \"Produces\" and annotation \"Traced\" ) )",
        "details": [
            {
                "element": "src:function",
                "violation": "src:annotation[src:name[text()='Traced']]",
                "position": [
                    "18",
                    "5"
                ]
            }
        ]
    },
    {
        "candidate-rule-id": 538030893,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e1144405872\\Incorrect.java",
        "precondition": "src:class[(src:annotation[src:name[text()='Path']] and src:block/src:function[(src:annotation[src:name[text()='Produces']])])]",
        "postcondition": "src:class[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='RegisterRestClient']] and src:block/src:function[(src:annotation[src:name[text()='Produces']] and src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='GET']] and src:annotation[src:name[text()='Traced']])])]",
        "grammar": "class must have (annotation \"Path\" and annotation \"RegisterRestClient\" and function with (annotation \"Produces\" and annotation \"Path\" and annotation \"GET\" and annotation \"Traced\" ) )",
        "details": [
            {
                "element": "src:function",
                "violation": "src:annotation[src:name[text()='Traced']]",
                "position": [
                    "18",
                    "5"
                ]
            }
        ]
    },
    {
        "candidate-rule-id": -149959793,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e1144405872\\Incorrect.java",
        "precondition": "src:class[(src:annotation[src:name[text()='Path']] and src:block/src:function[(src:annotation[src:name[text()='Path']])])]",
        "postcondition": "src:class[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='RegisterRestClient']] and src:block/src:function[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='GET']] and src:annotation[src:name[text()='Traced']] and src:annotation[src:name[text()='Operation']] and src:type[src:name[text()='Response']])])]",
        "grammar": "class must have (annotation \"Path\" and annotation \"RegisterRestClient\" and function with (annotation \"Path\" and annotation \"GET\" and annotation \"Traced\" and annotation \"Operation\" and type \"Response\" ) )",
        "details": []
    },
    {
        "candidate-rule-id": 371646083,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e1144405872\\Incorrect.java",
        "precondition": "src:class[(src:block/src:function[(src:annotation[src:name[text()='Path']])])]",
        "postcondition": "src:class[(src:block/src:function[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='GET']] and src:annotation[src:name[text()='Traced']])])]",
        "grammar": "class must have (function with (annotation \"Path\" and annotation \"GET\" and annotation \"Traced\" ) )",
        "details": [
            {
                "element": "src:function",
                "violation": "src:annotation[src:name[text()='Traced']]",
                "position": [
                    "18",
                    "5"
                ]
            }
        ]
    },
    {
        "candidate-rule-id": -858730437,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e1144405872\\Incorrect.java",
        "precondition": "src:class[(src:annotation[src:name[text()='Path']] and src:block/src:function[(src:annotation[src:name[text()='GET']])])]",
        "postcondition": "src:class[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='RegisterRestClient']] and src:block/src:function[(src:annotation[src:name[text()='GET']] and src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='Produces']] and src:annotation[src:name[text()='Traced']])])]",
        "grammar": "class must have (annotation \"Path\" and annotation \"RegisterRestClient\" and function with (annotation \"GET\" and annotation \"Path\" and annotation \"Produces\" and annotation \"Traced\" ) )",
        "details": [
            {
                "element": "src:function",
                "violation": "src:annotation[src:name[text()='Traced']]",
                "position": [
                    "18",
                    "5"
                ]
            }
        ]
    },
    {
        "candidate-rule-id": -1479824569,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e1144405872\\Incorrect.java",
        "precondition": "src:class[(src:annotation[src:name[text()='Path']] and src:block/src:function[(src:annotation[src:name[text()='Path']])])]",
        "postcondition": "src:class[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='RegisterRestClient']] and src:block/src:function[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='Produces']] and src:annotation[src:name[text()='GET']] and src:annotation[src:name[text()='Traced']] and src:annotation[src:name[text()='Operation']] and src:type[src:name[text()='Response']])])]",
        "grammar": "class must have (annotation \"Path\" and annotation \"RegisterRestClient\" and function with (annotation \"Path\" and annotation \"Produces\" and annotation \"GET\" and annotation \"Traced\" and annotation \"Operation\" and type \"Response\" ) )",
        "details": []
    },
    {
        "candidate-rule-id": -554362854,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e1144405872\\Incorrect.java",
        "precondition": "src:class[(descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']])])]",
        "postcondition": "src:class[(descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']] and src:annotation[src:name[text()='ConfigProperty']] and src:type[src:name[text()='String']])])]",
        "grammar": "class must have (declaration statement with (annotation \"Inject\" and annotation \"ConfigProperty\" and type \"String\" ) )",
        "details": [
            {
                "element": "src:decl",
                "violation": "src:annotation[src:name[text()='ConfigProperty']]",
                "position": [
                    "13",
                    "5"
                ]
            }
        ]
    },
    {
        "candidate-rule-id": -114835556,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e1144405872\\Incorrect.java",
        "precondition": "src:class[(descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']] and src:type[src:name[text()='String']])])]",
        "postcondition": "src:class[(descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']] and src:annotation[src:name[text()='ConfigProperty']] and src:type[src:name[text()='String']])])]",
        "grammar": "class must have (declaration statement with (annotation \"Inject\" and annotation \"ConfigProperty\" and type \"String\" ) )",
        "details": [
            {
                "element": "src:decl",
                "violation": "src:annotation[src:name[text()='ConfigProperty']]",
                "position": [
                    "13",
                    "5"
                ]
            }
        ]
    },
    {
        "candidate-rule-id": 1392587348,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e1144405872\\Incorrect.java",
        "precondition": "src:class[(src:block/src:function[(src:annotation[src:name[text()='Produces']])])]",
        "postcondition": "src:class[(src:block/src:function[(src:annotation[src:name[text()='Produces']] and src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='Operation']])])]",
        "grammar": "class must have (function with (annotation \"Produces\" and annotation \"Path\" and annotation \"Operation\" ) )",
        "details": [
            {
                "element": "src:function",
                "violation": "src:annotation[src:name[text()='Operation']]",
                "position": [
                    "18",
                    "5"
                ]
            }
        ]
    },
    {
        "candidate-rule-id": -516519425,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e1144405872\\Incorrect.java",
        "precondition": "src:class[(src:annotation[src:name[text()='Path']])]",
        "postcondition": "src:class[(src:annotation[src:name[text()='Path']] and src:block/src:function[(src:annotation[src:name[text()='Operation']])])]",
        "grammar": "class must have (annotation \"Path\" and function with (annotation \"Operation\" ) )",
        "details": []
    },
    {
        "candidate-rule-id": 1144405872,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e1530558578\\Correct.java",
        "precondition": "src:class[(src:annotation[src:name[text()='Path']])]",
        "postcondition": "src:class[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='RegisterRestClient']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']] and src:annotation[src:name[text()='Claim']])] and src:block/src:function[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='Produces']] and src:annotation[src:name[text()='GET']] and src:annotation[src:name[text()='Traced']])])]",
        "grammar": "class must have (annotation \"Path\" and annotation \"RegisterRestClient\" and declaration statement with (annotation \"Inject\" and annotation \"Claim\" ) and function with (annotation \"Path\" and annotation \"Produces\" and annotation \"GET\" and annotation \"Traced\" ) )",
        "details": [
            {
                "element": "src:class",
                "violation": "src:annotation[src:name[text()='RegisterRestClient']]",
                "position": [
                    "8",
                    "1"
                ]
            }
        ]
    },
    {
        "candidate-rule-id": -1569715546,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e1530558578\\Correct.java",
        "precondition": "src:class[(descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']])])]",
        "postcondition": "src:class[(descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']] and src:annotation[src:name[text()='RestClient']] and src:annotation[src:name[text()='Claim']])])]",
        "grammar": "class must have (declaration statement with (annotation \"Inject\" and annotation \"RestClient\" and annotation \"Claim\" ) )",
        "details": [
            {
                "element": "src:decl",
                "violation": "src:annotation[src:name[text()='RestClient']]",
                "position": [
                    "12",
                    "5"
                ]
            }
        ]
    },
    {
        "candidate-rule-id": -554362854,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e1530558578\\Correct.java",
        "precondition": "src:class[(descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']])])]",
        "postcondition": "src:class[(descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']] and src:annotation[src:name[text()='ConfigProperty']] and src:type[src:name[text()='String']])])]",
        "grammar": "class must have (declaration statement with (annotation \"Inject\" and annotation \"ConfigProperty\" and type \"String\" ) )",
        "details": [
            {
                "element": "src:decl",
                "violation": "src:annotation[src:name[text()='ConfigProperty']]",
                "position": [
                    "12",
                    "5"
                ]
            }
        ]
    },
    {
        "candidate-rule-id": -114835556,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e1530558578\\Correct.java",
        "precondition": "src:class[(descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']] and src:type[src:name[text()='String']])])]",
        "postcondition": "src:class[(descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']] and src:annotation[src:name[text()='ConfigProperty']] and src:type[src:name[text()='String']])])]",
        "grammar": "class must have (declaration statement with (annotation \"Inject\" and annotation \"ConfigProperty\" and type \"String\" ) )",
        "details": [
            {
                "element": "src:decl",
                "violation": "src:annotation[src:name[text()='ConfigProperty']]",
                "position": [
                    "12",
                    "5"
                ]
            }
        ]
    },
    {
        "candidate-rule-id": -516519425,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e1530558578\\Correct.java",
        "precondition": "src:class[(src:annotation[src:name[text()='Path']])]",
        "postcondition": "src:class[(src:annotation[src:name[text()='Path']] and src:block/src:function[(src:annotation[src:name[text()='Operation']])])]",
        "grammar": "class must have (annotation \"Path\" and function with (annotation \"Operation\" ) )",
        "details": []
    },
    {
        "candidate-rule-id": 1144405872,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e1530558578\\Incorrect.java",
        "precondition": "src:class[(src:annotation[src:name[text()='Path']])]",
        "postcondition": "src:class[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='RegisterRestClient']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']] and src:annotation[src:name[text()='Claim']])] and src:block/src:function[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='Produces']] and src:annotation[src:name[text()='GET']] and src:annotation[src:name[text()='Traced']])])]",
        "grammar": "class must have (annotation \"Path\" and annotation \"RegisterRestClient\" and declaration statement with (annotation \"Inject\" and annotation \"Claim\" ) and function with (annotation \"Path\" and annotation \"Produces\" and annotation \"GET\" and annotation \"Traced\" ) )",
        "details": [
            {
                "element": "src:class",
                "violation": "src:annotation[src:name[text()='RegisterRestClient']]",
                "position": [
                    "8",
                    "1"
                ]
            }
        ]
    },
    {
        "candidate-rule-id": 1530558578,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e1530558578\\Incorrect.java",
        "precondition": "src:class[(src:annotation[src:name[text()='Path']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Claim']])])]",
        "postcondition": "src:class[(src:annotation[src:name[text()='Path']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Claim']] and src:annotation[src:name[text()='Inject']])])]",
        "grammar": "class must have (annotation \"Path\" and declaration statement with (annotation \"Claim\" and annotation \"Inject\" ) )",
        "details": []
    },
    {
        "candidate-rule-id": -516519425,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e1530558578\\Incorrect.java",
        "precondition": "src:class[(src:annotation[src:name[text()='Path']])]",
        "postcondition": "src:class[(src:annotation[src:name[text()='Path']] and src:block/src:function[(src:annotation[src:name[text()='Operation']])])]",
        "grammar": "class must have (annotation \"Path\" and function with (annotation \"Operation\" ) )",
        "details": []
    },
    {
        "candidate-rule-id": 1144405872,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e1611704934\\Correct.java",
        "precondition": "src:class[(src:annotation[src:name[text()='Path']])]",
        "postcondition": "src:class[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='RegisterRestClient']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']] and src:annotation[src:name[text()='Claim']])] and src:block/src:function[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='Produces']] and src:annotation[src:name[text()='GET']] and src:annotation[src:name[text()='Traced']])])]",
        "grammar": "class must have (annotation \"Path\" and annotation \"RegisterRestClient\" and declaration statement with (annotation \"Inject\" and annotation \"Claim\" ) and function with (annotation \"Path\" and annotation \"Produces\" and annotation \"GET\" and annotation \"Traced\" ) )",
        "details": [
            {
                "element": "src:class",
                "violation": "src:annotation[src:name[text()='RegisterRestClient']]",
                "position": [
                    "9",
                    "1"
                ]
            }
        ]
    },
    {
        "candidate-rule-id": -1569715546,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e1611704934\\Correct.java",
        "precondition": "src:class[(descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']])])]",
        "postcondition": "src:class[(descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']] and src:annotation[src:name[text()='RestClient']] and src:annotation[src:name[text()='Claim']])])]",
        "grammar": "class must have (declaration statement with (annotation \"Inject\" and annotation \"RestClient\" and annotation \"Claim\" ) )",
        "details": []
    },
    {
        "candidate-rule-id": 210315815,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e1611704934\\Correct.java",
        "precondition": "src:class[(src:annotation[src:name[text()='Path']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']])])]",
        "postcondition": "src:class[(src:annotation[src:name[text()='Path']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']] and src:annotation[src:name[text()='Claim']])])]",
        "grammar": "class must have (annotation \"Path\" and declaration statement with (annotation \"Inject\" and annotation \"Claim\" ) )",
        "details": []
    },
    {
        "candidate-rule-id": -554362854,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e1611704934\\Correct.java",
        "precondition": "src:class[(descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']])])]",
        "postcondition": "src:class[(descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']] and src:annotation[src:name[text()='ConfigProperty']] and src:type[src:name[text()='String']])])]",
        "grammar": "class must have (declaration statement with (annotation \"Inject\" and annotation \"ConfigProperty\" and type \"String\" ) )",
        "details": [
            {
                "element": "src:decl",
                "violation": "src:annotation[src:name[text()='ConfigProperty']]",
                "position": [
                    "12",
                    "5"
                ]
            }
        ]
    },
    {
        "candidate-rule-id": -114835556,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e1611704934\\Correct.java",
        "precondition": "src:class[(descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']] and src:type[src:name[text()='String']])])]",
        "postcondition": "src:class[(descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']] and src:annotation[src:name[text()='ConfigProperty']] and src:type[src:name[text()='String']])])]",
        "grammar": "class must have (declaration statement with (annotation \"Inject\" and annotation \"ConfigProperty\" and type \"String\" ) )",
        "details": [
            {
                "element": "src:decl",
                "violation": "src:annotation[src:name[text()='ConfigProperty']]",
                "position": [
                    "12",
                    "5"
                ]
            }
        ]
    },
    {
        "candidate-rule-id": -516519425,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e1611704934\\Correct.java",
        "precondition": "src:class[(src:annotation[src:name[text()='Path']])]",
        "postcondition": "src:class[(src:annotation[src:name[text()='Path']] and src:block/src:function[(src:annotation[src:name[text()='Operation']])])]",
        "grammar": "class must have (annotation \"Path\" and function with (annotation \"Operation\" ) )",
        "details": []
    },
    {
        "candidate-rule-id": 1144405872,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e1611704934\\Incorrect.java",
        "precondition": "src:class[(src:annotation[src:name[text()='Path']])]",
        "postcondition": "src:class[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='RegisterRestClient']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']] and src:annotation[src:name[text()='Claim']])] and src:block/src:function[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='Produces']] and src:annotation[src:name[text()='GET']] and src:annotation[src:name[text()='Traced']])])]",
        "grammar": "class must have (annotation \"Path\" and annotation \"RegisterRestClient\" and declaration statement with (annotation \"Inject\" and annotation \"Claim\" ) and function with (annotation \"Path\" and annotation \"Produces\" and annotation \"GET\" and annotation \"Traced\" ) )",
        "details": [
            {
                "element": "src:class",
                "violation": "src:annotation[src:name[text()='RegisterRestClient']]",
                "position": [
                    "8",
                    "1"
                ]
            }
        ]
    },
    {
        "candidate-rule-id": -1611704934,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e1611704934\\Incorrect.java",
        "precondition": "src:class[(src:annotation[src:name[text()='Produces']] and src:annotation[src:name[text()='Path']])]",
        "postcondition": "src:class[(src:annotation[src:name[text()='Produces']] and src:annotation[src:name[text()='Path']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']])])]",
        "grammar": "class must have (annotation \"Produces\" and annotation \"Path\" and declaration statement with (annotation \"Inject\" ) )",
        "details": []
    },
    {
        "candidate-rule-id": 232366922,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e1611704934\\Incorrect.java",
        "precondition": "src:class[(src:annotation[src:name[text()='Produces']] and src:annotation[src:name[text()='Path']])]",
        "postcondition": "src:class[(src:annotation[src:name[text()='Produces']] and src:annotation[src:name[text()='Path']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']])])]",
        "grammar": "class must have (annotation \"Produces\" and annotation \"Path\" and declaration statement with (annotation \"Inject\" ) )",
        "details": []
    },
    {
        "candidate-rule-id": -516519425,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e1611704934\\Incorrect.java",
        "precondition": "src:class[(src:annotation[src:name[text()='Path']])]",
        "postcondition": "src:class[(src:annotation[src:name[text()='Path']] and src:block/src:function[(src:annotation[src:name[text()='Operation']])])]",
        "grammar": "class must have (annotation \"Path\" and function with (annotation \"Operation\" ) )",
        "details": []
    },
    {
        "candidate-rule-id": 371646083,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e20402558\\Correct.java",
        "precondition": "src:class[(src:block/src:function[(src:annotation[src:name[text()='Path']])])]",
        "postcondition": "src:class[(src:block/src:function[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='GET']] and src:annotation[src:name[text()='Traced']])])]",
        "grammar": "class must have (function with (annotation \"Path\" and annotation \"GET\" and annotation \"Traced\" ) )",
        "details": []
    },
    {
        "candidate-rule-id": -447429904,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e20402558\\Correct.java",
        "precondition": "src:class[(src:annotation[src:name[text()='RegisterRestClient']] and src:block/src:function[(src:annotation[src:name[text()='Path']])])]",
        "postcondition": "src:class[(src:annotation[src:name[text()='RegisterRestClient']] and src:annotation[src:name[text()='Path']] and src:block/src:function[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='Produces']] and src:annotation[src:name[text()='GET']])])]",
        "grammar": "class must have (annotation \"RegisterRestClient\" and annotation \"Path\" and function with (annotation \"Path\" and annotation \"Produces\" and annotation \"GET\" ) )",
        "details": [
            {
                "element": "src:class",
                "violation": "src:annotation[src:name[text()='Path']]",
                "position": [
                    "9",
                    "1"
                ]
            }
        ]
    },
    {
        "candidate-rule-id": 728557548,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e20402558\\Incorrect.java",
        "precondition": "src:class[(src:annotation[src:name[text()='RegisterRestClient']])]",
        "postcondition": "src:class[(src:annotation[src:name[text()='RegisterRestClient']] and src:block/src:function[(src:annotation[src:name[text()='Path']])])]",
        "grammar": "class must have (annotation \"RegisterRestClient\" and function with (annotation \"Path\" ) )",
        "details": []
    },
    {
        "candidate-rule-id": 1144405872,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e978092668\\Correct.java",
        "precondition": "src:class[(src:annotation[src:name[text()='Path']])]",
        "postcondition": "src:class[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='RegisterRestClient']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']] and src:annotation[src:name[text()='Claim']])] and src:block/src:function[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='Produces']] and src:annotation[src:name[text()='GET']] and src:annotation[src:name[text()='Traced']])])]",
        "grammar": "class must have (annotation \"Path\" and annotation \"RegisterRestClient\" and declaration statement with (annotation \"Inject\" and annotation \"Claim\" ) and function with (annotation \"Path\" and annotation \"Produces\" and annotation \"GET\" and annotation \"Traced\" ) )",
        "details": [
            {
                "element": "src:class",
                "violation": "src:annotation[src:name[text()='RegisterRestClient']]",
                "position": [
                    "8",
                    "1"
                ]
            }
        ]
    },
    {
        "candidate-rule-id": -1569715546,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e978092668\\Correct.java",
        "precondition": "src:class[(descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']])])]",
        "postcondition": "src:class[(descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']] and src:annotation[src:name[text()='RestClient']] and src:annotation[src:name[text()='Claim']])])]",
        "grammar": "class must have (declaration statement with (annotation \"Inject\" and annotation \"RestClient\" and annotation \"Claim\" ) )",
        "details": []
    },
    {
        "candidate-rule-id": 210315815,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e978092668\\Correct.java",
        "precondition": "src:class[(src:annotation[src:name[text()='Path']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']])])]",
        "postcondition": "src:class[(src:annotation[src:name[text()='Path']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']] and src:annotation[src:name[text()='Claim']])])]",
        "grammar": "class must have (annotation \"Path\" and declaration statement with (annotation \"Inject\" and annotation \"Claim\" ) )",
        "details": []
    },
    {
        "candidate-rule-id": -554362854,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e978092668\\Correct.java",
        "precondition": "src:class[(descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']])])]",
        "postcondition": "src:class[(descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']] and src:annotation[src:name[text()='ConfigProperty']] and src:type[src:name[text()='String']])])]",
        "grammar": "class must have (declaration statement with (annotation \"Inject\" and annotation \"ConfigProperty\" and type \"String\" ) )",
        "details": []
    },
    {
        "candidate-rule-id": -516519425,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e978092668\\Correct.java",
        "precondition": "src:class[(src:annotation[src:name[text()='Path']])]",
        "postcondition": "src:class[(src:annotation[src:name[text()='Path']] and src:block/src:function[(src:annotation[src:name[text()='Operation']])])]",
        "grammar": "class must have (annotation \"Path\" and function with (annotation \"Operation\" ) )",
        "details": []
    },
    {
        "candidate-rule-id": 1144405872,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e978092668\\Incorrect.java",
        "precondition": "src:class[(src:annotation[src:name[text()='Path']])]",
        "postcondition": "src:class[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='RegisterRestClient']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']] and src:annotation[src:name[text()='Claim']])] and src:block/src:function[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='Produces']] and src:annotation[src:name[text()='GET']] and src:annotation[src:name[text()='Traced']])])]",
        "grammar": "class must have (annotation \"Path\" and annotation \"RegisterRestClient\" and declaration statement with (annotation \"Inject\" and annotation \"Claim\" ) and function with (annotation \"Path\" and annotation \"Produces\" and annotation \"GET\" and annotation \"Traced\" ) )",
        "details": [
            {
                "element": "src:class",
                "violation": "src:annotation[src:name[text()='RegisterRestClient']]",
                "position": [
                    "6",
                    "1"
                ]
            }
        ]
    },
    {
        "candidate-rule-id": -516519425,
        "file": "D:\\UAlberta Masters\\Research\\API Misuse\\sandbox\\candidate-rules-in-rulepad\\src\\main\\java\\com\\samples\\e978092668\\Incorrect.java",
        "precondition": "src:class[(src:annotation[src:name[text()='Path']])]",
        "postcondition": "src:class[(src:annotation[src:name[text()='Path']] and src:block/src:function[(src:annotation[src:name[text()='Operation']])])]",
        "grammar": "class must have (annotation \"Path\" and function with (annotation \"Operation\" ) )",
        "details": []
    }
]