{
    "uribuilderexception" : [ "jakarta.ws.rs.core.UriBuilderException", "javax.ws.rs.core.UriBuilderException" ],
    "discriminatorcolumn" : [ "jakarta.persistence.DiscriminatorColumn" ],
    "sseevent" : [ "javax.ws.rs.sse.SseEvent", "jakarta.ws.rs.sse.SseEvent" ],
    "httpmethod" : [ "jakarta.ws.rs.HttpMethod", "javax.ws.rs.HttpMethod" ],
    "futureorpresent.list" : [ "jakarta.validation.constraints.FutureOrPresent.List" ],
    "executabletype" : [ "jakarta.validation.executable.ExecutableType" ],
    "notempty" : [ "jakarta.validation.constraints.NotEmpty" ],
    "xml" : [ "org.eclipse.microprofile.openapi.models.media.XML" ],
    "httpservletrequest.1" : [ "jakarta.servlet.http.HttpServletRequest.1" ],
    "defaultmetadata" : [ "org.eclipse.microprofile.metrics.DefaultMetadata" ],
    "outboundsseevent" : [ "javax.ws.rs.sse.OutboundSseEvent", "jakarta.ws.rs.sse.OutboundSseEvent" ],
    "servletsecurity.emptyrolesemantic" : [ "jakarta.servlet.annotation.ServletSecurity.EmptyRoleSemantic" ],
    "preupdate" : [ "jakarta.persistence.PreUpdate" ],
    "containerresponsecontext" : [ "jakarta.ws.rs.container.ContainerResponseContext", "javax.ws.rs.container.ContainerResponseContext" ],
    "registrytype" : [ "org.eclipse.microprofile.metrics.annotation.RegistryType" ],
    "requestbody" : [ "org.eclipse.microprofile.openapi.annotations.parameters.RequestBody", "org.eclipse.microprofile.openapi.models.parameters.RequestBody" ],
    "notificationoptions.builder" : [ "jakarta.enterprise.event.NotificationOptions.Builder", "javax.enterprise.event.NotificationOptions.Builder" ],
    "cachestoremode" : [ "jakarta.persistence.CacheStoreMode" ],
    "discriminatormapping" : [ "org.eclipse.microprofile.openapi.annotations.media.DiscriminatorMapping" ],
    "validation.getvalidationproviderlistaction" : [ "jakarta.validation.Validation.GetValidationProviderListAction" ],
    "nonexistentconversationexception" : [ "jakarta.enterprise.context.NonexistentConversationException", "javax.enterprise.context.NonexistentConversationException" ],
    "orderby" : [ "jakarta.persistence.OrderBy" ],
    "cdi" : [ "jakarta.enterprise.inject.spi.CDI", "javax.enterprise.inject.spi.CDI" ],
    "servletconfig" : [ "jakarta.servlet.ServletConfig" ],
    "version" : [ "jakarta.persistence.Version" ],
    "entitynotfoundexception" : [ "jakarta.persistence.EntityNotFoundException" ],
    "extensions" : [ "org.eclipse.microprofile.openapi.annotations.extensions.Extensions" ],
    "httpupgradehandler" : [ "jakarta.servlet.http.HttpUpgradeHandler" ],
    "selection" : [ "jakarta.persistence.criteria.Selection" ],
    "size" : [ "jakarta.validation.constraints.Size" ],
    "notnull" : [ "jakarta.validation.constraints.NotNull" ],
    "methoddescriptor" : [ "jakarta.validation.metadata.MethodDescriptor" ],
    "afterbeandiscovery" : [ "javax.enterprise.inject.spi.AfterBeanDiscovery", "jakarta.enterprise.inject.spi.AfterBeanDiscovery" ],
    "annotatedfield" : [ "jakarta.enterprise.inject.spi.AnnotatedField", "javax.enterprise.inject.spi.AnnotatedField" ],
    "syntheticbeancreator" : [ "jakarta.enterprise.inject.build.compatible.spi.SyntheticBeanCreator" ],
    "asyncevent" : [ "jakarta.servlet.AsyncEvent" ],
    "cookie.1" : [ "jakarta.servlet.http.Cookie.1" ],
    "simpletimer" : [ "org.eclipse.microprofile.metrics.SimpleTimer" ],
    "normalscope" : [ "jakarta.enterprise.context.NormalScope", "javax.enterprise.context.NormalScope" ],
    "tablegenerators" : [ "jakarta.persistence.TableGenerators" ],
    "criteriaquery" : [ "jakarta.persistence.criteria.CriteriaQuery" ],
    "namedqueries" : [ "jakarta.persistence.NamedQueries" ],
    "example" : [ "org.eclipse.microprofile.openapi.models.examples.Example" ],
    "cdiprovider" : [ "javax.enterprise.inject.spi.CDIProvider", "jakarta.enterprise.inject.spi.CDIProvider" ],
    "listattribute" : [ "jakarta.persistence.metamodel.ListAttribute" ],
    "persistenceproviderresolverholder" : [ "jakarta.persistence.spi.PersistenceProviderResolverHolder" ],
    "resource.authenticationtype" : [ "jakarta.annotation.Resource.AuthenticationType" ],
    "interceptionfactory" : [ "jakarta.enterprise.inject.spi.InterceptionFactory", "javax.enterprise.inject.spi.InterceptionFactory" ],
    "servletrequestevent" : [ "jakarta.servlet.ServletRequestEvent" ],
    "ambiguousresolutionexception" : [ "javax.enterprise.inject.AmbiguousResolutionException", "jakarta.enterprise.inject.AmbiguousResolutionException" ],
    "invocation.builder" : [ "jakarta.ws.rs.client.Invocation.Builder", "javax.ws.rs.client.Invocation.Builder" ],
    "embeddedid" : [ "jakarta.persistence.EmbeddedId" ],
    "persistenceexception" : [ "jakarta.persistence.PersistenceException" ],
    "messagebodyreader" : [ "jakarta.ws.rs.ext.MessageBodyReader", "javax.ws.rs.ext.MessageBodyReader" ],
    "annotatedfieldconfigurator" : [ "javax.enterprise.inject.spi.configurator.AnnotatedFieldConfigurator", "jakarta.enterprise.inject.spi.configurator.AnnotatedFieldConfigurator" ],
    "validateonexecution" : [ "jakarta.validation.executable.ValidateOnExecution" ],
    "destroyed" : [ "javax.enterprise.context.Destroyed", "jakarta.enterprise.context.Destroyed" ],
    "persistence" : [ "jakarta.persistence.Persistence" ],
    "configurationstate" : [ "jakarta.validation.spi.ConfigurationState" ],
    "webconnection" : [ "jakarta.servlet.http.WebConnection" ],
    "exampleobject" : [ "org.eclipse.microprofile.openapi.annotations.media.ExampleObject" ],
    "servletrequest" : [ "jakarta.servlet.ServletRequest" ],
    "parameterconfig" : [ "jakarta.enterprise.inject.build.compatible.spi.ParameterConfig" ],
    "sebootstrap" : [ "jakarta.ws.rs.SeBootstrap" ],
    "namedstoredprocedurequeries" : [ "jakarta.persistence.NamedStoredProcedureQueries" ],
    "tupleelement" : [ "jakarta.persistence.TupleElement" ],
    "beforedestroyed" : [ "javax.enterprise.context.BeforeDestroyed", "jakarta.enterprise.context.BeforeDestroyed" ],
    "size.list" : [ "jakarta.validation.constraints.Size.List" ],
    "post" : [ "javax.ws.rs.POST", "jakarta.ws.rs.POST" ],
    "payload" : [ "jakarta.validation.Payload" ],
    "generated" : [ "jakarta.annotation.Generated" ],
    "restclient.restclientliteral" : [ "org.eclipse.microprofile.rest.client.inject.RestClient.RestClientLiteral" ],
    "cookie.builder" : [ "jakarta.ws.rs.core.Cookie.Builder" ],
    "resourceinfo" : [ "javax.ws.rs.container.ResourceInfo", "jakarta.ws.rs.container.ResourceInfo" ],
    "datasourcedefinitions" : [ "jakarta.annotation.sql.DataSourceDefinitions" ],
    "conversation" : [ "javax.enterprise.context.Conversation", "jakarta.enterprise.context.Conversation" ],
    "vetoed" : [ "javax.enterprise.inject.Vetoed", "jakarta.enterprise.inject.Vetoed" ],
    "encoding" : [ "org.eclipse.microprofile.openapi.annotations.media.Encoding", "org.eclipse.microprofile.openapi.models.media.Encoding" ],
    "postload" : [ "jakarta.persistence.PostLoad" ],
    "path.propertynode" : [ "jakarta.validation.Path.PropertyNode" ],
    "path.crossparameternode" : [ "jakarta.validation.Path.CrossParameterNode" ],
    "alternative.literal" : [ "javax.enterprise.inject.Alternative.Literal", "jakarta.enterprise.inject.Alternative.Literal" ],
    "predestroy" : [ "jakarta.annotation.PreDestroy" ],
    "claims" : [ "org.eclipse.microprofile.jwt.Claims" ],
    "containerrequestcontext" : [ "jakarta.ws.rs.container.ContainerRequestContext", "javax.ws.rs.container.ContainerRequestContext" ],
    "factoryfinder" : [ "javax.ws.rs.client.FactoryFinder", "javax.ws.rs.ext.FactoryFinder", "jakarta.ws.rs.ext.FactoryFinder", "javax.ws.rs.sse.FactoryFinder", "jakarta.ws.rs.client.FactoryFinder", "jakarta.ws.rs.sse.FactoryFinder" ],
    "annotatedmethod" : [ "jakarta.enterprise.inject.spi.AnnotatedMethod", "javax.enterprise.inject.spi.AnnotatedMethod" ],
    "jspconfigdescriptor" : [ "jakarta.servlet.descriptor.JspConfigDescriptor" ],
    "outgoing" : [ "org.eclipse.microprofile.reactive.messaging.Outgoing" ],
    "positiveorzero.list" : [ "jakarta.validation.constraints.PositiveOrZero.List" ],
    "servletregistration.dynamic" : [ "jakarta.servlet.ServletRegistration.Dynamic" ],
    "nocontentexception" : [ "javax.ws.rs.core.NoContentException", "jakarta.ws.rs.core.NoContentException" ],
    "connectorfactory" : [ "org.eclipse.microprofile.reactive.messaging.spi.ConnectorFactory" ],
    "interface" : [ "org.eclipse.microprofile.graphql.Interface" ],
    "fieldconfig" : [ "jakarta.enterprise.inject.build.compatible.spi.FieldConfig" ],
    "inboundsseevent" : [ "javax.ws.rs.sse.InboundSseEvent", "jakarta.ws.rs.sse.InboundSseEvent" ],
    "sqlresultsetmappings" : [ "jakarta.persistence.SqlResultSetMappings" ],
    "restclientbuilderlistener" : [ "org.eclipse.microprofile.rest.client.spi.RestClientBuilderListener" ],
    "constraintvalidator" : [ "jakarta.validation.ConstraintValidator" ],
    "metricid" : [ "org.eclipse.microprofile.metrics.MetricID" ],
    "provider" : [ "javax.inject.Provider", "javax.ws.rs.ext.Provider", "jakarta.inject.Provider", "jakarta.ws.rs.ext.Provider" ],
    "constraintvalidatorcontext" : [ "jakarta.validation.ConstraintValidatorContext" ],
    "root" : [ "jakarta.persistence.criteria.Root" ],
    "scope" : [ "jakarta.validation.metadata.Scope", "javax.inject.Scope", "jakarta.inject.Scope" ],
    "discriminatorvalue" : [ "jakarta.persistence.DiscriminatorValue" ],
    "buildservices" : [ "jakarta.enterprise.inject.build.compatible.spi.BuildServices" ],
    "interceptorinfo" : [ "jakarta.enterprise.inject.build.compatible.spi.InterceptorInfo" ],
    "securityscheme" : [ "org.eclipse.microprofile.openapi.annotations.security.SecurityScheme", "org.eclipse.microprofile.openapi.models.security.SecurityScheme" ],
    "message" : [ "org.eclipse.microprofile.reactive.messaging.Message" ],
    "sseeventsource.builder" : [ "javax.ws.rs.sse.SseEventSource.Builder", "jakarta.ws.rs.sse.SseEventSource.Builder" ],
    "secondarytables" : [ "jakarta.persistence.SecondaryTables" ],
    "parameterexpression" : [ "jakarta.persistence.criteria.ParameterExpression" ],
    "beforeshutdown" : [ "javax.enterprise.inject.spi.BeforeShutdown", "jakarta.enterprise.inject.spi.BeforeShutdown" ],
    "crossparameterdescriptor" : [ "jakarta.validation.metadata.CrossParameterDescriptor" ],
    "staticmetamodel" : [ "jakarta.persistence.metamodel.StaticMetamodel" ],
    "inject" : [ "javax.inject.Inject", "jakarta.inject.Inject" ],
    "unmanaged.1" : [ "javax.enterprise.inject.spi.Unmanaged.1" ],
    "criteriabuilder.in" : [ "jakarta.persistence.criteria.CriteriaBuilder.In" ],
    "digits.list" : [ "jakarta.validation.constraints.Digits.List" ],
    "declareroles" : [ "jakarta.annotation.security.DeclareRoles" ],
    "named" : [ "javax.inject.Named", "jakarta.inject.Named" ],
    "nullable" : [ "jakarta.annotation.Nullable" ],
    "namebinding" : [ "javax.ws.rs.NameBinding", "jakarta.ws.rs.NameBinding" ],
    "channel" : [ "org.eclipse.microprofile.reactive.messaging.Channel" ],
    "postpersist" : [ "jakarta.persistence.PostPersist" ],
    "callbacks" : [ "org.eclipse.microprofile.openapi.annotations.callbacks.Callbacks" ],
    "schematype" : [ "org.eclipse.microprofile.openapi.annotations.enums.SchemaType" ],
    "notnull.list" : [ "jakarta.validation.constraints.NotNull.List" ],
    "entitymanagerfactory" : [ "jakarta.persistence.EntityManagerFactory" ],
    "genericservlet" : [ "jakarta.servlet.GenericServlet" ],
    "explode" : [ "org.eclipse.microprofile.openapi.annotations.enums.Explode" ],
    "generationtype" : [ "jakarta.persistence.GenerationType" ],
    "mapkeyenumerated" : [ "jakarta.persistence.MapKeyEnumerated" ],
    "metered" : [ "org.eclipse.microprofile.metrics.annotation.Metered", "org.eclipse.microprofile.metrics.Metered" ],
    "servletcontextlistener" : [ "jakarta.servlet.ServletContextListener" ],
    "initialized.literal" : [ "javax.enterprise.context.Initialized.Literal", "jakarta.enterprise.context.Initialized.Literal" ],
    "order" : [ "jakarta.persistence.criteria.Order" ],
    "notsupportedexception" : [ "jakarta.ws.rs.NotSupportedException", "javax.ws.rs.NotSupportedException" ],
    "constrainttarget" : [ "jakarta.validation.ConstraintTarget" ],
    "suspended" : [ "jakarta.ws.rs.container.Suspended", "javax.ws.rs.container.Suspended" ],
    "writerinterceptorcontext" : [ "jakarta.ws.rs.ext.WriterInterceptorContext", "javax.ws.rs.ext.WriterInterceptorContext" ],
    "oasfactoryresolver.1" : [ "org.eclipse.microprofile.openapi.spi.OASFactoryResolver.1" ],
    "observerexception" : [ "jakarta.enterprise.event.ObserverException", "javax.enterprise.event.ObserverException" ],
    "configproviderresolver" : [ "org.eclipse.microprofile.config.spi.ConfigProviderResolver" ],
    "constraintvalidatorcontext.constraintviolationbuilder.nodebuilderdefinedcontext" : [ "jakarta.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderDefinedContext" ],
    "mutation" : [ "org.eclipse.microprofile.graphql.Mutation" ],
    "connector" : [ "org.eclipse.microprofile.reactive.messaging.spi.Connector" ],
    "badrequestexception" : [ "jakarta.ws.rs.BadRequestException", "javax.ws.rs.BadRequestException" ],
    "namedstoredprocedurequery" : [ "jakarta.persistence.NamedStoredProcedureQuery" ],
    "nonbinding.literal" : [ "jakarta.enterprise.util.Nonbinding.Literal", "javax.enterprise.util.Nonbinding.Literal" ],
    "metamodel" : [ "jakarta.persistence.metamodel.Metamodel" ],
    "notacceptableexception" : [ "jakarta.ws.rs.NotAcceptableException", "javax.ws.rs.NotAcceptableException" ],
    "timeouthandler" : [ "javax.ws.rs.container.TimeoutHandler", "jakarta.ws.rs.container.TimeoutHandler" ],
    "processobservermethod" : [ "jakarta.enterprise.inject.spi.ProcessObserverMethod", "javax.enterprise.inject.spi.ProcessObserverMethod" ],
    "pattern.list" : [ "jakarta.validation.constraints.Pattern.List" ],
    "dynamicfeature" : [ "javax.ws.rs.container.DynamicFeature", "jakarta.ws.rs.container.DynamicFeature" ],
    "persistenceunitinfo" : [ "jakarta.persistence.spi.PersistenceUnitInfo" ],
    "datasourcedefinition" : [ "jakarta.annotation.sql.DataSourceDefinition" ],
    "valid" : [ "jakarta.validation.Valid" ],
    "tuple" : [ "jakarta.persistence.Tuple" ],
    "path.methodnode" : [ "jakarta.validation.Path.MethodNode" ],
    "processinjectionpoint" : [ "javax.enterprise.inject.spi.ProcessInjectionPoint", "jakarta.enterprise.inject.spi.ProcessInjectionPoint" ],
    "secontainer" : [ "jakarta.enterprise.inject.se.SeContainer", "javax.enterprise.inject.se.SeContainer" ],
    "headerparam" : [ "jakarta.ws.rs.HeaderParam", "javax.ws.rs.HeaderParam" ],
    "parameter.style" : [ "org.eclipse.microprofile.openapi.models.parameters.Parameter.Style" ],
    "synthesis" : [ "jakarta.enterprise.inject.build.compatible.spi.Synthesis" ],
    "accesstype" : [ "jakarta.persistence.AccessType" ],
    "namedentitygraphs" : [ "jakarta.persistence.NamedEntityGraphs" ],
    "graphqlapi" : [ "org.eclipse.microprofile.graphql.GraphQLApi" ],
    "internalservererrorexception" : [ "javax.ws.rs.InternalServerErrorException", "jakarta.ws.rs.InternalServerErrorException" ],
    "oasmodelreader" : [ "org.eclipse.microprofile.openapi.OASModelReader" ],
    "requestbodyschema" : [ "org.eclipse.microprofile.openapi.annotations.parameters.RequestBodySchema" ],
    "constraintvalidatorcontext.constraintviolationbuilder.nodebuildercustomizablecontext" : [ "jakarta.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeBuilderCustomizableContext" ],
    "groupconversiondescriptor" : [ "jakarta.validation.metadata.GroupConversionDescriptor" ],
    "setattribute" : [ "jakarta.persistence.metamodel.SetAttribute" ],
    "constraintvalidatorcontext.constraintviolationbuilder.leafnodebuilderdefinedcontext" : [ "jakarta.validation.ConstraintValidatorContext.ConstraintViolationBuilder.LeafNodeBuilderDefinedContext" ],
    "paramconverter" : [ "javax.ws.rs.ext.ParamConverter", "jakarta.ws.rs.ext.ParamConverter" ],
    "scannedclasses" : [ "jakarta.enterprise.inject.build.compatible.spi.ScannedClasses" ],
    "names" : [ "org.eclipse.microprofile.jwt.config.Names" ],
    "multivaluedhashmap" : [ "jakarta.ws.rs.core.MultivaluedHashMap", "javax.ws.rs.core.MultivaluedHashMap" ],
    "future" : [ "jakarta.validation.constraints.Future" ],
    "constraint" : [ "jakarta.validation.Constraint" ],
    "securityschemein" : [ "org.eclipse.microprofile.openapi.annotations.enums.SecuritySchemeIn" ],
    "asserttrue" : [ "jakarta.validation.constraints.AssertTrue" ],
    "persistenceproviderresolverholder.defaultpersistenceproviderresolver.loaderreference" : [ "jakarta.persistence.spi.PersistenceProviderResolverHolder.DefaultPersistenceProviderResolver.LoaderReference" ],
    "entity" : [ "jakarta.persistence.Entity", "javax.ws.rs.client.Entity", "jakarta.ws.rs.client.Entity" ],
    "runas" : [ "jakarta.annotation.security.RunAs" ],
    "deploymentexception" : [ "jakarta.enterprise.inject.spi.DeploymentException", "javax.enterprise.inject.spi.DeploymentException" ],
    "parameterdescriptor" : [ "jakarta.validation.metadata.ParameterDescriptor" ],
    "decimalmin.list" : [ "jakarta.validation.constraints.DecimalMin.List" ],
    "unproxyableresolutionexception" : [ "jakarta.enterprise.inject.UnproxyableResolutionException", "javax.enterprise.inject.UnproxyableResolutionException" ],
    "secondarytable" : [ "jakarta.persistence.SecondaryTable" ],
    "injectionpointinfo" : [ "jakarta.enterprise.inject.build.compatible.spi.InjectionPointInfo" ],
    "observermethod" : [ "jakarta.enterprise.inject.spi.ObserverMethod", "javax.enterprise.inject.spi.ObserverMethod" ],
    "decorated" : [ "javax.enterprise.inject.Decorated", "jakarta.enterprise.inject.Decorated" ],
    "beanparam" : [ "jakarta.ws.rs.BeanParam", "javax.ws.rs.BeanParam" ],
    "healthcheckresponse" : [ "org.eclipse.microprofile.health.HealthCheckResponse" ],
    "contextresolver" : [ "javax.ws.rs.ext.ContextResolver", "jakarta.ws.rs.ext.ContextResolver" ],
    "outboundsseevent.builder" : [ "javax.ws.rs.sse.OutboundSseEvent.Builder", "jakarta.ws.rs.sse.OutboundSseEvent.Builder" ],
    "path.parameternode" : [ "jakarta.validation.Path.ParameterNode" ],
    "completioncallback" : [ "jakarta.ws.rs.container.CompletionCallback", "javax.ws.rs.container.CompletionCallback" ],
    "specializes.literal" : [ "javax.enterprise.inject.Specializes.Literal", "jakarta.enterprise.inject.Specializes.Literal" ],
    "uriinfo" : [ "jakarta.ws.rs.core.UriInfo", "javax.ws.rs.core.UriInfo" ],
    "destroyed.literal" : [ "javax.enterprise.context.Destroyed.Literal", "jakarta.enterprise.context.Destroyed.Literal" ],
    "injectionpoint" : [ "jakarta.enterprise.inject.spi.InjectionPoint", "javax.enterprise.inject.spi.InjectionPoint" ],
    "counting" : [ "org.eclipse.microprofile.metrics.Counting" ],
    "parametermode" : [ "jakarta.persistence.ParameterMode" ],
    "new" : [ "javax.enterprise.inject.New" ],
    "httpsessionevent" : [ "jakarta.servlet.http.HttpSessionEvent" ],
    "faulttoleranceexception" : [ "org.eclipse.microprofile.faulttolerance.exceptions.FaultToleranceException" ],
    "httpfilter" : [ "jakarta.servlet.http.HttpFilter" ],
    "timed" : [ "org.eclipse.microprofile.metrics.annotation.Timed" ],
    "httpservletresponsewrapper" : [ "jakarta.servlet.http.HttpServletResponseWrapper" ],
    "noproviderfoundexception" : [ "jakarta.validation.NoProviderFoundException" ],
    "defaultvalue" : [ "jakarta.ws.rs.DefaultValue", "javax.ws.rs.DefaultValue", "org.eclipse.microprofile.graphql.DefaultValue" ],
    "sequencegenerator" : [ "jakarta.persistence.SequenceGenerator" ],
    "annotatedconstructorconfigurator" : [ "javax.enterprise.inject.spi.configurator.AnnotatedConstructorConfigurator", "jakarta.enterprise.inject.spi.configurator.AnnotatedConstructorConfigurator" ],
    "newcookie.abstractnewcookiebuilder" : [ "jakarta.ws.rs.core.NewCookie.AbstractNewCookieBuilder" ],
    "groupsequence" : [ "jakarta.validation.GroupSequence" ],
    "withannotations" : [ "jakarta.enterprise.inject.spi.WithAnnotations", "javax.enterprise.inject.spi.WithAnnotations" ],
    "connectorattribute" : [ "org.eclipse.microprofile.reactive.messaging.spi.ConnectorAttribute" ],
    "sseeventsink" : [ "jakarta.ws.rs.sse.SseEventSink", "javax.ws.rs.sse.SseEventSink" ],
    "sebootstrap.instance" : [ "jakarta.ws.rs.SeBootstrap.Instance" ],
    "basic" : [ "jakarta.persistence.Basic" ],
    "paramconverter.lazy" : [ "jakarta.ws.rs.ext.ParamConverter.Lazy", "javax.ws.rs.ext.ParamConverter.Lazy" ],
    "handlestypes" : [ "jakarta.servlet.annotation.HandlesTypes" ],
    "liveness" : [ "org.eclipse.microprofile.health.Liveness" ],
    "persistenceutil" : [ "jakarta.persistence.PersistenceUtil" ],
    "restclientdefinitionexception" : [ "org.eclipse.microprofile.rest.client.RestClientDefinitionException" ],
    "jsonwebtoken" : [ "org.eclipse.microprofile.jwt.JsonWebToken" ],
    "specializes" : [ "javax.enterprise.inject.Specializes", "jakarta.enterprise.inject.Specializes" ],
    "timer" : [ "org.eclipse.microprofile.metrics.Timer" ],
    "servletsecurity" : [ "jakarta.servlet.annotation.ServletSecurity" ],
    "nonuniqueresultexception" : [ "jakarta.persistence.NonUniqueResultException" ],
    "collectionattribute" : [ "jakarta.persistence.metamodel.CollectionAttribute" ],
    "assertfalse.list" : [ "jakarta.validation.constraints.AssertFalse.List" ],
    "providerspecificbootstrap" : [ "jakarta.validation.bootstrap.ProviderSpecificBootstrap" ],
    "restclient" : [ "org.eclipse.microprofile.rest.client.inject.RestClient" ],
    "overridesattribute" : [ "jakarta.validation.OverridesAttribute" ],
    "assertfalse" : [ "jakarta.validation.constraints.AssertFalse" ],
    "entityexistsexception" : [ "jakarta.persistence.EntityExistsException" ],
    "pathparam" : [ "javax.ws.rs.PathParam", "jakarta.ws.rs.PathParam" ],
    "any" : [ "jakarta.enterprise.inject.Any", "javax.enterprise.inject.Any" ],
    "discriminator" : [ "org.eclipse.microprofile.openapi.models.media.Discriminator" ],
    "entitypart" : [ "jakarta.ws.rs.core.EntityPart" ],
    "elementcollection" : [ "jakarta.persistence.ElementCollection" ],
    "elementdescriptor" : [ "jakarta.validation.metadata.ElementDescriptor" ],
    "application" : [ "jakarta.ws.rs.core.Application", "javax.ws.rs.core.Application" ],
    "flushmodetype" : [ "jakarta.persistence.FlushModeType" ],
    "groupdefinitionexception" : [ "jakarta.validation.GroupDefinitionException" ],
    "unsatisfiedresolutionexception" : [ "jakarta.enterprise.inject.UnsatisfiedResolutionException", "javax.enterprise.inject.UnsatisfiedResolutionException" ],
    "dependent.literal" : [ "jakarta.enterprise.context.Dependent.Literal", "javax.enterprise.context.Dependent.Literal" ],
    "httpservletrequestwrapper" : [ "jakarta.servlet.http.HttpServletRequestWrapper" ],
    "servletresponse" : [ "jakarta.servlet.ServletResponse" ],
    "asynclistener" : [ "jakarta.servlet.AsyncListener" ],
    "embeddable" : [ "jakarta.persistence.Embeddable" ],
    "beforedestroyed.literal" : [ "jakarta.enterprise.context.BeforeDestroyed.Literal", "javax.enterprise.context.BeforeDestroyed.Literal" ],
    "claimvalue" : [ "org.eclipse.microprofile.jwt.ClaimValue" ],
    "namedattributenode" : [ "jakarta.persistence.NamedAttributeNode" ],
    "resolutionexception" : [ "jakarta.enterprise.inject.ResolutionException", "javax.enterprise.inject.ResolutionException" ],
    "registerprovider" : [ "org.eclipse.microprofile.rest.client.annotation.RegisterProvider" ],
    "healthcheck" : [ "org.eclipse.microprofile.health.HealthCheck" ],
    "unwrapbydefault" : [ "jakarta.validation.valueextraction.UnwrapByDefault" ],
    "constraintvalidatorcontext.constraintviolationbuilder.containerelementnodebuilderdefinedcontext" : [ "jakarta.validation.ConstraintValidatorContext.ConstraintViolationBuilder.ContainerElementNodeBuilderDefinedContext" ],
    "entitytransaction" : [ "jakarta.persistence.EntityTransaction" ],
    "rollbackexception" : [ "jakarta.persistence.RollbackException" ],
    "sessionbeantype" : [ "jakarta.enterprise.inject.spi.SessionBeanType", "javax.enterprise.inject.spi.SessionBeanType" ],
    "entityresult" : [ "jakarta.persistence.EntityResult" ],
    "annotatedtype" : [ "jakarta.enterprise.inject.spi.AnnotatedType", "javax.enterprise.inject.spi.AnnotatedType" ],
    "message.2" : [ "org.eclipse.microprofile.reactive.messaging.Message.2" ],
    "mappingmatch" : [ "jakarta.servlet.http.MappingMatch" ],
    "message.1" : [ "org.eclipse.microprofile.reactive.messaging.Message.1" ],
    "cache" : [ "jakarta.persistence.Cache" ],
    "queryparam" : [ "javax.ws.rs.QueryParam", "jakarta.ws.rs.QueryParam" ],
    "sessionscoped.literal" : [ "javax.enterprise.context.SessionScoped.Literal", "jakarta.enterprise.context.SessionScoped.Literal" ],
    "sampling" : [ "org.eclipse.microprofile.metrics.Sampling" ],
    "transientreference" : [ "jakarta.enterprise.inject.TransientReference", "javax.enterprise.inject.TransientReference" ],
    "constraintvalidatorcontext.constraintviolationbuilder" : [ "jakarta.validation.ConstraintValidatorContext.ConstraintViolationBuilder" ],
    "messageinterpolator.context" : [ "jakarta.validation.MessageInterpolator.Context" ],
    "conversationscoped" : [ "jakarta.enterprise.context.ConversationScoped", "javax.enterprise.context.ConversationScoped" ],
    "onoverflow" : [ "org.eclipse.microprofile.reactive.messaging.OnOverflow" ],
    "input" : [ "org.eclipse.microprofile.graphql.Input" ],
    "requestdispatcher" : [ "jakarta.servlet.RequestDispatcher" ],
    "constraintvalidatorfactory" : [ "jakarta.validation.ConstraintValidatorFactory" ],
    "persistenceproviderresolverholder.defaultpersistenceproviderresolver" : [ "jakarta.persistence.spi.PersistenceProviderResolverHolder.DefaultPersistenceProviderResolver" ],
    "stereotype" : [ "javax.enterprise.inject.Stereotype", "jakarta.enterprise.inject.Stereotype" ],
    "bulkhead" : [ "org.eclipse.microprofile.faulttolerance.Bulkhead" ],
    "asynccontext" : [ "jakarta.servlet.AsyncContext" ],
    "parameternameprovider" : [ "jakarta.validation.ParameterNameProvider" ],
    "configproperties" : [ "org.eclipse.microprofile.config.inject.ConfigProperties" ],
    "default" : [ "javax.enterprise.inject.Default", "jakarta.validation.groups.Default", "jakarta.enterprise.inject.Default" ],
    "annotatedtypeconfigurator" : [ "jakarta.enterprise.inject.spi.configurator.AnnotatedTypeConfigurator", "javax.enterprise.inject.spi.configurator.AnnotatedTypeConfigurator" ],
    "timeoutexception" : [ "org.eclipse.microprofile.faulttolerance.exceptions.TimeoutException" ],
    "managedbean" : [ "jakarta.annotation.ManagedBean" ],
    "namedentitygraph" : [ "jakarta.persistence.NamedEntityGraph" ],
    "messagebodywriter" : [ "javax.ws.rs.ext.MessageBodyWriter", "jakarta.ws.rs.ext.MessageBodyWriter" ],
    "attribute" : [ "jakarta.persistence.metamodel.Attribute" ],
    "rolesallowed" : [ "jakarta.annotation.security.RolesAllowed" ],
    "noresultexception" : [ "jakarta.persistence.NoResultException" ],
    "cacheretrievemode" : [ "jakarta.persistence.CacheRetrieveMode" ],
    "beanconfigurator" : [ "javax.enterprise.inject.spi.configurator.BeanConfigurator", "jakarta.enterprise.inject.spi.configurator.BeanConfigurator" ],
    "securitycontext" : [ "jakarta.ws.rs.core.SecurityContext", "javax.ws.rs.core.SecurityContext" ],
    "providerutil" : [ "jakarta.persistence.spi.ProviderUtil" ],
    "secontainerinitializer" : [ "jakarta.enterprise.inject.se.SeContainerInitializer", "javax.enterprise.inject.se.SeContainerInitializer" ],
    "entitymanager" : [ "jakarta.persistence.EntityManager" ],
    "validationtarget" : [ "jakarta.validation.constraintvalidation.ValidationTarget" ],
    "persistenceproviderresolverholder.defaultpersistenceproviderresolver.persistenceproviderreference" : [ "jakarta.persistence.spi.PersistenceProviderResolverHolder.DefaultPersistenceProviderResolver.PersistenceProviderReference" ],
    "servletconnection" : [ "jakarta.servlet.ServletConnection" ],
    "tablegenerator" : [ "jakarta.persistence.TableGenerator" ],
    "validationprovider" : [ "jakarta.validation.spi.ValidationProvider" ],
    "eventcontext" : [ "jakarta.enterprise.inject.spi.EventContext", "javax.enterprise.inject.spi.EventContext" ],
    "metric" : [ "org.eclipse.microprofile.metrics.Metric", "org.eclipse.microprofile.metrics.annotation.Metric" ],
    "storedprocedureparameter" : [ "jakarta.persistence.StoredProcedureParameter" ],
    "persistencecontexts" : [ "jakarta.persistence.PersistenceContexts" ],
    "fallback.default" : [ "org.eclipse.microprofile.faulttolerance.Fallback.DEFAULT" ],
    "response.status" : [ "javax.ws.rs.core.Response.Status", "jakarta.ws.rs.core.Response.Status" ],
    "afterdeploymentvalidation" : [ "javax.enterprise.inject.spi.AfterDeploymentValidation", "jakarta.enterprise.inject.spi.AfterDeploymentValidation" ],
    "manytoone" : [ "jakarta.persistence.ManyToOne" ],
    "healthcheckresponseprovider" : [ "org.eclipse.microprofile.health.spi.HealthCheckResponseProvider" ],
    "fetchparent" : [ "jakarta.persistence.criteria.FetchParent" ],
    "cachecontrol" : [ "jakarta.ws.rs.core.CacheControl", "javax.ws.rs.core.CacheControl" ],
    "scopeinfo" : [ "jakarta.enterprise.inject.build.compatible.spi.ScopeInfo" ],
    "converter" : [ "org.eclipse.microprofile.config.spi.Converter", "jakarta.persistence.Converter" ],
    "runtimedelegate.headerdelegate" : [ "jakarta.ws.rs.ext.RuntimeDelegate.HeaderDelegate", "javax.ws.rs.ext.RuntimeDelegate.HeaderDelegate" ],
    "namednativequery" : [ "jakarta.persistence.NamedNativeQuery" ],
    "joincolumns" : [ "jakarta.persistence.JoinColumns" ],
    "source" : [ "org.eclipse.microprofile.graphql.Source" ],
    "formparam" : [ "javax.ws.rs.FormParam", "jakarta.ws.rs.FormParam" ],
    "restclientlistener" : [ "org.eclipse.microprofile.rest.client.spi.RestClientListener" ],
    "connectorattribute.direction" : [ "org.eclipse.microprofile.reactive.messaging.spi.ConnectorAttribute.Direction" ],
    "typedquery" : [ "jakarta.persistence.TypedQuery" ],
    "constraintviolation" : [ "jakarta.validation.ConstraintViolation" ],
    "persistenceunits" : [ "jakarta.persistence.PersistenceUnits" ],
    "requestscoped.literal" : [ "jakarta.enterprise.context.RequestScoped.Literal", "javax.enterprise.context.RequestScoped.Literal" ],
    "methodconfig" : [ "jakarta.enterprise.inject.build.compatible.spi.MethodConfig" ],
    "servletinputstream" : [ "jakarta.servlet.ServletInputStream" ],
    "attributeconverter" : [ "jakarta.persistence.AttributeConverter" ],
    "criteriabuilder" : [ "jakarta.persistence.criteria.CriteriaBuilder" ],
    "constrainedto" : [ "javax.ws.rs.ConstrainedTo", "jakarta.ws.rs.ConstrainedTo" ],
    "name" : [ "org.eclipse.microprofile.graphql.Name" ],
    "validationexception" : [ "jakarta.validation.ValidationException" ],
    "mediatype" : [ "javax.ws.rs.core.MediaType", "jakarta.ws.rs.core.MediaType", "org.eclipse.microprofile.openapi.models.media.MediaType" ],
    "parameters" : [ "org.eclipse.microprofile.openapi.annotations.parameters.Parameters", "jakarta.enterprise.inject.build.compatible.spi.Parameters" ],
    "validationmode" : [ "jakarta.persistence.ValidationMode" ],
    "genericbootstrap" : [ "jakarta.validation.bootstrap.GenericBootstrap" ],
    "description" : [ "org.eclipse.microprofile.graphql.Description" ],
    "apiresponse" : [ "org.eclipse.microprofile.openapi.models.responses.APIResponse", "org.eclipse.microprofile.openapi.annotations.responses.APIResponse" ],
    "negative" : [ "jakarta.validation.constraints.Negative" ],
    "taglibdescriptor" : [ "jakarta.servlet.descriptor.TaglibDescriptor" ],
    "pushbuilder" : [ "jakarta.servlet.http.PushBuilder" ],
    "declarationconfig" : [ "jakarta.enterprise.inject.build.compatible.spi.DeclarationConfig" ],
    "pluralattribute.collectiontype" : [ "jakarta.persistence.metamodel.PluralAttribute.CollectionType" ],
    "future.list" : [ "jakarta.validation.constraints.Future.List" ],
    "webapplicationexception" : [ "javax.ws.rs.WebApplicationException", "jakarta.ws.rs.WebApplicationException" ],
    "httpheaders" : [ "javax.ws.rs.core.HttpHeaders", "jakarta.ws.rs.core.HttpHeaders" ],
    "clientbuilder" : [ "javax.ws.rs.client.ClientBuilder", "jakarta.ws.rs.client.ClientBuilder" ],
    "outgoingconnectorfactory" : [ "org.eclipse.microprofile.reactive.messaging.spi.OutgoingConnectorFactory" ],
    "valueextractor" : [ "jakarta.validation.valueextraction.ValueExtractor" ],
    "storedprocedurequery" : [ "jakarta.persistence.StoredProcedureQuery" ],
    "bootstrapconfiguration" : [ "jakarta.validation.BootstrapConfiguration" ],
    "httpsessionidlistener" : [ "jakarta.servlet.http.HttpSessionIdListener" ],
    "validationproviderresolver" : [ "jakarta.validation.ValidationProviderResolver" ],
    "configurable" : [ "jakarta.ws.rs.core.Configurable", "javax.ws.rs.core.Configurable" ],
    "dateformat" : [ "org.eclipse.microprofile.graphql.DateFormat" ],
    "securityscheme.type" : [ "org.eclipse.microprofile.openapi.models.security.SecurityScheme.Type" ],
    "contextual" : [ "javax.enterprise.context.spi.Contextual", "jakarta.enterprise.context.spi.Contextual" ],
    "sharedcachemode" : [ "jakarta.persistence.SharedCacheMode" ],
    "connectorliteral" : [ "org.eclipse.microprofile.reactive.messaging.spi.ConnectorLiteral" ],
    "metricregistry" : [ "org.eclipse.microprofile.metrics.MetricRegistry" ],
    "httpmethodconstraintelement" : [ "jakarta.servlet.HttpMethodConstraintElement" ],
    "paramconverterprovider" : [ "javax.ws.rs.ext.ParamConverterProvider", "jakarta.ws.rs.ext.ParamConverterProvider" ],
    "put" : [ "javax.ws.rs.PUT", "jakarta.ws.rs.PUT" ],
    "notallowedexception" : [ "jakarta.ws.rs.NotAllowedException", "javax.ws.rs.NotAllowedException" ],
    "illegalproductexception" : [ "jakarta.enterprise.inject.IllegalProductException", "javax.enterprise.inject.IllegalProductException" ],
    "priorities" : [ "javax.ws.rs.Priorities", "jakarta.ws.rs.Priorities" ],
    "bindable" : [ "jakarta.persistence.metamodel.Bindable" ],
    "clockprovider" : [ "jakarta.validation.ClockProvider" ],
    "mapkeyjoincolumn" : [ "jakarta.persistence.MapKeyJoinColumn" ],
    "options" : [ "javax.ws.rs.OPTIONS", "jakarta.ws.rs.OPTIONS" ],
    "syntheticbeanbuilder" : [ "jakarta.enterprise.inject.build.compatible.spi.SyntheticBeanBuilder" ],
    "securityrequirementsset" : [ "org.eclipse.microprofile.openapi.annotations.security.SecurityRequirementsSet" ],
    "securityrequirement" : [ "org.eclipse.microprofile.openapi.annotations.security.SecurityRequirement", "org.eclipse.microprofile.openapi.models.security.SecurityRequirement" ],
    "sessioncookieconfig" : [ "jakarta.servlet.SessionCookieConfig" ],
    "claimliteral" : [ "org.eclipse.microprofile.jwt.ClaimLiteral" ],
    "httpsessionactivationlistener" : [ "jakarta.servlet.http.HttpSessionActivationListener" ],
    "openapi" : [ "org.eclipse.microprofile.openapi.models.OpenAPI" ],
    "instance.handle" : [ "jakarta.enterprise.inject.Instance.Handle" ],
    "priority" : [ "jakarta.annotation.Priority" ],
    "filterregistration" : [ "jakarta.servlet.FilterRegistration" ],
    "postupdate" : [ "jakarta.persistence.PostUpdate" ],
    "attributenode" : [ "jakarta.persistence.AttributeNode" ],
    "queryparamstyle" : [ "org.eclipse.microprofile.rest.client.ext.QueryParamStyle" ],
    "contextnotactiveexception" : [ "jakarta.enterprise.context.ContextNotActiveException", "javax.enterprise.context.ContextNotActiveException" ],
    "constraintdefinitionexception" : [ "jakarta.validation.ConstraintDefinitionException" ],
    "timer.context" : [ "org.eclipse.microprofile.metrics.Timer.Context" ],
    "prioritized" : [ "jakarta.enterprise.inject.spi.Prioritized", "javax.enterprise.inject.spi.Prioritized" ],
    "lob" : [ "jakarta.persistence.Lob" ],
    "containerdescriptor" : [ "jakarta.validation.metadata.ContainerDescriptor" ],
    "jointable" : [ "jakarta.persistence.JoinTable" ],
    "pattern" : [ "jakarta.validation.constraints.Pattern" ],
    "synchronizationtype" : [ "jakarta.persistence.SynchronizationType" ],
    "validation.1" : [ "jakarta.validation.Validation.1" ],
    "elementdescriptor.constraintfinder" : [ "jakarta.validation.metadata.ElementDescriptor.ConstraintFinder" ],
    "healthcheckresponse.status" : [ "org.eclipse.microprofile.health.HealthCheckResponse.Status" ],
    "persistencecontext" : [ "jakarta.persistence.PersistenceContext" ],
    "compoundselection" : [ "jakarta.persistence.criteria.CompoundSelection" ],
    "processmanagedbean" : [ "javax.enterprise.inject.spi.ProcessManagedBean", "jakarta.enterprise.inject.spi.ProcessManagedBean" ],
    "constraintvalidatorcontext.constraintviolationbuilder.leafnodecontextbuilder" : [ "jakarta.validation.ConstraintValidatorContext.ConstraintViolationBuilder.LeafNodeContextBuilder" ],
    "servletcontextattributeevent" : [ "jakarta.servlet.ServletContextAttributeEvent" ],
    "oauthflow" : [ "org.eclipse.microprofile.openapi.models.security.OAuthFlow", "org.eclipse.microprofile.openapi.annotations.security.OAuthFlow" ],
    "annotatedconstructor" : [ "jakarta.enterprise.inject.spi.AnnotatedConstructor", "javax.enterprise.inject.spi.AnnotatedConstructor" ],
    "featurecontext" : [ "javax.ws.rs.core.FeatureContext", "jakarta.ws.rs.core.FeatureContext" ],
    "cookie.abstractcookiebuilder" : [ "jakarta.ws.rs.core.Cookie.AbstractCookieBuilder" ],
    "link.jaxbadapter" : [ "jakarta.ws.rs.core.Link.JaxbAdapter", "javax.ws.rs.core.Link.JaxbAdapter" ],
    "httpservletresponse" : [ "jakarta.servlet.http.HttpServletResponse" ],
    "methodtype" : [ "jakarta.validation.metadata.MethodType" ],
    "pathsegment" : [ "javax.ws.rs.core.PathSegment", "jakarta.ws.rs.core.PathSegment" ],
    "type.persistencetype" : [ "jakarta.persistence.metamodel.Type.PersistenceType" ],
    "fetch" : [ "jakarta.persistence.criteria.Fetch" ],
    "manytomany" : [ "jakarta.persistence.ManyToMany" ],
    "constraintvalidatorcontext.constraintviolationbuilder.containerelementnodebuildercustomizablecontext" : [ "jakarta.validation.ConstraintValidatorContext.ConstraintViolationBuilder.ContainerElementNodeBuilderCustomizableContext" ],
    "negativeorzero" : [ "jakarta.validation.constraints.NegativeOrZero" ],
    "clientresponsefilter" : [ "jakarta.ws.rs.client.ClientResponseFilter", "javax.ws.rs.client.ClientResponseFilter" ],
    "readerinterceptorcontext" : [ "jakarta.ws.rs.ext.ReaderInterceptorContext", "javax.ws.rs.ext.ReaderInterceptorContext" ],
    "newcookie" : [ "jakarta.ws.rs.core.NewCookie", "javax.ws.rs.core.NewCookie" ],
    "transformerexception" : [ "jakarta.persistence.spi.TransformerException" ],
    "processsyntheticannotatedtype" : [ "javax.enterprise.inject.spi.ProcessSyntheticAnnotatedType", "jakarta.enterprise.inject.spi.ProcessSyntheticAnnotatedType" ],
    "executablevalidator" : [ "jakarta.validation.executable.ExecutableValidator" ],
    "beandescriptor" : [ "jakarta.validation.metadata.BeanDescriptor" ],
    "encoding.style" : [ "org.eclipse.microprofile.openapi.models.media.Encoding.Style" ],
    "annotationbuilder" : [ "jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilder" ],
    "nobodyoutputstream" : [ "jakarta.servlet.http.NoBodyOutputStream" ],
    "sessionscoped" : [ "jakarta.enterprise.context.SessionScoped", "javax.enterprise.context.SessionScoped" ],
    "annotatedparameterconfigurator" : [ "jakarta.enterprise.inject.spi.configurator.AnnotatedParameterConfigurator", "javax.enterprise.inject.spi.configurator.AnnotatedParameterConfigurator" ],
    "criteriabuilder.trimspec" : [ "jakarta.persistence.criteria.CriteriaBuilder.Trimspec" ],
    "bean" : [ "javax.enterprise.inject.spi.Bean", "jakarta.enterprise.inject.spi.Bean" ],
    "oasfactoryresolver" : [ "org.eclipse.microprofile.openapi.spi.OASFactoryResolver" ],
    "notempty.list" : [ "jakarta.validation.constraints.NotEmpty.List" ],
    "preremove" : [ "jakarta.persistence.PreRemove" ],
    "lockmodetype" : [ "jakarta.persistence.LockModeType" ],
    "pluraljoin" : [ "jakarta.persistence.criteria.PluralJoin" ],
    "pastorpresent.list" : [ "jakarta.validation.constraints.PastOrPresent.List" ],
    "produces" : [ "javax.enterprise.inject.Produces", "javax.ws.rs.Produces", "jakarta.ws.rs.Produces", "jakarta.enterprise.inject.Produces" ],
    "servletoutputstream" : [ "jakarta.servlet.ServletOutputStream" ],
    "producer" : [ "jakarta.enterprise.inject.spi.Producer", "javax.enterprise.inject.spi.Producer" ],
    "fallback" : [ "org.eclipse.microprofile.faulttolerance.Fallback" ],
    "shutdown" : [ "jakarta.enterprise.event.Shutdown" ],
    "request" : [ "jakarta.ws.rs.core.Request", "javax.ws.rs.core.Request" ],
    "variant.variantlistbuilder" : [ "javax.ws.rs.core.Variant.VariantListBuilder", "jakarta.ws.rs.core.Variant.VariantListBuilder" ],
    "buildcompatibleextension" : [ "jakarta.enterprise.inject.build.compatible.spi.BuildCompatibleExtension" ],
    "jsppropertygroupdescriptor" : [ "jakarta.servlet.descriptor.JspPropertyGroupDescriptor" ],
    "graphqlexception.exceptiontype" : [ "org.eclipse.microprofile.graphql.GraphQLException.ExceptionType" ],
    "part" : [ "jakarta.servlet.http.Part" ],
    "writelistener" : [ "jakarta.servlet.WriteListener" ],
    "beforebeandiscovery" : [ "javax.enterprise.inject.spi.BeforeBeanDiscovery", "jakarta.enterprise.inject.spi.BeforeBeanDiscovery" ],
    "containerresponsefilter" : [ "jakarta.ws.rs.container.ContainerResponseFilter", "javax.ws.rs.container.ContainerResponseFilter" ],
    "oasconfig" : [ "org.eclipse.microprofile.openapi.OASConfig" ],
    "columnresult" : [ "jakarta.persistence.ColumnResult" ],
    "annotatedmethodconfigurator" : [ "jakarta.enterprise.inject.spi.configurator.AnnotatedMethodConfigurator", "javax.enterprise.inject.spi.configurator.AnnotatedMethodConfigurator" ],
    "prepersist" : [ "jakarta.persistence.PrePersist" ],
    "configkey" : [ "org.eclipse.microprofile.graphql.ConfigKey" ],
    "beanattributesconfigurator" : [ "javax.enterprise.inject.spi.configurator.BeanAttributesConfigurator", "jakarta.enterprise.inject.spi.configurator.BeanAttributesConfigurator" ],
    "creationexception" : [ "jakarta.enterprise.inject.CreationException", "javax.enterprise.inject.CreationException" ],
    "immutablenotificationoptions" : [ "jakarta.enterprise.event.ImmutableNotificationOptions", "javax.enterprise.event.ImmutableNotificationOptions" ],
    "bindable.bindabletype" : [ "jakarta.persistence.metamodel.Bindable.BindableType" ],
    "classtransformer" : [ "jakarta.persistence.spi.ClassTransformer" ],
    "null.list" : [ "jakarta.validation.constraints.Null.List" ],
    "configsource" : [ "org.eclipse.microprofile.config.spi.ConfigSource" ],
    "onetoone" : [ "jakarta.persistence.OneToOne" ],
    "jointype" : [ "jakarta.persistence.criteria.JoinType" ],
    "responseprocessingexception" : [ "jakarta.ws.rs.client.ResponseProcessingException", "javax.ws.rs.client.ResponseProcessingException" ],
    "buildservicesresolver" : [ "jakarta.enterprise.inject.build.compatible.spi.BuildServicesResolver" ],
    "alternative" : [ "jakarta.enterprise.inject.Alternative", "javax.enterprise.inject.Alternative" ],
    "primarykeyjoincolumn" : [ "jakarta.persistence.PrimaryKeyJoinColumn" ],
    "notfoundexception" : [ "jakarta.ws.rs.NotFoundException", "javax.ws.rs.NotFoundException" ],
    "sebootstrap.configuration.builder" : [ "jakarta.ws.rs.SeBootstrap.Configuration.Builder" ],
    "permitall" : [ "jakarta.annotation.security.PermitAll" ],
    "immutablenotificationoptions.builder" : [ "jakarta.enterprise.event.ImmutableNotificationOptions.Builder", "javax.enterprise.event.ImmutableNotificationOptions.Builder" ],
    "multipartconfigelement" : [ "jakarta.servlet.MultipartConfigElement" ],
    "unwrapping.unwrap" : [ "jakarta.validation.valueextraction.Unwrapping.Unwrap" ],
    "predicate.booleanoperator" : [ "jakarta.persistence.criteria.Predicate.BooleanOperator" ],
    "attribute.persistentattributetype" : [ "jakarta.persistence.metamodel.Attribute.PersistentAttributeType" ],
    "servlet" : [ "jakarta.servlet.Servlet" ],
    "pathitem.httpmethod" : [ "org.eclipse.microprofile.openapi.models.PathItem.HttpMethod" ],
    "mappedsuperclasstype" : [ "jakarta.persistence.metamodel.MappedSuperclassType" ],
    "mapkey" : [ "jakarta.persistence.MapKey" ],
    "generictype" : [ "javax.ws.rs.core.GenericType", "jakarta.ws.rs.core.GenericType" ],
    "callbackoperation" : [ "org.eclipse.microprofile.openapi.annotations.callbacks.CallbackOperation" ],
    "ordercolumn" : [ "jakarta.persistence.OrderColumn" ],
    "path" : [ "javax.ws.rs.Path", "jakarta.persistence.criteria.Path", "jakarta.validation.Path", "jakarta.ws.rs.Path" ],
    "sebootstrap.configuration.sslclientauthentication" : [ "jakarta.ws.rs.SeBootstrap.Configuration.SSLClientAuthentication" ],
    "returnvaluedescriptor" : [ "jakarta.validation.metadata.ReturnValueDescriptor" ],
    "webfilter" : [ "jakarta.servlet.annotation.WebFilter" ],
    "foreignkey" : [ "jakarta.persistence.ForeignKey" ],
    "criteriabuilder.simplecase" : [ "jakarta.persistence.criteria.CriteriaBuilder.SimpleCase" ],
    "metricfilter" : [ "org.eclipse.microprofile.metrics.MetricFilter" ],
    "past" : [ "jakarta.validation.constraints.Past" ],
    "extractedvalue" : [ "jakarta.validation.valueextraction.ExtractedValue" ],
    "constructorresult" : [ "jakarta.persistence.ConstructorResult" ],
    "tags" : [ "org.eclipse.microprofile.openapi.annotations.tags.Tags" ],
    "transient" : [ "jakarta.persistence.Transient" ],
    "futureorpresent" : [ "jakarta.validation.constraints.FutureOrPresent" ],
    "abstractquery" : [ "jakarta.persistence.criteria.AbstractQuery" ],
    "syncinvoker" : [ "jakarta.ws.rs.client.SyncInvoker", "javax.ws.rs.client.SyncInvoker" ],
    "skipifportableextensionpresent" : [ "jakarta.enterprise.inject.build.compatible.spi.SkipIfPortableExtensionPresent" ],
    "convertgroup.list" : [ "jakarta.validation.groups.ConvertGroup.List" ],
    "configsourceprovider" : [ "org.eclipse.microprofile.config.spi.ConfigSourceProvider" ],
    "schema" : [ "org.eclipse.microprofile.openapi.models.media.Schema", "org.eclipse.microprofile.openapi.annotations.media.Schema" ],
    "cascadabledescriptor" : [ "jakarta.validation.metadata.CascadableDescriptor" ],
    "abstractmultivaluedmap" : [ "jakarta.ws.rs.core.AbstractMultivaluedMap", "javax.ws.rs.core.AbstractMultivaluedMap" ],
    "servletcontextevent" : [ "jakarta.servlet.ServletContextEvent" ],
    "observerinfo" : [ "jakarta.enterprise.inject.build.compatible.spi.ObserverInfo" ],
    "typed.literal" : [ "javax.enterprise.inject.Typed.Literal", "jakarta.enterprise.inject.Typed.Literal" ],
    "eventmetadata" : [ "javax.enterprise.inject.spi.EventMetadata", "jakarta.enterprise.inject.spi.EventMetadata" ],
    "simpletimer.context" : [ "org.eclipse.microprofile.metrics.SimpleTimer.Context" ],
    "readiness" : [ "org.eclipse.microprofile.health.Readiness" ],
    "traversableresolver" : [ "jakarta.validation.TraversableResolver" ],
    "registerproviders" : [ "org.eclipse.microprofile.rest.client.annotation.RegisterProviders" ],
    "email.list" : [ "jakarta.validation.constraints.Email.List" ],
    "asyncinvocationinterceptor" : [ "org.eclipse.microprofile.rest.client.ext.AsyncInvocationInterceptor" ],
    "connectioncallback" : [ "javax.ws.rs.container.ConnectionCallback", "jakarta.ws.rs.container.ConnectionCallback" ],
    "httpsessionbindinglistener" : [ "jakarta.servlet.http.HttpSessionBindingListener" ],
    "circuitbreakeropenexception" : [ "org.eclipse.microprofile.faulttolerance.exceptions.CircuitBreakerOpenException" ],
    "embedded" : [ "jakarta.persistence.Embedded" ],
    "beanattributes" : [ "jakarta.enterprise.inject.spi.BeanAttributes", "javax.enterprise.inject.spi.BeanAttributes" ],
    "servletcontext" : [ "jakarta.servlet.ServletContext" ],
    "entitypart.builder" : [ "jakarta.ws.rs.core.EntityPart.Builder" ],
    "processproducer" : [ "javax.enterprise.inject.spi.ProcessProducer", "jakarta.enterprise.inject.spi.ProcessProducer" ],
    "column" : [ "jakarta.persistence.Column" ],
    "persistenceproviderresolverholder.defaultpersistenceproviderresolver.cachekeyreference" : [ "jakarta.persistence.spi.PersistenceProviderResolverHolder.DefaultPersistenceProviderResolver.CacheKeyReference" ],
    "httpsessionbindingevent" : [ "jakarta.servlet.http.HttpSessionBindingEvent" ],
    "configproperty" : [ "org.eclipse.microprofile.config.inject.ConfigProperty" ],
    "bootstrapstate" : [ "jakarta.validation.spi.BootstrapState" ],
    "entitylisteners" : [ "jakarta.persistence.EntityListeners" ],
    "constraintmode" : [ "jakarta.persistence.ConstraintMode" ],
    "link.jaxblink" : [ "jakarta.ws.rs.core.Link.JaxbLink", "javax.ws.rs.core.Link.JaxbLink" ],
    "bulkheadexception" : [ "org.eclipse.microprofile.faulttolerance.exceptions.BulkheadException" ],
    "linkparameter" : [ "org.eclipse.microprofile.openapi.annotations.links.LinkParameter" ],
    "digits" : [ "jakarta.validation.constraints.Digits" ],
    "config" : [ "org.eclipse.microprofile.config.Config" ],
    "notblank" : [ "jakarta.validation.constraints.NotBlank" ],
    "mappedsuperclass" : [ "jakarta.persistence.MappedSuperclass" ],
    "link.builder" : [ "javax.ws.rs.core.Link.Builder", "jakarta.ws.rs.core.Link.Builder" ],
    "loadstate" : [ "jakarta.persistence.spi.LoadState" ],
    "injectionexception" : [ "jakarta.enterprise.inject.InjectionException", "javax.enterprise.inject.InjectionException" ],
    "constraintvalidatorcontext.constraintviolationbuilder.nodecontextbuilder" : [ "jakarta.validation.ConstraintValidatorContext.ConstraintViolationBuilder.NodeContextBuilder" ],
    "inheritancetype" : [ "jakarta.persistence.InheritanceType" ],
    "reportassingleviolation" : [ "jakarta.validation.ReportAsSingleViolation" ],
    "classconfig" : [ "jakarta.enterprise.inject.build.compatible.spi.ClassConfig" ],
    "excludedefaultlisteners" : [ "jakarta.persistence.ExcludeDefaultListeners" ],
    "startup" : [ "jakarta.enterprise.event.Startup" ],
    "contact" : [ "org.eclipse.microprofile.openapi.models.info.Contact", "org.eclipse.microprofile.openapi.annotations.info.Contact" ],
    "querytimeoutexception" : [ "jakarta.persistence.QueryTimeoutException" ],
    "injectiontargetfactory" : [ "jakarta.enterprise.inject.spi.InjectionTargetFactory", "javax.enterprise.inject.spi.InjectionTargetFactory" ],
    "denyall" : [ "jakarta.annotation.security.DenyAll" ],
    "exceptionmapper" : [ "jakarta.ws.rs.ext.ExceptionMapper", "javax.ws.rs.ext.ExceptionMapper" ],
    "joincolumn" : [ "jakarta.persistence.JoinColumn" ],
    "processsyntheticobservermethod" : [ "jakarta.enterprise.inject.spi.ProcessSyntheticObserverMethod", "javax.enterprise.inject.spi.ProcessSyntheticObserverMethod" ],
    "info" : [ "org.eclipse.microprofile.openapi.models.info.Info", "org.eclipse.microprofile.openapi.annotations.info.Info" ],
    "newcookie.builder" : [ "jakarta.ws.rs.core.NewCookie.Builder" ],
    "elementkind" : [ "jakarta.validation.ElementKind" ],
    "transactionrequiredexception" : [ "jakarta.persistence.TransactionRequiredException" ],
    "multipartconfig" : [ "jakarta.servlet.annotation.MultipartConfig" ],
    "sequencegenerators" : [ "jakarta.persistence.SequenceGenerators" ],
    "httpsessionattributelistener" : [ "jakarta.servlet.http.HttpSessionAttributeListener" ],
    "readerinterceptor" : [ "javax.ws.rs.ext.ReaderInterceptor", "jakarta.ws.rs.ext.ReaderInterceptor" ],
    "positive.list" : [ "jakarta.validation.constraints.Positive.List" ],
    "metaannotations" : [ "jakarta.enterprise.inject.build.compatible.spi.MetaAnnotations" ],
    "persistenceprovider" : [ "jakarta.persistence.spi.PersistenceProvider" ],
    "path.returnvaluenode" : [ "jakarta.validation.Path.ReturnValueNode" ],
    "messageinterpolator" : [ "jakarta.validation.MessageInterpolator" ],
    "clientheaderparams" : [ "org.eclipse.microprofile.rest.client.annotation.ClientHeaderParams" ],
    "applicationpath" : [ "jakarta.ws.rs.ApplicationPath", "javax.ws.rs.ApplicationPath" ],
    "fallbackhandler" : [ "org.eclipse.microprofile.faulttolerance.FallbackHandler" ],
    "criteriadelete" : [ "jakarta.persistence.criteria.CriteriaDelete" ],
    "response.responsebuilder" : [ "jakarta.ws.rs.core.Response.ResponseBuilder", "javax.ws.rs.core.Response.ResponseBuilder" ],
    "content" : [ "org.eclipse.microprofile.openapi.models.media.Content", "org.eclipse.microprofile.openapi.annotations.media.Content" ],
    "timeout" : [ "org.eclipse.microprofile.faulttolerance.Timeout" ],
    "apiresponses" : [ "org.eclipse.microprofile.openapi.models.responses.APIResponses", "org.eclipse.microprofile.openapi.annotations.responses.APIResponses" ],
    "asyncinvocationinterceptorfactory" : [ "org.eclipse.microprofile.rest.client.ext.AsyncInvocationInterceptorFactory" ],
    "client" : [ "jakarta.ws.rs.client.Client", "javax.ws.rs.client.Client" ],
    "ignore" : [ "org.eclipse.microprofile.graphql.Ignore" ],
    "cacheable" : [ "jakarta.persistence.Cacheable" ],
    "reception" : [ "javax.enterprise.event.Reception", "jakarta.enterprise.event.Reception" ],
    "decimalmin" : [ "jakarta.validation.constraints.DecimalMin" ],
    "retry" : [ "org.eclipse.microprofile.faulttolerance.Retry" ],
    "clientresponsecontext" : [ "javax.ws.rs.client.ClientResponseContext", "jakarta.ws.rs.client.ClientResponseContext" ],
    "httpsessionlistener" : [ "jakarta.servlet.http.HttpSessionListener" ],
    "path.node" : [ "jakarta.validation.Path.Node" ],
    "valueextractordeclarationexception" : [ "jakarta.validation.valueextraction.ValueExtractorDeclarationException" ],
    "incomingconnectorfactory" : [ "org.eclipse.microprofile.reactive.messaging.spi.IncomingConnectorFactory" ],
    "injectliteral" : [ "jakarta.enterprise.inject.literal.InjectLiteral", "javax.enterprise.inject.literal.InjectLiteral" ],
    "dispatchertype" : [ "jakarta.servlet.DispatcherType" ],
    "configprovider" : [ "org.eclipse.microprofile.config.ConfigProvider" ],
    "interceptorcontext" : [ "javax.ws.rs.ext.InterceptorContext", "jakarta.ws.rs.ext.InterceptorContext" ],
    "commonabstractcriteria" : [ "jakarta.persistence.criteria.CommonAbstractCriteria" ],
    "counter" : [ "org.eclipse.microprofile.metrics.Counter" ],
    "fieldresult" : [ "jakarta.persistence.FieldResult" ],
    "connectorattributes" : [ "org.eclipse.microprofile.reactive.messaging.spi.ConnectorAttributes" ],
    "form" : [ "javax.ws.rs.core.Form", "jakarta.ws.rs.core.Form" ],
    "counted" : [ "org.eclipse.microprofile.metrics.annotation.Counted" ],
    "asyncresponse" : [ "javax.ws.rs.container.AsyncResponse", "jakarta.ws.rs.container.AsyncResponse" ],
    "genericentity" : [ "javax.ws.rs.core.GenericEntity", "jakarta.ws.rs.core.GenericEntity" ],
    "qualifierliteral" : [ "jakarta.enterprise.inject.literal.QualifierLiteral", "javax.enterprise.inject.literal.QualifierLiteral" ],
    "processingexception" : [ "jakarta.ws.rs.ProcessingException", "javax.ws.rs.ProcessingException" ],
    "min.list" : [ "jakarta.validation.constraints.Min.List" ],
    "convert" : [ "jakarta.persistence.Convert" ],
    "rxinvokerprovider" : [ "jakarta.ws.rs.client.RxInvokerProvider", "javax.ws.rs.client.RxInvokerProvider" ],
    "postconstruct" : [ "jakarta.annotation.PostConstruct" ],
    "streamingoutput" : [ "javax.ws.rs.core.StreamingOutput", "jakarta.ws.rs.core.StreamingOutput" ],
    "asserttrue.list" : [ "jakarta.validation.constraints.AssertTrue.List" ],
    "schema.schematype" : [ "org.eclipse.microprofile.openapi.models.media.Schema.SchemaType" ],
    "validation.defaultvalidationproviderresolver" : [ "jakarta.validation.Validation.DefaultValidationProviderResolver" ],
    "context" : [ "jakarta.ws.rs.core.Context", "javax.ws.rs.core.Context", "javax.enterprise.context.spi.Context", "jakarta.enterprise.context.spi.Context" ],
    "model" : [ "jakarta.enterprise.inject.Model", "javax.enterprise.inject.Model" ],
    "join" : [ "jakarta.persistence.criteria.Join" ],
    "id" : [ "org.eclipse.microprofile.graphql.Id", "jakarta.persistence.Id" ],
    "annotationbuilderfactory" : [ "jakarta.enterprise.inject.build.compatible.spi.AnnotationBuilderFactory" ],
    "validation" : [ "jakarta.validation.Validation", "jakarta.enterprise.inject.build.compatible.spi.Validation" ],
    "gauge" : [ "org.eclipse.microprofile.metrics.Gauge", "org.eclipse.microprofile.metrics.annotation.Gauge" ],
    "cookie" : [ "jakarta.servlet.http.Cookie", "jakarta.ws.rs.core.Cookie", "javax.ws.rs.core.Cookie" ],
    "pathitem" : [ "org.eclipse.microprofile.openapi.models.PathItem" ],
    "response.statustype" : [ "javax.ws.rs.core.Response.StatusType", "jakarta.ws.rs.core.Response.StatusType" ],
    "rxinvoker" : [ "jakarta.ws.rs.client.RxInvoker", "javax.ws.rs.client.RxInvoker" ],
    "configvalue" : [ "org.eclipse.microprofile.config.ConfigValue" ],
    "index" : [ "jakarta.persistence.Index" ],
    "parameterin" : [ "org.eclipse.microprofile.openapi.annotations.enums.ParameterIn" ],
    "clientheadersfactory" : [ "org.eclipse.microprofile.rest.client.ext.ClientHeadersFactory" ],
    "immutablenotificationoptions.1" : [ "javax.enterprise.event.ImmutableNotificationOptions.1" ],
    "enum" : [ "org.eclipse.microprofile.graphql.Enum" ],
    "invocationcallback" : [ "javax.ws.rs.client.InvocationCallback", "jakarta.ws.rs.client.InvocationCallback" ],
    "annotatedparameter" : [ "jakarta.enterprise.inject.spi.AnnotatedParameter", "javax.enterprise.inject.spi.AnnotatedParameter" ],
    "servletsecurityelement" : [ "jakarta.servlet.ServletSecurityElement" ],
    "ssebroadcaster" : [ "jakarta.ws.rs.sse.SseBroadcaster", "javax.ws.rs.sse.SseBroadcaster" ],
    "unmanaged" : [ "jakarta.enterprise.inject.spi.Unmanaged", "javax.enterprise.inject.spi.Unmanaged" ],
    "qualifier" : [ "javax.inject.Qualifier", "jakarta.inject.Qualifier" ],
    "messages" : [ "jakarta.enterprise.inject.build.compatible.spi.Messages" ],
    "pastorpresent" : [ "jakarta.validation.constraints.PastOrPresent" ],
    "servletrequestlistener" : [ "jakarta.servlet.ServletRequestListener" ],
    "snapshot" : [ "org.eclipse.microprofile.metrics.Snapshot" ],
    "encoded" : [ "javax.ws.rs.Encoded", "jakarta.ws.rs.Encoded" ],
    "server" : [ "org.eclipse.microprofile.openapi.annotations.servers.Server", "org.eclipse.microprofile.openapi.models.servers.Server" ],
    "namedliteral" : [ "javax.enterprise.inject.literal.NamedLiteral", "jakarta.enterprise.inject.literal.NamedLiteral" ],
    "httpservlet" : [ "jakarta.servlet.http.HttpServlet" ],
    "constructordescriptor" : [ "jakarta.validation.metadata.ConstructorDescriptor" ],
    "embeddabletype" : [ "jakarta.persistence.metamodel.EmbeddableType" ],
    "any.literal" : [ "javax.enterprise.inject.Any.Literal", "jakarta.enterprise.inject.Any.Literal" ],
    "httpservletrequest" : [ "jakarta.servlet.http.HttpServletRequest" ],
    "cascadetype" : [ "jakarta.persistence.CascadeType" ],
    "delegate" : [ "javax.decorator.Delegate", "jakarta.decorator.Delegate" ],
    "mapkeytemporal" : [ "jakarta.persistence.MapKeyTemporal" ],
    "processinjectiontarget" : [ "javax.enterprise.inject.spi.ProcessInjectionTarget", "jakarta.enterprise.inject.spi.ProcessInjectionTarget" ],
    "unwrapping" : [ "jakarta.validation.valueextraction.Unwrapping" ],
    "registerrestclient" : [ "org.eclipse.microprofile.rest.client.inject.RegisterRestClient" ],
    "sseeventsource" : [ "jakarta.ws.rs.sse.SseEventSource", "javax.ws.rs.sse.SseEventSource" ],
    "table" : [ "jakarta.persistence.Table" ],
    "clienterrorexception" : [ "jakarta.ws.rs.ClientErrorException", "javax.ws.rs.ClientErrorException" ],
    "pluralattribute" : [ "jakarta.persistence.metamodel.PluralAttribute" ],
    "unwrapping.skip" : [ "jakarta.validation.valueextraction.Unwrapping.Skip" ],
    "matrixparam" : [ "javax.ws.rs.MatrixParam", "jakarta.ws.rs.MatrixParam" ],
    "max" : [ "jakarta.validation.constraints.Max" ],
    "namedquery" : [ "jakarta.persistence.NamedQuery" ],
    "namedsubgraph" : [ "jakarta.persistence.NamedSubgraph" ],
    "positive" : [ "jakarta.validation.constraints.Positive" ],
    "alterablecontext" : [ "jakarta.enterprise.context.spi.AlterableContext", "javax.enterprise.context.spi.AlterableContext" ],
    "module-info" : [ "module-info" ],
    "sebootstrap.configuration" : [ "jakarta.ws.rs.SeBootstrap.Configuration" ],
    "filterchain" : [ "jakarta.servlet.FilterChain" ],
    "servervariable" : [ "org.eclipse.microprofile.openapi.models.servers.ServerVariable", "org.eclipse.microprofile.openapi.annotations.servers.ServerVariable" ],
    "path.beannode" : [ "jakarta.validation.Path.BeanNode" ],
    "mapjoin" : [ "jakarta.persistence.criteria.MapJoin" ],
    "discovery" : [ "jakarta.enterprise.inject.build.compatible.spi.Discovery" ],
    "mapkeycolumn" : [ "jakarta.persistence.MapKeyColumn" ],
    "notauthorizedexception" : [ "jakarta.ws.rs.NotAuthorizedException", "javax.ws.rs.NotAuthorizedException" ],
    "associationoverrides" : [ "jakarta.persistence.AssociationOverrides" ],
    "completionstagerxinvoker" : [ "jakarta.ws.rs.client.CompletionStageRxInvoker", "javax.ws.rs.client.CompletionStageRxInvoker" ],
    "instance" : [ "jakarta.enterprise.inject.Instance", "javax.enterprise.inject.Instance" ],
    "uribuilder" : [ "jakarta.ws.rs.core.UriBuilder", "javax.ws.rs.core.UriBuilder" ],
    "persistenceunitutil" : [ "jakarta.persistence.PersistenceUnitUtil" ],
    "processbeanattributes" : [ "javax.enterprise.inject.spi.ProcessBeanAttributes", "jakarta.enterprise.inject.spi.ProcessBeanAttributes" ],
    "inheritance" : [ "jakarta.persistence.Inheritance" ],
    "clientrequestcontext" : [ "javax.ws.rs.client.ClientRequestContext", "jakarta.ws.rs.client.ClientRequestContext" ],
    "intercepted" : [ "jakarta.enterprise.inject.Intercepted", "javax.enterprise.inject.Intercepted" ],
    "filterregistration.dynamic" : [ "jakarta.servlet.FilterRegistration.Dynamic" ],
    "annotationliteral" : [ "javax.enterprise.util.AnnotationLiteral", "jakarta.enterprise.util.AnnotationLiteral" ],
    "claim" : [ "org.eclipse.microprofile.jwt.Claim" ],
    "temporaltype" : [ "jakarta.persistence.TemporalType" ],
    "persistenceproviderresolverholder.defaultpersistenceproviderresolver.1" : [ "jakarta.persistence.spi.PersistenceProviderResolverHolder.DefaultPersistenceProviderResolver.1" ],
    "acknowledgment.strategy" : [ "org.eclipse.microprofile.reactive.messaging.Acknowledgment.Strategy" ],
    "incoming" : [ "org.eclipse.microprofile.reactive.messaging.Incoming" ],
    "redirectionexception" : [ "javax.ws.rs.RedirectionException", "jakarta.ws.rs.RedirectionException" ],
    "meter" : [ "org.eclipse.microprofile.metrics.Meter" ],
    "persistenceproperty" : [ "jakarta.persistence.PersistenceProperty" ],
    "criteriabuilder.coalesce" : [ "jakarta.persistence.criteria.CriteriaBuilder.Coalesce" ],
    "producerconfigurator" : [ "jakarta.enterprise.inject.spi.configurator.ProducerConfigurator", "javax.enterprise.inject.spi.configurator.ProducerConfigurator" ],
    "stereotypeinfo" : [ "jakarta.enterprise.inject.build.compatible.spi.StereotypeInfo" ],
    "license" : [ "org.eclipse.microprofile.openapi.annotations.info.License", "org.eclipse.microprofile.openapi.models.info.License" ],
    "configbuilder" : [ "org.eclipse.microprofile.config.spi.ConfigBuilder" ],
    "securityschemes" : [ "org.eclipse.microprofile.openapi.annotations.security.SecuritySchemes" ],
    "null" : [ "jakarta.validation.constraints.Null" ],
    "postremove" : [ "jakarta.persistence.PostRemove" ],
    "header" : [ "org.eclipse.microprofile.openapi.annotations.headers.Header", "org.eclipse.microprofile.openapi.models.headers.Header" ],
    "emitter" : [ "org.eclipse.microprofile.reactive.messaging.Emitter" ],
    "unexpectedtypeexception" : [ "jakarta.validation.UnexpectedTypeException" ],
    "weblistener" : [ "jakarta.servlet.annotation.WebListener" ],
    "schemaproperty" : [ "org.eclipse.microprofile.openapi.annotations.media.SchemaProperty" ],
    "restclientbuilder" : [ "org.eclipse.microprofile.rest.client.RestClientBuilder" ],
    "registerclientheaders" : [ "org.eclipse.microprofile.rest.client.annotation.RegisterClientHeaders" ],
    "delete" : [ "jakarta.ws.rs.DELETE", "javax.ws.rs.DELETE" ],
    "httpmethodconstraint" : [ "jakarta.servlet.annotation.HttpMethodConstraint" ],
    "decimalmax" : [ "jakarta.validation.constraints.DecimalMax" ],
    "head" : [ "jakarta.ws.rs.HEAD", "javax.ws.rs.HEAD" ],
    "containerrequestfilter" : [ "jakarta.ws.rs.container.ContainerRequestFilter", "javax.ws.rs.container.ContainerRequestFilter" ],
    "locktimeoutexception" : [ "jakarta.persistence.LockTimeoutException" ],
    "pessimisticlockscope" : [ "jakarta.persistence.PessimisticLockScope" ],
    "form.1" : [ "jakarta.ws.rs.core.Form.1", "javax.ws.rs.core.Form.1" ],
    "consumes" : [ "jakarta.ws.rs.Consumes", "javax.ws.rs.Consumes" ],
    "oauthscope" : [ "org.eclipse.microprofile.openapi.annotations.security.OAuthScope" ],
    "parameter.in" : [ "org.eclipse.microprofile.openapi.models.parameters.Parameter.In" ],
    "syntheticobserverbuilder" : [ "jakarta.enterprise.inject.build.compatible.spi.SyntheticObserverBuilder" ],
    "openapidefinition" : [ "org.eclipse.microprofile.openapi.annotations.OpenAPIDefinition" ],
    "vetoed.literal" : [ "jakarta.enterprise.inject.Vetoed.Literal", "javax.enterprise.inject.Vetoed.Literal" ],
    "validateunwrappedvalue" : [ "jakarta.validation.metadata.ValidateUnwrappedValue" ],
    "onoverflow.strategy" : [ "org.eclipse.microprofile.reactive.messaging.OnOverflow.Strategy" ],
    "callback" : [ "org.eclipse.microprofile.openapi.annotations.callbacks.Callback", "org.eclipse.microprofile.openapi.models.callbacks.Callback" ],
    "genericfilter" : [ "jakarta.servlet.GenericFilter" ],
    "metadata" : [ "org.eclipse.microprofile.metrics.Metadata" ],
    "sse" : [ "jakarta.ws.rs.sse.Sse", "javax.ws.rs.sse.Sse" ],
    "new.literal" : [ "javax.enterprise.inject.New.Literal" ],
    "generatedvalue" : [ "jakarta.persistence.GeneratedValue" ],
    "patch" : [ "javax.ws.rs.PATCH", "jakarta.ws.rs.PATCH" ],
    "positiveorzero" : [ "jakarta.validation.constraints.PositiveOrZero" ],
    "observes" : [ "jakarta.enterprise.event.Observes", "javax.enterprise.event.Observes" ],
    "predicate" : [ "jakarta.persistence.criteria.Predicate" ],
    "httpconstraintelement" : [ "jakarta.servlet.HttpConstraintElement" ],
    "metricunits" : [ "org.eclipse.microprofile.metrics.MetricUnits" ],
    "securityrequirements" : [ "org.eclipse.microprofile.openapi.annotations.security.SecurityRequirements" ],
    "transactionphase" : [ "jakarta.enterprise.event.TransactionPhase", "javax.enterprise.event.TransactionPhase" ],
    "valueextractordefinitionexception" : [ "jakarta.validation.valueextraction.ValueExtractorDefinitionException" ],
    "runtimetype" : [ "javax.ws.rs.RuntimeType", "jakarta.ws.rs.RuntimeType" ],
    "temporal" : [ "jakarta.persistence.Temporal" ],
    "syntheticcomponents" : [ "jakarta.enterprise.inject.build.compatible.spi.SyntheticComponents" ],
    "nobodyresponse" : [ "jakarta.servlet.http.NoBodyResponse" ],
    "persistence.persistenceutilimpl" : [ "jakarta.persistence.Persistence.PersistenceUtilImpl" ],
    "beancontainer" : [ "jakarta.enterprise.inject.spi.BeanContainer" ],
    "executioncontext" : [ "org.eclipse.microprofile.faulttolerance.ExecutionContext" ],
    "syntheticbeandisposer" : [ "jakarta.enterprise.inject.build.compatible.spi.SyntheticBeanDisposer" ],
    "entitytype" : [ "jakarta.persistence.metamodel.EntityType" ],
    "multivaluedmap" : [ "javax.ws.rs.core.MultivaluedMap", "jakarta.ws.rs.core.MultivaluedMap" ],
    "clientrequestfilter" : [ "jakarta.ws.rs.client.ClientRequestFilter", "javax.ws.rs.client.ClientRequestFilter" ],
    "components" : [ "org.eclipse.microprofile.openapi.models.Components", "org.eclipse.microprofile.openapi.annotations.Components" ],
    "access" : [ "jakarta.persistence.Access" ],
    "securityscheme.in" : [ "org.eclipse.microprofile.openapi.models.security.SecurityScheme.In" ],
    "criteriaupdate" : [ "jakarta.persistence.criteria.CriteriaUpdate" ],
    "persistenceunit" : [ "jakarta.persistence.PersistenceUnit" ],
    "servletrequestattributeevent" : [ "jakarta.servlet.ServletRequestAttributeEvent" ],
    "min" : [ "jakarta.validation.constraints.Min" ],
    "sessiontrackingmode" : [ "jakarta.servlet.SessionTrackingMode" ],
    "servletcontextattributelistener" : [ "jakarta.servlet.ServletContextAttributeListener" ],
    "persistencecontexttype" : [ "jakarta.persistence.PersistenceContextType" ],
    "collectionjoin" : [ "jakarta.persistence.criteria.CollectionJoin" ],
    "email" : [ "jakarta.validation.constraints.Email" ],
    "disposerinfo" : [ "jakarta.enterprise.inject.build.compatible.spi.DisposerInfo" ],
    "primarykeyjoincolumns" : [ "jakarta.persistence.PrimaryKeyJoinColumns" ],
    "expression" : [ "jakarta.persistence.criteria.Expression" ],
    "readlistener" : [ "jakarta.servlet.ReadListener" ],
    "annotatedcallable" : [ "jakarta.enterprise.inject.spi.AnnotatedCallable", "javax.enterprise.inject.spi.AnnotatedCallable" ],
    "httpservletmapping" : [ "jakarta.servlet.http.HttpServletMapping" ],
    "constraintdescriptor" : [ "jakarta.validation.metadata.ConstraintDescriptor" ],
    "clientheaderparam" : [ "org.eclipse.microprofile.rest.client.annotation.ClientHeaderParam" ],
    "writerinterceptor" : [ "jakarta.ws.rs.ext.WriterInterceptor", "javax.ws.rs.ext.WriterInterceptor" ],
    "mapsid" : [ "jakarta.persistence.MapsId" ],
    "validation.providerspecificbootstrapimpl" : [ "jakarta.validation.Validation.ProviderSpecificBootstrapImpl" ],
    "metricregistry.type" : [ "org.eclipse.microprofile.metrics.MetricRegistry.Type" ],
    "negative.list" : [ "jakarta.validation.constraints.Negative.List" ],
    "responseexceptionmapper" : [ "org.eclipse.microprofile.rest.client.ext.ResponseExceptionMapper" ],
    "operation" : [ "org.eclipse.microprofile.openapi.models.Operation", "org.eclipse.microprofile.openapi.annotations.Operation" ],
    "pattern.flag" : [ "jakarta.validation.constraints.Pattern.Flag" ],
    "securityschemetype" : [ "org.eclipse.microprofile.openapi.annotations.enums.SecuritySchemeType" ],
    "newcookie.samesite" : [ "jakarta.ws.rs.core.NewCookie.SameSite" ],
    "path.constructornode" : [ "jakarta.validation.Path.ConstructorNode" ],
    "processbean" : [ "jakarta.enterprise.inject.spi.ProcessBean", "javax.enterprise.inject.spi.ProcessBean" ],
    "validator" : [ "jakarta.validation.Validator" ],
    "overridesattribute.list" : [ "jakarta.validation.OverridesAttribute.List" ],
    "convertgroup" : [ "jakarta.validation.groups.ConvertGroup" ],
    "enhancement" : [ "jakarta.enterprise.inject.build.compatible.spi.Enhancement" ],
    "requestscoped" : [ "javax.enterprise.context.RequestScoped", "jakarta.enterprise.context.RequestScoped" ],
    "defaultclientheadersfactoryimpl" : [ "org.eclipse.microprofile.rest.client.ext.DefaultClientHeadersFactoryImpl" ],
    "loginconfig" : [ "org.eclipse.microprofile.auth.LoginConfig" ],
    "beaninfo" : [ "jakarta.enterprise.inject.build.compatible.spi.BeanInfo" ],
    "persistenceproviderresolver" : [ "jakarta.persistence.spi.PersistenceProviderResolver" ],
    "nonbinding" : [ "javax.enterprise.util.Nonbinding", "jakarta.enterprise.util.Nonbinding" ],
    "clientbuilder.createerrormessageaction" : [ "jakarta.ws.rs.client.ClientBuilder.CreateErrorMessageAction" ],
    "servletresponsewrapper" : [ "jakarta.servlet.ServletResponseWrapper" ],
    "servletregistration" : [ "jakarta.servlet.ServletRegistration" ],
    "filterconfig" : [ "jakarta.servlet.FilterConfig" ],
    "default.literal" : [ "javax.enterprise.inject.Default.Literal", "jakarta.enterprise.inject.Default.Literal" ],
    "variant" : [ "jakarta.ws.rs.core.Variant", "javax.ws.rs.core.Variant" ],
    "sebootstrap.instance.stopresult" : [ "jakarta.ws.rs.SeBootstrap.Instance.StopResult" ],
    "runtimedelegate" : [ "jakarta.ws.rs.ext.RuntimeDelegate", "javax.ws.rs.ext.RuntimeDelegate" ],
    "cookieparam" : [ "jakarta.ws.rs.CookieParam", "javax.ws.rs.CookieParam" ],
    "busyconversationexception" : [ "javax.enterprise.context.BusyConversationException", "jakarta.enterprise.context.BusyConversationException" ],
    "unmanaged.unmanagedinstance" : [ "jakarta.enterprise.inject.spi.Unmanaged.UnmanagedInstance", "javax.enterprise.inject.spi.Unmanaged.UnmanagedInstance" ],
    "attributeoverride" : [ "jakarta.persistence.AttributeOverride" ],
    "webtarget" : [ "jakarta.ws.rs.client.WebTarget", "javax.ws.rs.client.WebTarget" ],
    "past.list" : [ "jakarta.validation.constraints.Past.List" ],
    "query" : [ "jakarta.persistence.Query", "org.eclipse.microprofile.graphql.Query" ],
    "transientreference.literal" : [ "jakarta.enterprise.inject.TransientReference.Literal", "javax.enterprise.inject.TransientReference.Literal" ],
    "graphqlexception" : [ "org.eclipse.microprofile.graphql.GraphQLException" ],
    "observermethodconfigurator" : [ "jakarta.enterprise.inject.spi.configurator.ObserverMethodConfigurator", "javax.enterprise.inject.spi.configurator.ObserverMethodConfigurator" ],
    "basictype" : [ "jakarta.persistence.metamodel.BasicType" ],
    "resourcecontext" : [ "javax.ws.rs.container.ResourceContext", "jakarta.ws.rs.container.ResourceContext" ],
    "paths" : [ "org.eclipse.microprofile.openapi.models.Paths" ],
    "validatorcontext" : [ "jakarta.validation.ValidatorContext" ],
    "supportedvalidationtarget" : [ "jakarta.validation.constraintvalidation.SupportedValidationTarget" ],
    "fetchtype" : [ "jakarta.persistence.FetchType" ],
    "uniqueconstraint" : [ "jakarta.persistence.UniqueConstraint" ],
    "onetomany" : [ "jakarta.persistence.OneToMany" ],
    "httpconstraint" : [ "jakarta.servlet.annotation.HttpConstraint" ],
    "disposes" : [ "javax.enterprise.inject.Disposes", "jakarta.enterprise.inject.Disposes" ],
    "typeliteral" : [ "jakarta.enterprise.util.TypeLiteral", "javax.enterprise.util.TypeLiteral" ],
    "validation.newproviderinstance" : [ "jakarta.validation.Validation.NewProviderInstance" ],
    "prematching" : [ "javax.ws.rs.container.PreMatching", "jakarta.ws.rs.container.PreMatching" ],
    "setjoin" : [ "jakarta.persistence.criteria.SetJoin" ],
    "servererrorexception" : [ "javax.ws.rs.ServerErrorException", "jakarta.ws.rs.ServerErrorException" ],
    "aftertypediscovery" : [ "javax.enterprise.inject.spi.AfterTypeDiscovery", "jakarta.enterprise.inject.spi.AfterTypeDiscovery" ],
    "extensible" : [ "org.eclipse.microprofile.openapi.models.Extensible" ],
    "persistenceunittransactiontype" : [ "jakarta.persistence.spi.PersistenceUnitTransactionType" ],
    "singleton" : [ "jakarta.inject.Singleton", "javax.inject.Singleton" ],
    "types" : [ "jakarta.enterprise.inject.build.compatible.spi.Types" ],
    "mapkeyclass" : [ "jakarta.persistence.MapKeyClass" ],
    "concurrentgauge" : [ "org.eclipse.microprofile.metrics.ConcurrentGauge", "org.eclipse.microprofile.metrics.annotation.ConcurrentGauge" ],
    "processsyntheticbean" : [ "javax.enterprise.inject.spi.ProcessSyntheticBean", "jakarta.enterprise.inject.spi.ProcessSyntheticBean" ],
    "asyncinvoker" : [ "javax.ws.rs.client.AsyncInvoker", "jakarta.ws.rs.client.AsyncInvoker" ],
    "oasfilter" : [ "org.eclipse.microprofile.openapi.OASFilter" ],
    "configproperties.literal" : [ "org.eclipse.microprofile.config.inject.ConfigProperties.Literal" ],
    "annotatedmember" : [ "jakarta.enterprise.inject.spi.AnnotatedMember", "javax.enterprise.inject.spi.AnnotatedMember" ],
    "sqlresultsetmapping" : [ "jakarta.persistence.SqlResultSetMapping" ],
    "typed" : [ "javax.enterprise.inject.Typed", "jakarta.enterprise.inject.Typed" ],
    "mapattribute" : [ "jakarta.persistence.metamodel.MapAttribute" ],
    "conversationscoped.literal" : [ "javax.enterprise.context.ConversationScoped.Literal", "jakarta.enterprise.context.ConversationScoped.Literal" ],
    "listjoin" : [ "jakarta.persistence.criteria.ListJoin" ],
    "managedtype" : [ "jakarta.persistence.metamodel.ManagedType" ],
    "mapkeyjoincolumns" : [ "jakarta.persistence.MapKeyJoinColumns" ],
    "singularattribute" : [ "jakarta.persistence.metamodel.SingularAttribute" ],
    "discriminatortype" : [ "jakarta.persistence.DiscriminatorType" ],
    "observermethodconfigurator.eventconsumer" : [ "javax.enterprise.inject.spi.configurator.ObserverMethodConfigurator.EventConsumer", "jakarta.enterprise.inject.spi.configurator.ObserverMethodConfigurator.EventConsumer" ],
    "serviceunavailableexception" : [ "javax.ws.rs.ServiceUnavailableException", "jakarta.ws.rs.ServiceUnavailableException" ],
    "acknowledgment" : [ "org.eclipse.microprofile.reactive.messaging.Acknowledgment" ],
    "beanmanager" : [ "javax.enterprise.inject.spi.BeanManager", "jakarta.enterprise.inject.spi.BeanManager" ],
    "notificationoptions" : [ "javax.enterprise.event.NotificationOptions", "jakarta.enterprise.event.NotificationOptions" ],
    "httpsession" : [ "jakarta.servlet.http.HttpSession" ],
    "entitytag" : [ "jakarta.ws.rs.core.EntityTag", "javax.ws.rs.core.EntityTag" ],
    "type" : [ "org.eclipse.microprofile.graphql.Type", "jakarta.persistence.metamodel.Type" ],
    "faulttolerancedefinitionexception" : [ "org.eclipse.microprofile.faulttolerance.exceptions.FaultToleranceDefinitionException" ],
    "singletonliteral" : [ "javax.enterprise.inject.literal.SingletonLiteral", "jakarta.enterprise.inject.literal.SingletonLiteral" ],
    "parameterstyle" : [ "org.eclipse.microprofile.openapi.annotations.enums.ParameterStyle" ],
    "annotated" : [ "javax.enterprise.inject.spi.Annotated", "jakarta.enterprise.inject.spi.Annotated" ],
    "liveness.literal" : [ "org.eclipse.microprofile.health.Liveness.Literal" ],
    "applicationscoped.literal" : [ "jakarta.enterprise.context.ApplicationScoped.Literal", "javax.enterprise.context.ApplicationScoped.Literal" ],
    "queryhint" : [ "jakarta.persistence.QueryHint" ],
    "enumtype" : [ "jakarta.persistence.EnumType" ],
    "mediatype.1" : [ "javax.ws.rs.core.MediaType.1" ],
    "processsessionbean" : [ "javax.enterprise.inject.spi.ProcessSessionBean", "jakarta.enterprise.inject.spi.ProcessSessionBean" ],
    "dependent" : [ "jakarta.enterprise.context.Dependent", "javax.enterprise.context.Dependent" ],
    "mediatype.2" : [ "javax.ws.rs.core.MediaType.2" ],
    "requestcontextcontroller" : [ "javax.enterprise.context.control.RequestContextController", "jakarta.enterprise.context.control.RequestContextController" ],
    "servletrequestwrapper" : [ "jakarta.servlet.ServletRequestWrapper" ],
    "apiresponseschema" : [ "org.eclipse.microprofile.openapi.annotations.responses.APIResponseSchema" ],
    "forbiddenexception" : [ "javax.ws.rs.ForbiddenException", "jakarta.ws.rs.ForbiddenException" ],
    "persistenceproviderresolverholder.defaultpersistenceproviderresolver.cachekey" : [ "jakarta.persistence.spi.PersistenceProviderResolverHolder.DefaultPersistenceProviderResolver.CacheKey" ],
    "producerfactory" : [ "jakarta.enterprise.inject.spi.ProducerFactory", "javax.enterprise.inject.spi.ProducerFactory" ],
    "pessimisticlockexception" : [ "jakarta.persistence.PessimisticLockException" ],
    "criteriabuilder.case" : [ "jakarta.persistence.criteria.CriteriaBuilder.Case" ],
    "invocation" : [ "javax.ws.rs.client.Invocation", "jakarta.ws.rs.client.Invocation" ],
    "excludesuperclasslisteners" : [ "jakarta.persistence.ExcludeSuperclassListeners" ],
    "optimisticlockexception" : [ "jakarta.persistence.OptimisticLockException" ],
    "registration" : [ "jakarta.enterprise.inject.build.compatible.spi.Registration", "jakarta.servlet.Registration" ],
    "metrictype" : [ "org.eclipse.microprofile.metrics.MetricType" ],
    "decorator" : [ "jakarta.decorator.Decorator", "jakarta.enterprise.inject.spi.Decorator", "javax.decorator.Decorator", "javax.enterprise.inject.spi.Decorator" ],
    "extension" : [ "org.eclipse.microprofile.openapi.annotations.extensions.Extension", "jakarta.enterprise.inject.spi.Extension", "javax.enterprise.inject.spi.Extension" ],
    "applicationscoped" : [ "jakarta.enterprise.context.ApplicationScoped", "javax.enterprise.context.ApplicationScoped" ],
    "interceptor" : [ "javax.enterprise.inject.spi.Interceptor", "jakarta.enterprise.inject.spi.Interceptor" ],
    "syntheticobserver" : [ "jakarta.enterprise.inject.build.compatible.spi.SyntheticObserver" ],
    "header.style" : [ "org.eclipse.microprofile.openapi.models.headers.Header.Style" ],
    "restclientbuilderresolver" : [ "org.eclipse.microprofile.rest.client.spi.RestClientBuilderResolver" ],
    "nonnull" : [ "org.eclipse.microprofile.graphql.NonNull", "jakarta.annotation.Nonnull" ],
    "constraintvalidatorcontext.constraintviolationbuilder.leafnodebuildercustomizablecontext" : [ "jakarta.validation.ConstraintValidatorContext.ConstraintViolationBuilder.LeafNodeBuilderCustomizableContext" ],
    "attributeoverrides" : [ "jakarta.persistence.AttributeOverrides" ],
    "constructible" : [ "org.eclipse.microprofile.openapi.models.Constructible" ],
    "constraintdeclarationexception" : [ "jakarta.validation.ConstraintDeclarationException" ],
    "metadatabuilder" : [ "org.eclipse.microprofile.metrics.MetadataBuilder" ],
    "injectiontarget" : [ "jakarta.enterprise.inject.spi.InjectionTarget", "javax.enterprise.inject.spi.InjectionTarget" ],
    "externaldocumentation" : [ "org.eclipse.microprofile.openapi.models.ExternalDocumentation", "org.eclipse.microprofile.openapi.annotations.ExternalDocumentation" ],
    "feature" : [ "javax.ws.rs.core.Feature", "jakarta.ws.rs.core.Feature" ],
    "get" : [ "javax.ws.rs.GET", "jakarta.ws.rs.GET" ],
    "decimalmax.list" : [ "jakarta.validation.constraints.DecimalMax.List" ],
    "initialized" : [ "jakarta.enterprise.context.Initialized", "javax.enterprise.context.Initialized" ],
    "event" : [ "javax.enterprise.event.Event", "jakarta.enterprise.event.Event" ],
    "processproducermethod" : [ "jakarta.enterprise.inject.spi.ProcessProducerMethod", "javax.enterprise.inject.spi.ProcessProducerMethod" ],
    "converts" : [ "jakarta.persistence.Converts" ],
    "constraintviolationexception" : [ "jakarta.validation.ConstraintViolationException" ],
    "observesasync" : [ "jakarta.enterprise.event.ObservesAsync", "javax.enterprise.event.ObservesAsync" ],
    "filter" : [ "jakarta.servlet.Filter" ],
    "negativeorzero.list" : [ "jakarta.validation.constraints.NegativeOrZero.List" ],
    "associationoverride" : [ "jakarta.persistence.AssociationOverride" ],
    "subgraph" : [ "jakarta.persistence.Subgraph" ],
    "max.list" : [ "jakarta.validation.constraints.Max.List" ],
    "servletrequestattributelistener" : [ "jakarta.servlet.ServletRequestAttributeListener" ],
    "definitionexception" : [ "jakarta.enterprise.inject.spi.DefinitionException", "javax.enterprise.inject.spi.DefinitionException" ],
    "readiness.literal" : [ "org.eclipse.microprofile.health.Readiness.Literal" ],
    "subquery" : [ "jakarta.persistence.criteria.Subquery" ],
    "simplytimed" : [ "org.eclipse.microprofile.metrics.annotation.SimplyTimed" ],
    "oauthflows" : [ "org.eclipse.microprofile.openapi.annotations.security.OAuthFlows", "org.eclipse.microprofile.openapi.models.security.OAuthFlows" ],
    "idclass" : [ "jakarta.persistence.IdClass" ],
    "containerelementtypedescriptor" : [ "jakarta.validation.metadata.ContainerElementTypeDescriptor" ],
    "notblank.list" : [ "jakarta.validation.constraints.NotBlank.List" ],
    "propertydescriptor" : [ "jakarta.validation.metadata.PropertyDescriptor" ],
    "numberformat" : [ "org.eclipse.microprofile.graphql.NumberFormat" ],
    "reference" : [ "org.eclipse.microprofile.openapi.models.Reference" ],
    "contextexception" : [ "jakarta.enterprise.context.ContextException", "javax.enterprise.context.ContextException" ],
    "from" : [ "jakarta.persistence.criteria.From" ],
    "tag" : [ "org.eclipse.microprofile.openapi.models.tags.Tag", "org.eclipse.microprofile.metrics.Tag", "org.eclipse.microprofile.openapi.annotations.tags.Tag" ],
    "passivationcapable" : [ "javax.enterprise.inject.spi.PassivationCapable", "jakarta.enterprise.inject.spi.PassivationCapable" ],
    "entitygraph" : [ "jakarta.persistence.EntityGraph" ],
    "enumerated" : [ "jakarta.persistence.Enumerated" ],
    "registration.dynamic" : [ "jakarta.servlet.Registration.Dynamic" ],
    "collectiontable" : [ "jakarta.persistence.CollectionTable" ],
    "constraintvalidatorcontext.constraintviolationbuilder.containerelementnodecontextbuilder" : [ "jakarta.validation.ConstraintValidatorContext.ConstraintViolationBuilder.ContainerElementNodeContextBuilder" ],
    "resource" : [ "jakarta.annotation.Resource" ],
    "validatorfactory" : [ "jakarta.validation.ValidatorFactory" ],
    "securityactions" : [ "jakarta.enterprise.util.SecurityActions", "jakarta.enterprise.inject.spi.SecurityActions", "jakarta.enterprise.inject.build.compatible.spi.SecurityActions" ],
    "interceptiontype" : [ "jakarta.enterprise.inject.spi.InterceptionType", "javax.enterprise.inject.spi.InterceptionType" ],
    "servletexception" : [ "jakarta.servlet.ServletException" ],
    "histogram" : [ "org.eclipse.microprofile.metrics.Histogram" ],
    "path.containerelementnode" : [ "jakarta.validation.Path.ContainerElementNode" ],
    "processproducerfield" : [ "javax.enterprise.inject.spi.ProcessProducerField", "jakarta.enterprise.inject.spi.ProcessProducerField" ],
    "circuitbreaker" : [ "org.eclipse.microprofile.faulttolerance.CircuitBreaker" ],
    "configuration" : [ "javax.ws.rs.core.Configuration", "jakarta.ws.rs.core.Configuration", "jakarta.validation.Configuration" ],
    "servletsecurity.transportguarantee" : [ "jakarta.servlet.annotation.ServletSecurity.TransportGuarantee" ],
    "link" : [ "org.eclipse.microprofile.openapi.models.links.Link", "javax.ws.rs.core.Link", "org.eclipse.microprofile.openapi.annotations.links.Link", "jakarta.ws.rs.core.Link" ],
    "oasfactory" : [ "org.eclipse.microprofile.openapi.OASFactory" ],
    "servers" : [ "org.eclipse.microprofile.openapi.annotations.servers.Servers" ],
    "asynchronous" : [ "org.eclipse.microprofile.faulttolerance.Asynchronous" ],
    "parameter" : [ "org.eclipse.microprofile.openapi.annotations.parameters.Parameter", "jakarta.persistence.Parameter", "org.eclipse.microprofile.openapi.models.parameters.Parameter" ],
    "activaterequestcontext" : [ "javax.enterprise.context.control.ActivateRequestContext", "jakarta.enterprise.context.control.ActivateRequestContext" ],
    "valueextractor.valuereceiver" : [ "jakarta.validation.valueextraction.ValueExtractor.ValueReceiver" ],
    "injectionpointconfigurator" : [ "javax.enterprise.inject.spi.configurator.InjectionPointConfigurator", "jakarta.enterprise.inject.spi.configurator.InjectionPointConfigurator" ],
    "validation.genericbootstrapimpl" : [ "jakarta.validation.Validation.GenericBootstrapImpl" ],
    "webinitparam" : [ "jakarta.servlet.annotation.WebInitParam" ],
    "executabledescriptor" : [ "jakarta.validation.metadata.ExecutableDescriptor" ],
    "resources" : [ "jakarta.annotation.Resources" ],
    "webservlet" : [ "jakarta.servlet.annotation.WebServlet" ],
    "servletcontainerinitializer" : [ "jakarta.servlet.ServletContainerInitializer" ],
    "identifiabletype" : [ "jakarta.persistence.metamodel.IdentifiableType" ],
    "processannotatedtype" : [ "jakarta.enterprise.inject.spi.ProcessAnnotatedType", "javax.enterprise.inject.spi.ProcessAnnotatedType" ],
    "response.status.family" : [ "jakarta.ws.rs.core.Response.Status.Family", "javax.ws.rs.core.Response.Status.Family" ],
    "namednativequeries" : [ "jakarta.persistence.NamedNativeQueries" ],
    "response" : [ "jakarta.ws.rs.core.Response", "javax.ws.rs.core.Response" ],
    "healthcheckresponsebuilder" : [ "org.eclipse.microprofile.health.HealthCheckResponseBuilder" ],
    "creationalcontext" : [ "javax.enterprise.context.spi.CreationalContext", "jakarta.enterprise.context.spi.CreationalContext" ],
    "providers" : [ "javax.ws.rs.ext.Providers", "jakarta.ws.rs.ext.Providers" ],
    "unavailableexception" : [ "jakarta.servlet.UnavailableException" ]
}