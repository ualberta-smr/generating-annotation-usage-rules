[
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='Path']])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='Path']])) and ((src:annotation[src:name[text()='RegisterRestClient']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']] and src:annotation[src:name[text()='Claim']])] and src:block/src:function[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='Produces']] and src:annotation[src:name[text()='GET']] and src:annotation[src:name[text()='Traced']])])))]",
        "candidate-id": 1144405872,
        "grammar": "class with (annotation \"Path\" ) must have (annotation \"RegisterRestClient\" and declaration statement with (annotation \"Inject\" and annotation \"Claim\" ) and function with (annotation \"Path\" and annotation \"Produces\" and annotation \"GET\" and annotation \"Traced\" ) ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='Path']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Claim']])])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='Path']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Claim']])])) and ((descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']])])))]",
        "candidate-id": 1530558578,
        "grammar": "class with (annotation \"Path\" and declaration statement with (annotation \"Claim\" ) ) must have (declaration statement with (annotation \"Inject\" ) ) "
    },
    {
        "quantifier": "src:class[(descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='JsonWebToken']] and src:annotation[src:name[text()='Inject']])])]",
        "constraint": "src:class[(((descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='JsonWebToken']] and src:annotation[src:name[text()='Inject']])])) and ((src:annotation[src:name[text()='Path']])))]",
        "candidate-id": 978092668,
        "grammar": "class with (declaration statement with (annotation \"JsonWebToken\" and annotation \"Inject\" ) ) must have (annotation \"Path\" ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='Produces']] and src:annotation[src:name[text()='Path']])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='Produces']] and src:annotation[src:name[text()='Path']])) and ((descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']])])))]",
        "candidate-id": -1611704934,
        "grammar": "class with (annotation \"Produces\" and annotation \"Path\" ) must have (declaration statement with (annotation \"Inject\" ) ) "
    },
    {
        "quantifier": "src:class[(descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Claim']] and src:annotation[src:name[text()='Inject']])])]",
        "constraint": "src:class[(((descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Claim']] and src:annotation[src:name[text()='Inject']])])) and ((src:annotation[src:name[text()='Path']])))]",
        "candidate-id": 993758132,
        "grammar": "class with (declaration statement with (annotation \"Claim\" and annotation \"Inject\" ) ) must have (annotation \"Path\" ) "
    },
    {
        "quantifier": "src:class[(descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']])])]",
        "constraint": "src:class[(((descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']])])) and ((descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='RestClient']] and src:annotation[src:name[text()='Claim']])])))]",
        "candidate-id": -1569715546,
        "grammar": "class with (declaration statement with (annotation \"Inject\" ) ) must have (declaration statement with (annotation \"RestClient\" and annotation \"Claim\" ) ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='Path']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']])])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='Path']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']])])) and ((descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Claim']])])))]",
        "candidate-id": 210315815,
        "grammar": "class with (annotation \"Path\" and declaration statement with (annotation \"Inject\" ) ) must have (declaration statement with (annotation \"Claim\" ) ) "
    },
    {
        "quantifier": "src:class[(descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Claim']])])]",
        "constraint": "src:class[(((descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Claim']])])) and ((src:annotation[src:name[text()='Path']])))]",
        "candidate-id": 538285467,
        "grammar": "class with (declaration statement with (annotation \"Claim\" ) ) must have (annotation \"Path\" ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='Produces']])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='Produces']])) and ((src:annotation[src:name[text()='Path']])))]",
        "candidate-id": -759906189,
        "grammar": "class with (annotation \"Produces\" ) must have (annotation \"Path\" ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='Produces']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']])])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='Produces']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']])])) and ((src:annotation[src:name[text()='Path']])))]",
        "candidate-id": -157332226,
        "grammar": "class with (annotation \"Produces\" and declaration statement with (annotation \"Inject\" ) ) must have (annotation \"Path\" ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='Path']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='JsonWebToken']])])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='Path']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='JsonWebToken']])])) and ((descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']])])))]",
        "candidate-id": 733660448,
        "grammar": "class with (annotation \"Path\" and declaration statement with (annotation \"JsonWebToken\" ) ) must have (declaration statement with (annotation \"Inject\" ) ) "
    },
    {
        "quantifier": "src:class[(descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Claim']] and src:annotation[src:name[text()='Inject']])])]",
        "constraint": "src:class[(((descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Claim']] and src:annotation[src:name[text()='Inject']])])) and ((src:annotation[src:name[text()='Path']])))]",
        "candidate-id": 1774990798,
        "grammar": "class with (declaration statement with (annotation \"Claim\" and annotation \"Inject\" ) ) must have (annotation \"Path\" ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='Produces']] and src:annotation[src:name[text()='Path']])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='Produces']] and src:annotation[src:name[text()='Path']])) and ((descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']])])))]",
        "candidate-id": 232366922,
        "grammar": "class with (annotation \"Produces\" and annotation \"Path\" ) must have (declaration statement with (annotation \"Inject\" ) ) "
    },
    {
        "quantifier": "src:class[(src:block/src:function[(src:annotation[src:name[text()='GET']])])]",
        "constraint": "src:class[(((src:block/src:function[(src:annotation[src:name[text()='GET']])])) and ((src:annotation[src:name[text()='RegisterRestClient']] and src:block/src:function[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='Produces']] and src:annotation[src:name[text()='Traced']] and src:annotation[src:name[text()='Operation']])])))]",
        "candidate-id": 788072703,
        "grammar": "class with (function with (annotation \"GET\" ) ) must have (annotation \"RegisterRestClient\" and function with (annotation \"Path\" and annotation \"Produces\" and annotation \"Traced\" and annotation \"Operation\" ) ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='Path']] and src:block/src:function[(src:annotation[src:name[text()='GET']])])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='Path']] and src:block/src:function[(src:annotation[src:name[text()='GET']])])) and ((src:annotation[src:name[text()='RegisterRestClient']] and src:block/src:function[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='Produces']] and src:annotation[src:name[text()='Traced']])])))]",
        "candidate-id": 958033635,
        "grammar": "class with (annotation \"Path\" and function with (annotation \"GET\" ) ) must have (annotation \"RegisterRestClient\" and function with (annotation \"Path\" and annotation \"Produces\" and annotation \"Traced\" ) ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='Path']] and src:block/src:function[(src:annotation[src:name[text()='Produces']])])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='Path']] and src:block/src:function[(src:annotation[src:name[text()='Produces']])])) and ((src:annotation[src:name[text()='RegisterRestClient']] and src:block/src:function[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='GET']] and src:annotation[src:name[text()='Traced']])])))]",
        "candidate-id": 538030893,
        "grammar": "class with (annotation \"Path\" and function with (annotation \"Produces\" ) ) must have (annotation \"RegisterRestClient\" and function with (annotation \"Path\" and annotation \"GET\" and annotation \"Traced\" ) ) "
    },
    {
        "quantifier": "src:class[(src:block/src:function[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='GET']])])]",
        "constraint": "src:class[(((src:block/src:function[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='GET']])])) and ((src:annotation[src:name[text()='RegisterRestClient']] and src:annotation[src:name[text()='Path']])))]",
        "candidate-id": -1124395966,
        "grammar": "class with (function with (annotation \"Path\" and annotation \"GET\" ) ) must have (annotation \"RegisterRestClient\" and annotation \"Path\" ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='Path']] and src:block/src:function[(src:annotation[src:name[text()='Traced']])])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='Path']] and src:block/src:function[(src:annotation[src:name[text()='Traced']])])) and ((src:block/src:function[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='Produces']] and src:annotation[src:name[text()='GET']])])))]",
        "candidate-id": -222841034,
        "grammar": "class with (annotation \"Path\" and function with (annotation \"Traced\" ) ) must have (function with (annotation \"Path\" and annotation \"Produces\" and annotation \"GET\" ) ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='ApplicationScoped']])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='ApplicationScoped']])) and ((src:annotation[src:name[text()='Path']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='ConfigProperty']])] and src:block/src:function[(src:annotation[src:name[text()='Traced']])])))]",
        "candidate-id": 460474207,
        "grammar": "class with (annotation \"ApplicationScoped\" ) must have (annotation \"Path\" and declaration statement with (annotation \"ConfigProperty\" ) and function with (annotation \"Traced\" ) ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='Path']] and src:block/src:function[(src:annotation[src:name[text()='Path']])])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='Path']] and src:block/src:function[(src:annotation[src:name[text()='Path']])])) and ((src:annotation[src:name[text()='RegisterRestClient']] and src:block/src:function[(src:annotation[src:name[text()='Response']] and src:annotation[src:name[text()='GET']] and src:annotation[src:name[text()='Traced']] and src:annotation[src:name[text()='Operation']])])))]",
        "candidate-id": -149959793,
        "grammar": "class with (annotation \"Path\" and function with (annotation \"Path\" ) ) must have (annotation \"RegisterRestClient\" and function with (annotation \"Response\" and annotation \"GET\" and annotation \"Traced\" and annotation \"Operation\" ) ) "
    },
    {
        "quantifier": "src:class[(src:block/src:function[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='Traced']])])]",
        "constraint": "src:class[(((src:block/src:function[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='Traced']])])) and ((src:annotation[src:name[text()='Path']])))]",
        "candidate-id": -1119745953,
        "grammar": "class with (function with (annotation \"Path\" and annotation \"Traced\" ) ) must have (annotation \"Path\" ) "
    },
    {
        "quantifier": "src:class[(src:block/src:function[(src:annotation[src:name[text()='Produces']] and src:annotation[src:name[text()='Traced']])])]",
        "constraint": "src:class[(((src:block/src:function[(src:annotation[src:name[text()='Produces']] and src:annotation[src:name[text()='Traced']])])) and ((src:annotation[src:name[text()='Path']])))]",
        "candidate-id": 332895625,
        "grammar": "class with (function with (annotation \"Produces\" and annotation \"Traced\" ) ) must have (annotation \"Path\" ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='Path']] and src:block/src:function[(src:annotation[src:name[text()='Traced']])])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='Path']] and src:block/src:function[(src:annotation[src:name[text()='Traced']])])) and ((src:block/src:function[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='Produces']] and src:annotation[src:name[text()='GET']])])))]",
        "candidate-id": 1621230822,
        "grammar": "class with (annotation \"Path\" and function with (annotation \"Traced\" ) ) must have (function with (annotation \"Path\" and annotation \"Produces\" and annotation \"GET\" ) ) "
    },
    {
        "quantifier": "src:class[(src:block/src:function[(src:annotation[src:name[text()='Produces']] and src:annotation[src:name[text()='GET']])])]",
        "constraint": "src:class[(((src:block/src:function[(src:annotation[src:name[text()='Produces']] and src:annotation[src:name[text()='GET']])])) and ((src:annotation[src:name[text()='RegisterRestClient']] and src:annotation[src:name[text()='Path']])))]",
        "candidate-id": 1596508348,
        "grammar": "class with (function with (annotation \"Produces\" and annotation \"GET\" ) ) must have (annotation \"RegisterRestClient\" and annotation \"Path\" ) "
    },
    {
        "quantifier": "src:class[(src:block/src:function[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='Traced']])])]",
        "constraint": "src:class[(((src:block/src:function[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='Traced']])])) and ((src:annotation[src:name[text()='Path']])))]",
        "candidate-id": 724325903,
        "grammar": "class with (function with (annotation \"Path\" and annotation \"Traced\" ) ) must have (annotation \"Path\" ) "
    },
    {
        "quantifier": "src:class[(src:block/src:function[(src:annotation[src:name[text()='GET']] and src:annotation[src:name[text()='Traced']])])]",
        "constraint": "src:class[(((src:block/src:function[(src:annotation[src:name[text()='GET']] and src:annotation[src:name[text()='Traced']])])) and ((src:annotation[src:name[text()='Path']])))]",
        "candidate-id": 1037059232,
        "grammar": "class with (function with (annotation \"GET\" and annotation \"Traced\" ) ) must have (annotation \"Path\" ) "
    },
    {
        "quantifier": "src:class[(src:block/src:function[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='GET']])])]",
        "constraint": "src:class[(((src:block/src:function[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='GET']])])) and ((src:annotation[src:name[text()='RegisterRestClient']] and src:annotation[src:name[text()='Path']])))]",
        "candidate-id": 1353807258,
        "grammar": "class with (function with (annotation \"Path\" and annotation \"GET\" ) ) must have (annotation \"RegisterRestClient\" and annotation \"Path\" ) "
    },
    {
        "quantifier": "src:class[(src:block/src:function[(src:annotation[src:name[text()='Path']])])]",
        "constraint": "src:class[(((src:block/src:function[(src:annotation[src:name[text()='Path']])])) and ((src:block/src:function[(src:annotation[src:name[text()='GET']] and src:annotation[src:name[text()='Traced']])])))]",
        "candidate-id": 371646083,
        "grammar": "class with (function with (annotation \"Path\" ) ) must have (function with (annotation \"GET\" and annotation \"Traced\" ) ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='Path']] and src:block/src:function[(src:annotation[src:name[text()='GET']])])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='Path']] and src:block/src:function[(src:annotation[src:name[text()='GET']])])) and ((src:annotation[src:name[text()='RegisterRestClient']] and src:block/src:function[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='Produces']] and src:annotation[src:name[text()='Traced']])])))]",
        "candidate-id": -858730437,
        "grammar": "class with (annotation \"Path\" and function with (annotation \"GET\" ) ) must have (annotation \"RegisterRestClient\" and function with (annotation \"Path\" and annotation \"Produces\" and annotation \"Traced\" ) ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='Path']] and src:block/src:function[(src:annotation[src:name[text()='Path']])])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='Path']] and src:block/src:function[(src:annotation[src:name[text()='Path']])])) and ((src:annotation[src:name[text()='RegisterRestClient']] and src:block/src:function[(src:annotation[src:name[text()='Response']] and src:annotation[src:name[text()='Produces']] and src:annotation[src:name[text()='GET']] and src:annotation[src:name[text()='Traced']] and src:annotation[src:name[text()='Operation']])])))]",
        "candidate-id": -1479824569,
        "grammar": "class with (annotation \"Path\" and function with (annotation \"Path\" ) ) must have (annotation \"RegisterRestClient\" and function with (annotation \"Response\" and annotation \"Produces\" and annotation \"GET\" and annotation \"Traced\" and annotation \"Operation\" ) ) "
    },
    {
        "quantifier": "src:class[(descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='ConfigProperty']])])]",
        "constraint": "src:class[(((descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='ConfigProperty']])])) and ((src:annotation[src:name[text()='ApplicationScoped']] and src:annotation[src:name[text()='HealthCheck']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='String']] and src:annotation[src:name[text()='Inject']])])))]",
        "candidate-id": 710855498,
        "grammar": "class with (declaration statement with (annotation \"ConfigProperty\" ) ) must have (annotation \"ApplicationScoped\" and annotation \"HealthCheck\" and declaration statement with (annotation \"String\" and annotation \"Inject\" ) ) "
    },
    {
        "quantifier": "src:class[(descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='String']] and src:annotation[src:name[text()='ConfigProperty']] and src:annotation[src:name[text()='Inject']])])]",
        "constraint": "src:class[(((descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='String']] and src:annotation[src:name[text()='ConfigProperty']] and src:annotation[src:name[text()='Inject']])])) and ((src:annotation[src:name[text()='ApplicationScoped']] and src:annotation[src:name[text()='HealthCheck']])))]",
        "candidate-id": 1810004499,
        "grammar": "class with (declaration statement with (annotation \"String\" and annotation \"ConfigProperty\" and annotation \"Inject\" ) ) must have (annotation \"ApplicationScoped\" and annotation \"HealthCheck\" ) "
    },
    {
        "quantifier": "src:class[(descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']])])]",
        "constraint": "src:class[(((descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']])])) and ((descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='String']] and src:annotation[src:name[text()='ConfigProperty']])])))]",
        "candidate-id": -554362854,
        "grammar": "class with (declaration statement with (annotation \"Inject\" ) ) must have (declaration statement with (annotation \"String\" and annotation \"ConfigProperty\" ) ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='ApplicationScoped']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='ConfigProperty']])])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='ApplicationScoped']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='ConfigProperty']])])) and ((src:annotation[src:name[text()='HealthCheck']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='String']] and src:annotation[src:name[text()='Inject']])])))]",
        "candidate-id": -1077500854,
        "grammar": "class with (annotation \"ApplicationScoped\" and declaration statement with (annotation \"ConfigProperty\" ) ) must have (annotation \"HealthCheck\" and declaration statement with (annotation \"String\" and annotation \"Inject\" ) ) "
    },
    {
        "quantifier": "src:class[(descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='ConfigProperty']] and src:annotation[src:name[text()='Inject']])])]",
        "constraint": "src:class[(((descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='ConfigProperty']] and src:annotation[src:name[text()='Inject']])])) and ((descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='String']])])))]",
        "candidate-id": 1418037803,
        "grammar": "class with (declaration statement with (annotation \"ConfigProperty\" and annotation \"Inject\" ) ) must have (declaration statement with (annotation \"String\" ) ) "
    },
    {
        "quantifier": "src:class[(descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='ConfigProperty']])])]",
        "constraint": "src:class[(((descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='ConfigProperty']])])) and ((descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='String']] and src:annotation[src:name[text()='Inject']])])))]",
        "candidate-id": -982772412,
        "grammar": "class with (declaration statement with (annotation \"ConfigProperty\" ) ) must have (declaration statement with (annotation \"String\" and annotation \"Inject\" ) ) "
    },
    {
        "quantifier": "src:class[(descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='ConfigProperty']] and src:annotation[src:name[text()='Inject']])])]",
        "constraint": "src:class[(((descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='ConfigProperty']] and src:annotation[src:name[text()='Inject']])])) and ((descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='String']])])))]",
        "candidate-id": 431647674,
        "grammar": "class with (declaration statement with (annotation \"ConfigProperty\" and annotation \"Inject\" ) ) must have (declaration statement with (annotation \"String\" ) ) "
    },
    {
        "quantifier": "src:class[(descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='ConfigProperty']] and src:annotation[src:name[text()='Inject']])])]",
        "constraint": "src:class[(((descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='ConfigProperty']] and src:annotation[src:name[text()='Inject']])])) and ((descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='String']])])))]",
        "candidate-id": -1476698120,
        "grammar": "class with (declaration statement with (annotation \"ConfigProperty\" and annotation \"Inject\" ) ) must have (declaration statement with (annotation \"String\" ) ) "
    },
    {
        "quantifier": "src:class[(descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='String']] and src:annotation[src:name[text()='ConfigProperty']])])]",
        "constraint": "src:class[(((descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='String']] and src:annotation[src:name[text()='ConfigProperty']])])) and ((descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']])])))]",
        "candidate-id": 1504722182,
        "grammar": "class with (declaration statement with (annotation \"String\" and annotation \"ConfigProperty\" ) ) must have (declaration statement with (annotation \"Inject\" ) ) "
    },
    {
        "quantifier": "src:class[(descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='String']] and src:annotation[src:name[text()='Inject']])])]",
        "constraint": "src:class[(((descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='String']] and src:annotation[src:name[text()='Inject']])])) and ((descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='ConfigProperty']])])))]",
        "candidate-id": -114835556,
        "grammar": "class with (declaration statement with (annotation \"String\" and annotation \"Inject\" ) ) must have (declaration statement with (annotation \"ConfigProperty\" ) ) "
    },
    {
        "quantifier": "src:class[(descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='ConfigProperty']])])]",
        "constraint": "src:class[(((descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='ConfigProperty']])])) and ((descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']])])))]",
        "candidate-id": -297413640,
        "grammar": "class with (declaration statement with (annotation \"ConfigProperty\" ) ) must have (declaration statement with (annotation \"Inject\" ) ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='ApplicationScoped']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']])])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='ApplicationScoped']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']])])) and ((descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='ConfigProperty']])])))]",
        "candidate-id": 175480252,
        "grammar": "class with (annotation \"ApplicationScoped\" and declaration statement with (annotation \"Inject\" ) ) must have (declaration statement with (annotation \"ConfigProperty\" ) ) "
    },
    {
        "quantifier": "src:class[(src:block/src:function[(src:annotation[src:name[text()='Produces']])])]",
        "constraint": "src:class[(((src:block/src:function[(src:annotation[src:name[text()='Produces']])])) and ((src:block/src:function[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='Operation']])])))]",
        "candidate-id": 1392587348,
        "grammar": "class with (function with (annotation \"Produces\" ) ) must have (function with (annotation \"Path\" and annotation \"Operation\" ) ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='Path']] and src:block/src:function[(src:annotation[src:name[text()='Response']])])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='Path']] and src:block/src:function[(src:annotation[src:name[text()='Response']])])) and ((src:block/src:function[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='Operation']])])))]",
        "candidate-id": 263000292,
        "grammar": "class with (annotation \"Path\" and function with (annotation \"Response\" ) ) must have (function with (annotation \"Path\" and annotation \"Operation\" ) ) "
    },
    {
        "quantifier": "src:class[(src:block/src:function[(src:annotation[src:name[text()='Produces']] and src:annotation[src:name[text()='Path']])])]",
        "constraint": "src:class[(((src:block/src:function[(src:annotation[src:name[text()='Produces']] and src:annotation[src:name[text()='Path']])])) and ((src:annotation[src:name[text()='RegisterRestClient']] and src:annotation[src:name[text()='Path']])))]",
        "candidate-id": 649643651,
        "grammar": "class with (function with (annotation \"Produces\" and annotation \"Path\" ) ) must have (annotation \"RegisterRestClient\" and annotation \"Path\" ) "
    },
    {
        "quantifier": "src:class[(src:block/src:function[(src:annotation[src:name[text()='Response']])])]",
        "constraint": "src:class[(((src:block/src:function[(src:annotation[src:name[text()='Response']])])) and ((src:annotation[src:name[text()='Path']] and src:block/src:function[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='Operation']])])))]",
        "candidate-id": 1310849796,
        "grammar": "class with (function with (annotation \"Response\" ) ) must have (annotation \"Path\" and function with (annotation \"Path\" and annotation \"Operation\" ) ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='ApplicationScoped']] and src:block/src:function[(src:annotation[src:name[text()='Timeout']])])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='ApplicationScoped']] and src:block/src:function[(src:annotation[src:name[text()='Timeout']])])) and ((src:block/src:function[(src:annotation[src:name[text()='Fallback']])])))]",
        "candidate-id": -1504868995,
        "grammar": "class with (annotation \"ApplicationScoped\" and function with (annotation \"Timeout\" ) ) must have (function with (annotation \"Fallback\" ) ) "
    },
    {
        "quantifier": "src:class[(src:block/src:function[(src:annotation[src:name[text()='Fallback']] and src:annotation[src:name[text()='CompletionStage']])])]",
        "constraint": "src:class[(((src:block/src:function[(src:annotation[src:name[text()='Fallback']] and src:annotation[src:name[text()='CompletionStage']])])) and ((src:annotation[src:name[text()='Asynchronous']])))]",
        "candidate-id": -1705129842,
        "grammar": "class with (function with (annotation \"Fallback\" and annotation \"CompletionStage\" ) ) must have (annotation \"Asynchronous\" ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='ApplicationScoped']] and src:block/src:function[(src:annotation[src:name[text()='Fallback']])])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='ApplicationScoped']] and src:block/src:function[(src:annotation[src:name[text()='Fallback']])])) and ((src:block/src:function[(src:annotation[src:name[text()='boolean']])])))]",
        "candidate-id": 1110856329,
        "grammar": "class with (annotation \"ApplicationScoped\" and function with (annotation \"Fallback\" ) ) must have (function with (annotation \"boolean\" ) ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='Asynchronous']] and src:block/src:function[(src:annotation[src:name[text()='CompletionStage']])])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='Asynchronous']] and src:block/src:function[(src:annotation[src:name[text()='CompletionStage']])])) and ((src:block/src:function[(src:annotation[src:name[text()='Fallback']])])))]",
        "candidate-id": 665772254,
        "grammar": "class with (annotation \"Asynchronous\" and function with (annotation \"CompletionStage\" ) ) must have (function with (annotation \"Fallback\" ) ) "
    },
    {
        "quantifier": "src:class[(src:block/src:function[(src:annotation[src:name[text()='Retry']])])]",
        "constraint": "src:class[(((src:block/src:function[(src:annotation[src:name[text()='Retry']])])) and ((src:block/src:function[(src:annotation[src:name[text()='Fallback']])])))]",
        "candidate-id": 1078022917,
        "grammar": "class with (function with (annotation \"Retry\" ) ) must have (function with (annotation \"Fallback\" ) ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='Asynchronous']] and src:block/src:function[(src:annotation[src:name[text()='Fallback']])])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='Asynchronous']] and src:block/src:function[(src:annotation[src:name[text()='Fallback']])])) and ((src:block/src:function[(src:annotation[src:name[text()='CompletionStage']])])))]",
        "candidate-id": -1569963816,
        "grammar": "class with (annotation \"Asynchronous\" and function with (annotation \"Fallback\" ) ) must have (function with (annotation \"CompletionStage\" ) ) "
    },
    {
        "quantifier": "src:class[(src:block/src:function[(src:annotation[src:name[text()='Fallback']])])]",
        "constraint": "src:class[(((src:block/src:function[(src:annotation[src:name[text()='Fallback']])])) and ((src:annotation[src:name[text()='ApplicationScoped']])))]",
        "candidate-id": 1182104882,
        "grammar": "class with (function with (annotation \"Fallback\" ) ) must have (annotation \"ApplicationScoped\" ) "
    },
    {
        "quantifier": "src:class[(src:block/src:function[(src:annotation[src:name[text()='Fallback']] and src:annotation[src:name[text()='Timeout']])])]",
        "constraint": "src:class[(((src:block/src:function[(src:annotation[src:name[text()='Fallback']] and src:annotation[src:name[text()='Timeout']])])) and ((src:annotation[src:name[text()='ApplicationScoped']])))]",
        "candidate-id": -670721267,
        "grammar": "class with (function with (annotation \"Fallback\" and annotation \"Timeout\" ) ) must have (annotation \"ApplicationScoped\" ) "
    },
    {
        "quantifier": "src:class[(src:block/src:function[(src:annotation[src:name[text()='Incoming']])])]",
        "constraint": "src:class[(((src:block/src:function[(src:annotation[src:name[text()='Incoming']])])) and ((src:annotation[src:name[text()='ApplicationScoped']])))]",
        "candidate-id": 910026140,
        "grammar": "class with (function with (annotation \"Incoming\" ) ) must have (annotation \"ApplicationScoped\" ) "
    },
    {
        "quantifier": "src:class[(src:block/src:function[(src:annotation[src:name[text()='Outgoing']])])]",
        "constraint": "src:class[(((src:block/src:function[(src:annotation[src:name[text()='Outgoing']])])) and ((src:annotation[src:name[text()='ApplicationScoped']])))]",
        "candidate-id": -293446250,
        "grammar": "class with (function with (annotation \"Outgoing\" ) ) must have (annotation \"ApplicationScoped\" ) "
    },
    {
        "quantifier": "src:class[(src:block/src:function[(src:annotation[src:name[text()='Incoming']])])]",
        "constraint": "src:class[(((src:block/src:function[(src:annotation[src:name[text()='Incoming']])])) and ((src:annotation[src:name[text()='ApplicationScoped']])))]",
        "candidate-id": -597442730,
        "grammar": "class with (function with (annotation \"Incoming\" ) ) must have (annotation \"ApplicationScoped\" ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='RegisterRestClient']] and src:block/src:function[(src:annotation[src:name[text()='Path']])])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='RegisterRestClient']] and src:block/src:function[(src:annotation[src:name[text()='Path']])])) and ((src:annotation[src:name[text()='Path']] and src:block/src:function[(src:annotation[src:name[text()='String']] and src:annotation[src:name[text()='Produces']] and src:annotation[src:name[text()='GET']])])))]",
        "candidate-id": -447429904,
        "grammar": "class with (annotation \"RegisterRestClient\" and function with (annotation \"Path\" ) ) must have (annotation \"Path\" and function with (annotation \"String\" and annotation \"Produces\" and annotation \"GET\" ) ) "
    },
    {
        "quantifier": "src:class[(src:block/src:function[(src:annotation[src:name[text()='String']] and src:annotation[src:name[text()='Path']])])]",
        "constraint": "src:class[(((src:block/src:function[(src:annotation[src:name[text()='String']] and src:annotation[src:name[text()='Path']])])) and ((src:annotation[src:name[text()='RegisterRestClient']])))]",
        "candidate-id": -20402558,
        "grammar": "class with (function with (annotation \"String\" and annotation \"Path\" ) ) must have (annotation \"RegisterRestClient\" ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='RegisterRestClient']] and src:annotation[src:name[text()='Path']])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='RegisterRestClient']] and src:annotation[src:name[text()='Path']])) and ((src:block/src:function[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='Produces']] and src:annotation[src:name[text()='GET']])])))]",
        "candidate-id": -226497064,
        "grammar": "class with (annotation \"RegisterRestClient\" and annotation \"Path\" ) must have (function with (annotation \"Path\" and annotation \"Produces\" and annotation \"GET\" ) ) "
    },
    {
        "quantifier": "src:class[(descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='RestClient']])])]",
        "constraint": "src:class[(((descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='RestClient']])])) and ((descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']])])))]",
        "candidate-id": 669981210,
        "grammar": "class with (declaration statement with (annotation \"RestClient\" ) ) must have (declaration statement with (annotation \"Inject\" ) ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='RegisterRestClient']] and src:block/src:function[(src:annotation[src:name[text()='String']])])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='RegisterRestClient']] and src:block/src:function[(src:annotation[src:name[text()='String']])])) and ((src:block/src:function[(src:annotation[src:name[text()='Path']])])))]",
        "candidate-id": 728557548,
        "grammar": "class with (annotation \"RegisterRestClient\" and function with (annotation \"String\" ) ) must have (function with (annotation \"Path\" ) ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='RegisterRestClient']] and src:block/src:function[(src:annotation[src:name[text()='GET']])])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='RegisterRestClient']] and src:block/src:function[(src:annotation[src:name[text()='GET']])])) and ((src:annotation[src:name[text()='Path']] and src:block/src:function[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='Produces']])])))]",
        "candidate-id": -1705300636,
        "grammar": "class with (annotation \"RegisterRestClient\" and function with (annotation \"GET\" ) ) must have (annotation \"Path\" and function with (annotation \"Path\" and annotation \"Produces\" ) ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='RegisterRestClient']] and src:block/src:function[(src:annotation[src:name[text()='Produces']])])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='RegisterRestClient']] and src:block/src:function[(src:annotation[src:name[text()='Produces']])])) and ((src:annotation[src:name[text()='Path']] and src:block/src:function[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='GET']])])))]",
        "candidate-id": -308539306,
        "grammar": "class with (annotation \"RegisterRestClient\" and function with (annotation \"Produces\" ) ) must have (annotation \"Path\" and function with (annotation \"Path\" and annotation \"GET\" ) ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='ApplicationScoped']] and src:annotation[src:name[text()='HealthCheck']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='ConfigProperty']] and src:annotation[src:name[text()='Inject']])])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='ApplicationScoped']] and src:annotation[src:name[text()='HealthCheck']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='ConfigProperty']] and src:annotation[src:name[text()='Inject']])])) and ((descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='String']])])))]",
        "candidate-id": 1528918328,
        "grammar": "class with (annotation \"ApplicationScoped\" and annotation \"HealthCheck\" and declaration statement with (annotation \"ConfigProperty\" and annotation \"Inject\" ) ) must have (declaration statement with (annotation \"String\" ) ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='HealthCheck']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='ConfigProperty']] and src:annotation[src:name[text()='Inject']])])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='HealthCheck']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='ConfigProperty']] and src:annotation[src:name[text()='Inject']])])) and ((src:annotation[src:name[text()='ApplicationScoped']])))]",
        "candidate-id": 1314723926,
        "grammar": "class with (annotation \"HealthCheck\" and declaration statement with (annotation \"ConfigProperty\" and annotation \"Inject\" ) ) must have (annotation \"ApplicationScoped\" ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='ApplicationScoped']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='String']] and src:annotation[src:name[text()='Inject']])])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='ApplicationScoped']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='String']] and src:annotation[src:name[text()='Inject']])])) and ((src:annotation[src:name[text()='HealthCheck']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='ConfigProperty']])])))]",
        "candidate-id": 1360127590,
        "grammar": "class with (annotation \"ApplicationScoped\" and declaration statement with (annotation \"String\" and annotation \"Inject\" ) ) must have (annotation \"HealthCheck\" and declaration statement with (annotation \"ConfigProperty\" ) ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='ApplicationScoped']] and src:annotation[src:name[text()='Readiness']] and src:annotation[src:name[text()='HealthCheck']])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='ApplicationScoped']] and src:annotation[src:name[text()='Readiness']] and src:annotation[src:name[text()='HealthCheck']])) and ((descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']])])))]",
        "candidate-id": -1149035180,
        "grammar": "class with (annotation \"ApplicationScoped\" and annotation \"Readiness\" and annotation \"HealthCheck\" ) must have (declaration statement with (annotation \"Inject\" ) ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='ApplicationScoped']] and src:annotation[src:name[text()='Readiness']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']])])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='ApplicationScoped']] and src:annotation[src:name[text()='Readiness']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']])])) and ((src:annotation[src:name[text()='HealthCheck']])))]",
        "candidate-id": 643077398,
        "grammar": "class with (annotation \"ApplicationScoped\" and annotation \"Readiness\" and declaration statement with (annotation \"Inject\" ) ) must have (annotation \"HealthCheck\" ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='ApplicationScoped']] and src:annotation[src:name[text()='HealthCheck']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='String']])])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='ApplicationScoped']] and src:annotation[src:name[text()='HealthCheck']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='String']])])) and ((descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='ConfigProperty']] and src:annotation[src:name[text()='Inject']])])))]",
        "candidate-id": -431984988,
        "grammar": "class with (annotation \"ApplicationScoped\" and annotation \"HealthCheck\" and declaration statement with (annotation \"String\" ) ) must have (declaration statement with (annotation \"ConfigProperty\" and annotation \"Inject\" ) ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='HealthCheck']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='String']] and src:annotation[src:name[text()='ConfigProperty']] and src:annotation[src:name[text()='Inject']])])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='HealthCheck']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='String']] and src:annotation[src:name[text()='ConfigProperty']] and src:annotation[src:name[text()='Inject']])])) and ((src:annotation[src:name[text()='ApplicationScoped']])))]",
        "candidate-id": 1509801978,
        "grammar": "class with (annotation \"HealthCheck\" and declaration statement with (annotation \"String\" and annotation \"ConfigProperty\" and annotation \"Inject\" ) ) must have (annotation \"ApplicationScoped\" ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='Liveness']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']])])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='Liveness']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']])])) and ((src:annotation[src:name[text()='HealthCheck']])))]",
        "candidate-id": -1986875598,
        "grammar": "class with (annotation \"Liveness\" and declaration statement with (annotation \"Inject\" ) ) must have (annotation \"HealthCheck\" ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='ApplicationScoped']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='String']] and src:annotation[src:name[text()='ConfigProperty']] and src:annotation[src:name[text()='Inject']])])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='ApplicationScoped']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='String']] and src:annotation[src:name[text()='ConfigProperty']] and src:annotation[src:name[text()='Inject']])])) and ((src:annotation[src:name[text()='HealthCheck']])))]",
        "candidate-id": 2007483912,
        "grammar": "class with (annotation \"ApplicationScoped\" and declaration statement with (annotation \"String\" and annotation \"ConfigProperty\" and annotation \"Inject\" ) ) must have (annotation \"HealthCheck\" ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='Readiness']] and src:annotation[src:name[text()='HealthCheck']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']])])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='Readiness']] and src:annotation[src:name[text()='HealthCheck']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']])])) and ((src:annotation[src:name[text()='ApplicationScoped']])))]",
        "candidate-id": 145395464,
        "grammar": "class with (annotation \"Readiness\" and annotation \"HealthCheck\" and declaration statement with (annotation \"Inject\" ) ) must have (annotation \"ApplicationScoped\" ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='HealthCheck']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='ConfigProperty']])])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='HealthCheck']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='ConfigProperty']])])) and ((descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']])])))]",
        "candidate-id": 182635345,
        "grammar": "class with (annotation \"HealthCheck\" and declaration statement with (annotation \"ConfigProperty\" ) ) must have (declaration statement with (annotation \"Inject\" ) ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='ApplicationScoped']] and src:annotation[src:name[text()='Liveness']])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='ApplicationScoped']] and src:annotation[src:name[text()='Liveness']])) and ((src:annotation[src:name[text()='HealthCheck']])))]",
        "candidate-id": 1543175672,
        "grammar": "class with (annotation \"ApplicationScoped\" and annotation \"Liveness\" ) must have (annotation \"HealthCheck\" ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='ApplicationScoped']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='String']] and src:annotation[src:name[text()='ConfigProperty']] and src:annotation[src:name[text()='Inject']])])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='ApplicationScoped']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='String']] and src:annotation[src:name[text()='ConfigProperty']] and src:annotation[src:name[text()='Inject']])])) and ((src:annotation[src:name[text()='HealthCheck']])))]",
        "candidate-id": 437792324,
        "grammar": "class with (annotation \"ApplicationScoped\" and declaration statement with (annotation \"String\" and annotation \"ConfigProperty\" and annotation \"Inject\" ) ) must have (annotation \"HealthCheck\" ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='ApplicationScoped']] and src:annotation[src:name[text()='HealthCheck']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='ConfigProperty']])])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='ApplicationScoped']] and src:annotation[src:name[text()='HealthCheck']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='ConfigProperty']])])) and ((descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']])])))]",
        "candidate-id": 20293282,
        "grammar": "class with (annotation \"ApplicationScoped\" and annotation \"HealthCheck\" and declaration statement with (annotation \"ConfigProperty\" ) ) must have (declaration statement with (annotation \"Inject\" ) ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='ApplicationScoped']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='String']] and src:annotation[src:name[text()='ConfigProperty']])])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='ApplicationScoped']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='String']] and src:annotation[src:name[text()='ConfigProperty']])])) and ((descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']])])))]",
        "candidate-id": -1966197048,
        "grammar": "class with (annotation \"ApplicationScoped\" and declaration statement with (annotation \"String\" and annotation \"ConfigProperty\" ) ) must have (declaration statement with (annotation \"Inject\" ) ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='ApplicationScoped']] and src:annotation[src:name[text()='Health']])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='ApplicationScoped']] and src:annotation[src:name[text()='Health']])) and ((src:annotation[src:name[text()='HealthCheck']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']])])))]",
        "candidate-id": -1875407148,
        "grammar": "class with (annotation \"ApplicationScoped\" and annotation \"Health\" ) must have (annotation \"HealthCheck\" and declaration statement with (annotation \"Inject\" ) ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='Liveness']])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='Liveness']])) and ((src:annotation[src:name[text()='ApplicationScoped']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']])])))]",
        "candidate-id": -378229179,
        "grammar": "class with (annotation \"Liveness\" ) must have (annotation \"ApplicationScoped\" and declaration statement with (annotation \"Inject\" ) ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='ApplicationScoped']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='ConfigProperty']] and src:annotation[src:name[text()='Inject']])])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='ApplicationScoped']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='ConfigProperty']] and src:annotation[src:name[text()='Inject']])])) and ((descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='String']])])))]",
        "candidate-id": -652650054,
        "grammar": "class with (annotation \"ApplicationScoped\" and declaration statement with (annotation \"ConfigProperty\" and annotation \"Inject\" ) ) must have (declaration statement with (annotation \"String\" ) ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='ApplicationScoped']] and src:annotation[src:name[text()='HealthCheck']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='String']] and src:annotation[src:name[text()='ConfigProperty']])])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='ApplicationScoped']] and src:annotation[src:name[text()='HealthCheck']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='String']] and src:annotation[src:name[text()='ConfigProperty']])])) and ((descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']])])))]",
        "candidate-id": 554025540,
        "grammar": "class with (annotation \"ApplicationScoped\" and annotation \"HealthCheck\" and declaration statement with (annotation \"String\" and annotation \"ConfigProperty\" ) ) must have (declaration statement with (annotation \"Inject\" ) ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='ApplicationScoped']] and src:annotation[src:name[text()='HealthCheck']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='ConfigProperty']])])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='ApplicationScoped']] and src:annotation[src:name[text()='HealthCheck']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='ConfigProperty']])])) and ((descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='String']] and src:annotation[src:name[text()='Inject']])])))]",
        "candidate-id": -1455193346,
        "grammar": "class with (annotation \"ApplicationScoped\" and annotation \"HealthCheck\" and declaration statement with (annotation \"ConfigProperty\" ) ) must have (declaration statement with (annotation \"String\" and annotation \"Inject\" ) ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='ApplicationScoped']] and src:annotation[src:name[text()='HealthCheck']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='String']] and src:annotation[src:name[text()='Inject']])])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='ApplicationScoped']] and src:annotation[src:name[text()='HealthCheck']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='String']] and src:annotation[src:name[text()='Inject']])])) and ((descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='ConfigProperty']])])))]",
        "candidate-id": 1321089304,
        "grammar": "class with (annotation \"ApplicationScoped\" and annotation \"HealthCheck\" and declaration statement with (annotation \"String\" and annotation \"Inject\" ) ) must have (declaration statement with (annotation \"ConfigProperty\" ) ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='HealthCheck']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='ConfigProperty']] and src:annotation[src:name[text()='Inject']])])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='HealthCheck']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='ConfigProperty']] and src:annotation[src:name[text()='Inject']])])) and ((src:annotation[src:name[text()='ApplicationScoped']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='String']])])))]",
        "candidate-id": -160762702,
        "grammar": "class with (annotation \"HealthCheck\" and declaration statement with (annotation \"ConfigProperty\" and annotation \"Inject\" ) ) must have (annotation \"ApplicationScoped\" and declaration statement with (annotation \"String\" ) ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='HealthCheck']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='String']] and src:annotation[src:name[text()='ConfigProperty']] and src:annotation[src:name[text()='Inject']])])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='HealthCheck']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='String']] and src:annotation[src:name[text()='ConfigProperty']] and src:annotation[src:name[text()='Inject']])])) and ((src:annotation[src:name[text()='ApplicationScoped']])))]",
        "candidate-id": -59889610,
        "grammar": "class with (annotation \"HealthCheck\" and declaration statement with (annotation \"String\" and annotation \"ConfigProperty\" and annotation \"Inject\" ) ) must have (annotation \"ApplicationScoped\" ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='Liveness']] and src:annotation[src:name[text()='HealthCheck']])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='Liveness']] and src:annotation[src:name[text()='HealthCheck']])) and ((src:annotation[src:name[text()='ApplicationScoped']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']])])))]",
        "candidate-id": 233647615,
        "grammar": "class with (annotation \"Liveness\" and annotation \"HealthCheck\" ) must have (annotation \"ApplicationScoped\" and declaration statement with (annotation \"Inject\" ) ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='Health']] and src:annotation[src:name[text()='HealthCheck']])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='Health']] and src:annotation[src:name[text()='HealthCheck']])) and ((src:annotation[src:name[text()='ApplicationScoped']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']])])))]",
        "candidate-id": 1921878214,
        "grammar": "class with (annotation \"Health\" and annotation \"HealthCheck\" ) must have (annotation \"ApplicationScoped\" and declaration statement with (annotation \"Inject\" ) ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='HealthCheck']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='String']] and src:annotation[src:name[text()='ConfigProperty']])])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='HealthCheck']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='String']] and src:annotation[src:name[text()='ConfigProperty']])])) and ((descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']])])))]",
        "candidate-id": -1191978191,
        "grammar": "class with (annotation \"HealthCheck\" and declaration statement with (annotation \"String\" and annotation \"ConfigProperty\" ) ) must have (declaration statement with (annotation \"Inject\" ) ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='ApplicationScoped']] and src:annotation[src:name[text()='HealthCheck']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='String']] and src:annotation[src:name[text()='ConfigProperty']])])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='ApplicationScoped']] and src:annotation[src:name[text()='HealthCheck']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='String']] and src:annotation[src:name[text()='ConfigProperty']])])) and ((descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']])])))]",
        "candidate-id": -1354320254,
        "grammar": "class with (annotation \"ApplicationScoped\" and annotation \"HealthCheck\" and declaration statement with (annotation \"String\" and annotation \"ConfigProperty\" ) ) must have (declaration statement with (annotation \"Inject\" ) ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='Health']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']])])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='Health']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='Inject']])])) and ((src:annotation[src:name[text()='ApplicationScoped']] and src:annotation[src:name[text()='HealthCheck']])))]",
        "candidate-id": -580976504,
        "grammar": "class with (annotation \"Health\" and declaration statement with (annotation \"Inject\" ) ) must have (annotation \"ApplicationScoped\" and annotation \"HealthCheck\" ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='ApplicationScoped']] and src:annotation[src:name[text()='HealthCheck']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='ConfigProperty']] and src:annotation[src:name[text()='Inject']])])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='ApplicationScoped']] and src:annotation[src:name[text()='HealthCheck']] and descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='ConfigProperty']] and src:annotation[src:name[text()='Inject']])])) and ((descendant-or-self::src:decl_stmt/src:decl[(src:annotation[src:name[text()='String']])])))]",
        "candidate-id": -40773260,
        "grammar": "class with (annotation \"ApplicationScoped\" and annotation \"HealthCheck\" and declaration statement with (annotation \"ConfigProperty\" and annotation \"Inject\" ) ) must have (declaration statement with (annotation \"String\" ) ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='Path']] and src:block/src:function[(src:annotation[src:name[text()='Operation']])])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='Path']] and src:block/src:function[(src:annotation[src:name[text()='Operation']])])) and ((src:block/src:function[(src:annotation[src:name[text()='Response']] and src:annotation[src:name[text()='Path']])])))]",
        "candidate-id": 814531134,
        "grammar": "class with (annotation \"Path\" and function with (annotation \"Operation\" ) ) must have (function with (annotation \"Response\" and annotation \"Path\" ) ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='Tag']])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='Tag']])) and ((src:annotation[src:name[text()='Path']])))]",
        "candidate-id": 552330979,
        "grammar": "class with (annotation \"Tag\" ) must have (annotation \"Path\" ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='Path']])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='Path']])) and ((src:block/src:function[(src:annotation[src:name[text()='Operation']])])))]",
        "candidate-id": -516519425,
        "grammar": "class with (annotation \"Path\" ) must have (function with (annotation \"Operation\" ) ) "
    },
    {
        "quantifier": "src:class[(src:block/src:function[(src:annotation[src:name[text()='Operation']])])]",
        "constraint": "src:class[(((src:block/src:function[(src:annotation[src:name[text()='Operation']])])) and ((src:annotation[src:name[text()='Path']] and src:block/src:function[(src:annotation[src:name[text()='Produces']] and src:annotation[src:name[text()='GET']])])))]",
        "candidate-id": 528456996,
        "grammar": "class with (function with (annotation \"Operation\" ) ) must have (annotation \"Path\" and function with (annotation \"Produces\" and annotation \"GET\" ) ) "
    },
    {
        "quantifier": "src:class[(src:block/src:function[(src:annotation[src:name[text()='Response']] and src:annotation[src:name[text()='Operation']])])]",
        "constraint": "src:class[(((src:block/src:function[(src:annotation[src:name[text()='Response']] and src:annotation[src:name[text()='Operation']])])) and ((src:annotation[src:name[text()='Path']])))]",
        "candidate-id": -1828214096,
        "grammar": "class with (function with (annotation \"Response\" and annotation \"Operation\" ) ) must have (annotation \"Path\" ) "
    },
    {
        "quantifier": "src:class[(src:block/src:function[(src:annotation[src:name[text()='Operation']])])]",
        "constraint": "src:class[(((src:block/src:function[(src:annotation[src:name[text()='Operation']])])) and ((src:annotation[src:name[text()='Path']] and src:block/src:function[(src:annotation[src:name[text()='Response']])])))]",
        "candidate-id": -548003532,
        "grammar": "class with (function with (annotation \"Operation\" ) ) must have (annotation \"Path\" and function with (annotation \"Response\" ) ) "
    },
    {
        "quantifier": "src:class[(src:block/src:function[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='Operation']])])]",
        "constraint": "src:class[(((src:block/src:function[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='Operation']])])) and ((src:annotation[src:name[text()='Path']])))]",
        "candidate-id": 1870904105,
        "grammar": "class with (function with (annotation \"Path\" and annotation \"Operation\" ) ) must have (annotation \"Path\" ) "
    },
    {
        "quantifier": "src:class[(src:block/src:function[(src:annotation[src:name[text()='Operation']])])]",
        "constraint": "src:class[(((src:block/src:function[(src:annotation[src:name[text()='Operation']])])) and ((src:annotation[src:name[text()='Path']] and src:block/src:function[(src:annotation[src:name[text()='Response']])])))]",
        "candidate-id": 496128394,
        "grammar": "class with (function with (annotation \"Operation\" ) ) must have (annotation \"Path\" and function with (annotation \"Response\" ) ) "
    },
    {
        "quantifier": "src:class[(src:annotation[src:name[text()='Path']] and src:block/src:function[(src:annotation[src:name[text()='Response']])])]",
        "constraint": "src:class[(((src:annotation[src:name[text()='Path']] and src:block/src:function[(src:annotation[src:name[text()='Response']])])) and ((src:block/src:function[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='Operation']])])))]",
        "candidate-id": 2107072148,
        "grammar": "class with (annotation \"Path\" and function with (annotation \"Response\" ) ) must have (function with (annotation \"Path\" and annotation \"Operation\" ) ) "
    },
    {
        "quantifier": "src:class[(src:block/src:function[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='Operation']])])]",
        "constraint": "src:class[(((src:block/src:function[(src:annotation[src:name[text()='Path']] and src:annotation[src:name[text()='Operation']])])) and ((src:annotation[src:name[text()='Path']])))]",
        "candidate-id": 54140033,
        "grammar": "class with (function with (annotation \"Path\" and annotation \"Operation\" ) ) must have (annotation \"Path\" ) "
    }
]
