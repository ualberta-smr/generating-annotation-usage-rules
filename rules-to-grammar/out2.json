[
    {
        "id": 3,
        "rule": "class must have (function with (annotation \"org.eclipse.microprofile.faulttolerance.Bulkhead\" and annotation \"org.eclipse.microprofile.faulttolerance.Asynchronous\" ) )",
        "antecedent_origin": "class with (function with (annotation \"org.eclipse.microprofile.faulttolerance.Bulkhead\" ) ) must have (function with (annotation \"org.eclipse.microprofile.faulttolerance.Asynchronous\" ) ) "
    },
    {
        "id": 10,
        "rule": "class must have (annotation \"javax.enterprise.context.<ApplicationScoped,Dependent>\" and function with (annotation \"org.eclipse.microprofile.reactive.messaging.<Outgoing,Incoming>\" ) )",
        "antecedent_origin": "class with (function with (annotation \"org.eclipse.microprofile.reactive.messaging.<Outgoing,Incoming>\" ) ) must have (annotation \"javax.enterprise.context.<ApplicationScoped,Dependent>\" ) "
    },
    {
        "id": 11,
        "rule": "class must have (function with (annotation \"org.eclipse.microprofile.openapi.annotations.Operation\" and annotation \"javax.ws.rs.Path\" ) )",
        "antecedent_origin": "class with (function with (annotation \"org.eclipse.microprofile.openapi.annotations.Operation\" ) ) must have (function with (annotation \"javax.ws.rs.Path\" ) ) "
    },
    {
        "id": 1101,
        "rule": "class must have (annotation \"javax.ws.rs.Path\" and function with (annotation \"org.eclipse.microprofile.openapi.annotations.Operation\" ) )",
        "antecedent_origin": "class with (function with (annotation \"org.eclipse.microprofile.openapi.annotations.Operation\" ) ) must have (annotation \"javax.ws.rs.Path\" ) "
    },
    {
        "id": 13,
        "rule": "class must have (annotation \"org.eclipse.microprofile.openapi.annotations.tags.Tag\" and function with (annotation \"javax.ws.rs.Path\" ) )",
        "antecedent_origin": "class with (annotation \"org.eclipse.microprofile.openapi.annotations.tags.Tag\" ) must have (function with (annotation \"javax.ws.rs.Path\" ) ) "
    },
    {
        "id": 1301,
        "rule": "class must have (annotation \"org.eclipse.microprofile.openapi.annotations.tags.Tag\" and annotation \"javax.ws.rs.Path\" )",
        "antecedent_origin": "class with (annotation \"org.eclipse.microprofile.openapi.annotations.tags.Tag\" ) must have (annotation \"javax.ws.rs.Path\" ) "
    },
    {
        "id": 14,
        "rule": "class must have (annotation \"org.eclipse.microprofile.rest.client.inject.RegisterRestClient\" and function with (annotation \"javax.ws.rs.Path\" ) )",
        "antecedent_origin": "class with (annotation \"org.eclipse.microprofile.rest.client.inject.RegisterRestClient\" ) must have (function with (annotation \"javax.ws.rs.Path\" ) ) "
    },
    {
        "id": 1401,
        "rule": "class must have (annotation \"org.eclipse.microprofile.rest.client.inject.RegisterRestClient\" and annotation \"javax.ws.rs.Path\" )",
        "antecedent_origin": "class with (annotation \"org.eclipse.microprofile.rest.client.inject.RegisterRestClient\" ) must have (annotation \"javax.ws.rs.Path\" ) "
    },
    {
        "id": 18,
        "rule": "class must have (declaration statement with (annotation \"org.eclipse.microprofile.jwt.Claim\" and annotation \"javax.inject.Inject\" ) )",
        "antecedent_origin": "class with (declaration statement with (annotation \"org.eclipse.microprofile.jwt.Claim\" ) ) must have (declaration statement with (annotation \"javax.inject.Inject\" ) ) "
    },
    {
        "id": 19,
        "rule": "class must have (declaration statement with (annotation \"org.eclipse.microprofile.rest.client.inject.RestClient\" and annotation \"javax.inject.Inject\" ) )",
        "antecedent_origin": "class with (declaration statement with (annotation \"org.eclipse.microprofile.rest.client.inject.RestClient\" ) ) must have (declaration statement with (annotation \"javax.inject.Inject\" ) ) "
    },
    {
        "id": 20,
        "rule": "class must have (declaration statement with (annotation \"javax.inject.Inject\" and type \"org.eclipse.microprofile.jwt.JsonWebToken\" ) )",
        "antecedent_origin": "class with (declaration statement with (type \"org.eclipse.microprofile.jwt.JsonWebToken\" ) ) must have (declaration statement with (annotation \"javax.inject.Inject\" ) ) "
    },
    {
        "id": 21,
        "rule": "class must have (annotation \"javax.ws.rs.<Produces,Consumes,GET,POST,PUT,DELETE,UPDATE>\" and annotation \"javax.ws.rs.Path\" )",
        "antecedent_origin": "class with (annotation \"javax.ws.rs.<Produces,Consumes,GET,POST,PUT,DELETE,UPDATE>\" ) must have (annotation \"javax.ws.rs.Path\" ) "
    },
    {
        "id": 2101,
        "rule": "class must have (annotation \"javax.ws.rs.<Produces,Consumes,GET,POST,PUT,DELETE,UPDATE>\" and function with (annotation \"javax.ws.rs.Path\" ) )",
        "antecedent_origin": "class with (annotation \"javax.ws.rs.<Produces,Consumes,GET,POST,PUT,DELETE,UPDATE>\" ) must have (function with (annotation \"javax.ws.rs.Path\" ) ) "
    },
    {
        "id": 2102,
        "rule": "class must have (annotation \"javax.ws.rs.Path\" and function with (annotation \"javax.ws.rs.<Produces,Consumes,GET,POST,PUT,DELETE,UPDATE>\" ) )",
        "antecedent_origin": "class with (function with (annotation \"javax.ws.rs.<Produces,Consumes,GET,POST,PUT,DELETE,UPDATE>\" ) ) must have (annotation \"javax.ws.rs.Path\" ) "
    },
    {
        "id": 2103,
        "rule": "class must have (function with (annotation \"javax.ws.rs.<Produces,Consumes,GET,POST,PUT,DELETE,UPDATE>\" and annotation \"javax.ws.rs.Path\" ) )",
        "antecedent_origin": "class with (function with (annotation \"javax.ws.rs.<Produces,Consumes,GET,POST,PUT,DELETE,UPDATE>\" ) ) must have (function with (annotation \"javax.ws.rs.Path\" ) ) "
    },
    {
        "id": 23,
        "rule": "class must have (annotation \"org.eclipse.microprofile.graphql.GraphQLApi\" and function with (annotation \"org.eclipse.microprofile.graphql.<Mutation,Query>\" ) )",
        "antecedent_origin": "class with (function with (annotation \"org.eclipse.microprofile.graphql.<Mutation,Query>\" ) ) must have (annotation \"org.eclipse.microprofile.graphql.GraphQLApi\" ) "
    }
]